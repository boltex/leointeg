{
  "name": "leointeg",
  "displayName": "Leo Editor Integration with Visual Studio Code",
  "description": "Use Leo, the literate editor with outline, directly in vscode.",
  "version": "0.1.9",
  "author": {
    "name": "FÃ©lix"
  },
  "publisher": "boltex",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/boltex/leointeg"
  },
  "engines": {
    "vscode": "^1.42.0"
  },
  "keywords": [
    "leo",
    "literate",
    "outline",
    "programming",
    "editor"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onView:leoIntegration",
    "workspaceContains:**/*.leo"
  ],
  "main": "./dist/extension",
  "icon": "resources/leoapp128px.png",
  "galleryBanner": {
    "color": "#fffbdc",
    "theme": "light"
  },
  "contributes": {
    "configuration": {
      "title": "Leo Integration",
      "properties": {
        "leoIntegration.treeKeepFocus": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Specifies whether to keep focus in the outline when selecting a node"
        },
        "leoIntegration.treeKeepFocusWhenAside": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Specifies whether to keep focus in the outline when opening a body pane on the side"
        },
        "leoIntegration.statusBarString": {
          "scope": "application",
          "default": "Literate",
          "type": "string",
          "description": "Sets the message string of the Status Bar Indicator"
        },
        "leoIntegration.statusBarColor": {
          "scope": "application",
          "default": "fb7c47",
          "type": "string",
          "description": "Specifies the hexadecimal color string for the Status Bar Indicator"
        },
        "leoIntegration.treeInExplorer": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Show the outline tree in the explorer view"
        },
        "leoIntegration.showOpenAside": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Offer 'Open to the Side' in nodes context menu"
        },
        "leoIntegration.showArrowsOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Move Node' arrow buttons on tree nodes"
        },
        "leoIntegration.showAddOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Insert' button on tree nodes"
        },
        "leoIntegration.showMarkOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Mark/Unmark' buttons on tree nodes"
        },
        "leoIntegration.showCloneOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Clone' button on tree nodes"
        },
        "leoIntegration.showCopyOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Copy' button on tree nodes"
        },
        "leoIntegration.invertNodeContrast": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Inverts the contrast of the dirty/clean border aspect of tree nodes"
        },
        "leoIntegration.bodyEditDelay": {
          "scope": "application",
          "type": "number",
          "default": 500,
          "minimum": 250,
          "maximum": 1000,
          "description": "Specifies delay time for edits to be sent to Leo, in milliseconds"
        },
        "leoIntegration.leoPythonCommand": {
          "scope": "application",
          "default": "",
          "type": "string",
          "description": "Specifies the command to start python (Defaults to 'py' on windows and 'python3' otherwise)"
        },
        "leoIntegration.startServerAutomatically": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Starts a LeoBridge server automatically, by running the leobridgeserver.py python script"
        },
        "leoIntegration.connectToServerAutomatically": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Connect automatically to a Leo server on specified 'Connection Port' upon activation of this extension"
        },
        "leoIntegration.connectionAddress": {
          "default": "localhost",
          "scope": "application",
          "type": "string",
          "description": "Connection host"
        },
        "leoIntegration.connectionPort": {
          "default": 32125,
          "scope": "application",
          "minimum": 0,
          "maximum": 65535,
          "type": "number",
          "description": "Connection port"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "leoIntegrationView",
          "title": "Leo",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "leoIntegrationExplorer",
          "name": "Leo Outline",
          "when": "treeInExplorer==true && !leoDisconnected"
        }
      ],
      "leoIntegrationView": [
        {
          "id": "leoIntegration",
          "name": "Outline",
          "when": "!leoDisconnected"
        }
      ]
    },
    "commands": [
      {
        "command": "leointeg.showSettingsPage",
        "title": "Open Settings",
        "category": "Leo",
        "icon": {
          "light": "resources/light/gear.svg",
          "dark": "resources/dark/gear.svg"
        }
      },
      {
        "command": "leointeg.showWelcomePage",
        "title": "Welcome",
        "category": "Leo"
      },
      {
        "command": "leointeg.test",
        "category": "Leo",
        "title": "Test Leo Integration"
      },
      {
        "command": "leointeg.startServer",
        "category": "Leo",
        "title": "Start Leo Bridge Server"
      },
      {
        "command": "leointeg.connectToServer",
        "title": "Connect to Leo Bridge server",
        "category": "Leo",
        "icon": {
          "light": "resources/light/connect.svg",
          "dark": "resources/dark/connect.svg"
        }
      },
      {
        "command": "leointeg.showLogPane",
        "category": "Leo",
        "title": "Show Log Pane"
      },
      {
        "command": "leointeg.openLeoFile",
        "title": "Open Leo File",
        "category": "Leo",
        "icon": {
          "light": "resources/light/folder.svg",
          "dark": "resources/dark/folder.svg"
        }
      },
      {
        "command": "leointeg.closeLeoFile",
        "title": "Close Leo File",
        "category": "Leo",
        "icon": {
          "light": "resources/light/close.svg",
          "dark": "resources/dark/close.svg"
        }
      },
      {
        "command": "leointeg.saveLeoFile",
        "category": "Leo",
        "title": "Save Leo File",
        "icon": {
          "light": "resources/light/save.svg",
          "dark": "resources/dark/save.svg"
        }
      },
      {
        "command": "leointeg.editHeadline",
        "category": "Leo",
        "title": "Edit Headline",
        "icon": {
          "light": "resources/light/edit.svg",
          "dark": "resources/dark/edit.svg"
        }
      },
      {
        "command": "leointeg.editSelectedHeadline",
        "category": "Leo",
        "title": "Edit Headline"
      },
      {
        "command": "leointeg.openAside",
        "category": "Leo",
        "title": "Open to the Side"
      },
      {
        "command": "leointeg.mark",
        "category": "Leo",
        "title": "Mark",
        "icon": {
          "light": "resources/light/mark.svg",
          "dark": "resources/dark/mark.svg"
        }
      },
      {
        "command": "leointeg.markSelection",
        "category": "Leo",
        "title": "Mark"
      },
      {
        "command": "leointeg.unmark",
        "category": "Leo",
        "title": "Unmark",
        "icon": {
          "light": "resources/light/unmark.svg",
          "dark": "resources/dark/unmark.svg"
        }
      },
      {
        "command": "leointeg.unmarkSelection",
        "category": "Leo",
        "title": "Unmark"
      },
      {
        "command": "leointeg.copyNode",
        "category": "Leo",
        "title": "Copy Node",
        "icon": {
          "light": "resources/light/clipboard.svg",
          "dark": "resources/dark/clipboard.svg"
        }
      },
      {
        "command": "leointeg.copyNodeSelection",
        "category": "Leo",
        "title": "Copy Node"
      },
      {
        "command": "leointeg.cutNode",
        "category": "Leo",
        "title": "Cut Node"
      },
      {
        "command": "leointeg.cutNodeSelection",
        "category": "Leo",
        "title": "Cut Node"
      },
      {
        "command": "leointeg.pasteNode",
        "category": "Leo",
        "title": "Paste Node"
      },
      {
        "command": "leointeg.pasteNodeAtSelection",
        "category": "Leo",
        "title": "Paste Node"
      },
      {
        "command": "leointeg.pasteNodeAsClone",
        "category": "Leo",
        "title": "Paste Node as Clone"
      },
      {
        "command": "leointeg.pasteNodeAsCloneAtSelection",
        "category": "Leo",
        "title": "Paste Node as Clone"
      },
      {
        "command": "leointeg.delete",
        "category": "Leo",
        "title": "Delete",
        "icon": {
          "light": "resources/light/close.svg",
          "dark": "resources/dark/close.svg"
        }
      },
      {
        "command": "leointeg.deleteSelection",
        "category": "Leo",
        "title": "Delete Node"
      },
      {
        "command": "leointeg.moveOutlineDown",
        "category": "Leo",
        "title": "Move Outline Down",
        "icon": {
          "light": "resources/light/arrow-down.svg",
          "dark": "resources/dark/arrow-down.svg"
        }
      },
      {
        "command": "leointeg.moveOutlineDownSelection",
        "category": "Leo",
        "title": "Move Outline Down"
      },
      {
        "command": "leointeg.moveOutlineLeft",
        "category": "Leo",
        "title": "Move Outline Left",
        "icon": {
          "light": "resources/light/arrow-left.svg",
          "dark": "resources/dark/arrow-left.svg"
        }
      },
      {
        "command": "leointeg.moveOutlineLeftSelection",
        "category": "Leo",
        "title": "Move Outline Left"
      },
      {
        "command": "leointeg.moveOutlineRight",
        "category": "Leo",
        "title": "Move Outline Right",
        "icon": {
          "light": "resources/light/arrow-right.svg",
          "dark": "resources/dark/arrow-right.svg"
        }
      },
      {
        "command": "leointeg.moveOutlineRightSelection",
        "category": "Leo",
        "title": "Move Outline Right"
      },
      {
        "command": "leointeg.moveOutlineUp",
        "category": "Leo",
        "title": "Move Outline Up",
        "icon": {
          "light": "resources/light/arrow-up.svg",
          "dark": "resources/dark/arrow-up.svg"
        }
      },
      {
        "command": "leointeg.moveOutlineUpSelection",
        "category": "Leo",
        "title": "Move Outline Up"
      },
      {
        "command": "leointeg.insertNode",
        "category": "Leo",
        "title": "Insert Node",
        "icon": {
          "light": "resources/light/plus.svg",
          "dark": "resources/dark/plus.svg"
        }
      },
      {
        "command": "leointeg.insertNodeSelection",
        "category": "Leo",
        "title": "Insert Node",
        "icon": {
          "light": "resources/light/plus.svg",
          "dark": "resources/dark/plus.svg"
        }
      },
      {
        "command": "leointeg.cloneNode",
        "category": "Leo",
        "title": "Clone Node",
        "icon": {
          "light": "resources/light/link.svg",
          "dark": "resources/dark/link.svg"
        }
      },
      {
        "command": "leointeg.cloneNodeSelection",
        "category": "Leo",
        "title": "Clone Node"
      },
      {
        "command": "leointeg.promote",
        "category": "Leo",
        "title": "Promote"
      },
      {
        "command": "leointeg.promoteSelection",
        "category": "Leo",
        "title": "Promote"
      },
      {
        "command": "leointeg.demote",
        "category": "Leo",
        "title": "Demote"
      },
      {
        "command": "leointeg.demoteSelection",
        "category": "Leo",
        "title": "Demote"
      },
      {
        "command": "leointeg.sortChildrenSelection",
        "category": "Leo",
        "title": "Sort Children"
      },
      {
        "command": "leointeg.sortSiblingsSelection",
        "category": "Leo",
        "title": "Sort Siblings"
      },
      {
        "command": "leointeg.hoistNode",
        "category": "Leo",
        "title": "Hoist"
      },
      {
        "command": "leointeg.hoistSelection",
        "category": "Leo",
        "title": "Hoist"
      },
      {
        "command": "leointeg.deHoist",
        "category": "Leo",
        "title": "De-Hoist"
      },
      {
        "command": "leointeg.undo",
        "category": "Leo",
        "title": "Undo",
        "icon": {
          "light": "resources/light/undo.svg",
          "dark": "resources/dark/undo.svg"
        }
      },
      {
        "command": "leointeg.redo",
        "category": "Leo",
        "title": "Redo",
        "icon": {
          "light": "resources/light/redo.svg",
          "dark": "resources/dark/redo.svg"
        }
      },
      {
        "command": "leointeg.executeScriptSelection",
        "category": "Leo",
        "title": "Execute Script"
      },
      {
        "command": "leointeg.cloneFindAll",
        "category": "Leo",
        "title": "Clone Find All"
      },
      {
        "command": "leointeg.cloneFindAllFlattened",
        "category": "Leo",
        "title": "Clone Find All Flattened"
      },
      {
        "command": "leointeg.cloneFindMarked",
        "category": "Leo",
        "title": "Clone Find Marked"
      },
      {
        "command": "leointeg.cloneFindFlattenedMarked",
        "category": "Leo",
        "title": "cffm - Clone Find Flattened Marked"
      },
      {
        "command": "leointeg.extract",
        "category": "Leo",
        "title": "Extract"
      },
      {
        "command": "leointeg.extractNames",
        "category": "Leo",
        "title": "Extract Names"
      },
      {
        "command": "leointeg.copyMarked",
        "category": "Leo",
        "title": "Copy Marked"
      },
      {
        "command": "leointeg.diffMarkedNodes",
        "category": "Leo",
        "title": "Diff Marked Nodes"
      },
      {
        "command": "leointeg.gotoNextMarked",
        "category": "Leo",
        "title": "Goto Next Marked"
      },
      {
        "command": "leointeg.markChangedItems",
        "category": "Leo",
        "title": "Mark Changed Items"
      },
      {
        "command": "leointeg.markSubheads",
        "category": "Leo",
        "title": "Mark Subheads"
      },
      {
        "command": "leointeg.unmarkAll",
        "category": "Leo",
        "title": "Unmark All"
      },
      {
        "command": "leointeg.cloneMarkedNodes",
        "category": "Leo",
        "title": "Clone Marked Nodes"
      },
      {
        "command": "leointeg.deleteMarkedNodes",
        "category": "Leo",
        "title": "Delete Marked Nodes"
      },
      {
        "command": "leointeg.moveMarkedNodes",
        "category": "Leo",
        "title": "Move Marked Nodes"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "leointeg.startServer",
          "when": "!leoBridgeReady && !leoTreeOpened && !leoServerStarted"
        },
        {
          "command": "leointeg.connectToServer",
          "when": "!leoBridgeReady && !leoTreeOpened && !leoDisconnected"
        },
        {
          "command": "leointeg.openLeoFile",
          "when": "leoBridgeReady==true && !leoTreeOpened"
        },
        {
          "command": "leointeg.showLogPane",
          "when": "leoBridgeReady==true"
        },
        {
          "command": "leointeg.closeLeoFile",
          "when": "leoTreeOpened==true"
        },
        {
          "command": "leointeg.saveLeoFile",
          "when": "leoTreeOpened==true"
        },
        {
          "command": "leointeg.editSelectedHeadline",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.markSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.unmarkSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.copyNodeSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.cutNodeSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.pasteNodeAtSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.pasteNodeAsCloneAtSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.deleteSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.moveOutlineDownSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.moveOutlineLeftSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.moveOutlineRightSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.moveOutlineUpSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.insertNodeSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.cloneNodeSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.promoteSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.demoteSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.sortChildrenSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.sortSiblingsSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.executeScriptSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.undo",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.redo",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.hoistSelection",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.deHoist",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.cloneFindAll",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.cloneFindAllFlattened",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.cloneFindMarked",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.cloneFindFlattenedMarked",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.extract",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.extractNames",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.copyMarked",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.diffMarkedNodes",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.gotoNextMarked",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.markChangedItems",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.markSubheads",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.unmarkAll",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.cloneMarkedNodes",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.deleteMarkedNodes",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leoInteg.moveMarkedNodes",
          "when": "leoObjectSelected==true"
        },
        {
          "command": "leointeg.editHeadline",
          "when": "false"
        },
        {
          "command": "leointeg.openAside",
          "when": "false"
        },
        {
          "command": "leointeg.mark",
          "when": "false"
        },
        {
          "command": "leointeg.unmark",
          "when": "false"
        },
        {
          "command": "leointeg.copyNode",
          "when": "false"
        },
        {
          "command": "leointeg.cutNode",
          "when": "false"
        },
        {
          "command": "leointeg.pasteNode",
          "when": "false"
        },
        {
          "command": "leointeg.pasteNodeAsClone",
          "when": "false"
        },
        {
          "command": "leointeg.delete",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineDown",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineLeft",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineRight",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineUp",
          "when": "false"
        },
        {
          "command": "leointeg.insertNode",
          "when": "false"
        },
        {
          "command": "leointeg.cloneNode",
          "when": "false"
        },
        {
          "command": "leointeg.promote",
          "when": "false"
        },
        {
          "command": "leointeg.demote",
          "when": "false"
        },
        {
          "command": "leoInteg.hoistNode",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "leointeg.connectToServer",
          "when": "!leoBridgeReady && !leoTreeOpened && !leoDisconnected",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.openLeoFile",
          "when": "leoBridgeReady==true && !leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.saveLeoFile",
          "when": "leoTreeOpened==true",
          "group": "navigation@2"
        },
        {
          "command": "leointeg.undo",
          "when": "leoTreeOpened==true",
          "group": "navigation@3"
        },
        {
          "command": "leointeg.redo",
          "when": "leoTreeOpened==true",
          "group": "navigation@4"
        }
      ],
      "view/item/context": [
        {
          "command": "leointeg.editHeadline",
          "when": "viewItem =~ /leoNode/",
          "group": "inline@1"
        },
        {
          "command": "leointeg.insertNode",
          "when": "showAddOnNodes == true && viewItem =~ /leoNode/",
          "group": "inline@2"
        },
        {
          "command": "leointeg.moveOutlineDown",
          "when": "showArrowsOnNodes == true && viewItem =~ /leoNode/",
          "group": "inline@3"
        },
        {
          "command": "leointeg.moveOutlineLeft",
          "when": "showArrowsOnNodes == true && viewItem =~ /leoNode/",
          "group": "inline@3"
        },
        {
          "command": "leointeg.moveOutlineRight",
          "when": "showArrowsOnNodes == true && viewItem =~ /leoNode/",
          "group": "inline@3"
        },
        {
          "command": "leointeg.moveOutlineUp",
          "when": "showArrowsOnNodes == true && viewItem =~ /leoNode/",
          "group": "inline@3"
        },
        {
          "command": "leointeg.copyNode",
          "when": "showCopyOnNodes == true && viewItem =~ /leoNode/",
          "group": "inline@4"
        },
        {
          "command": "leointeg.cloneNode",
          "when": "showCloneOnNodes == true && viewItem =~ /leoNode/",
          "group": "inline@4"
        },
        {
          "command": "leointeg.mark",
          "when": "showMarkOnNodes == true && viewItem == leoNode",
          "group": "inline@5"
        },
        {
          "command": "leointeg.unmark",
          "when": "showMarkOnNodes == true && viewItem == leoNodeMarked",
          "group": "inline@5"
        },
        {
          "command": "leointeg.openAside",
          "when": "showOpenAside == true && viewItem =~ /leoNode/",
          "group": "leoNodeContext1@1"
        },
        {
          "command": "leointeg.mark",
          "when": "viewItem == leoNode",
          "group": "leoNodeContext2@1"
        },
        {
          "command": "leointeg.unmark",
          "when": "viewItem == leoNodeMarked",
          "group": "leoNodeContext2@2"
        },
        {
          "command": "leointeg.copyNode",
          "when": "viewItem =~ /leoNode/",
          "group": "leoNodeContext2@3"
        },
        {
          "command": "leointeg.cutNode",
          "when": "viewItem =~ /leoNode/",
          "group": "leoNodeContext2@4"
        },
        {
          "command": "leointeg.pasteNode",
          "when": "viewItem =~ /leoNode/",
          "group": "leoNodeContext2@5"
        },
        {
          "command": "leointeg.pasteNodeAsClone",
          "when": "viewItem =~ /leoNode/",
          "group": "leoNodeContext2@6"
        },
        {
          "command": "leointeg.delete",
          "when": "viewItem =~ /leoNode/",
          "group": "leoNodeContext2@7"
        },
        {
          "command": "leointeg.insertNode",
          "when": "leoTreeOpened==true",
          "group": "leoNodeContext3@1"
        },
        {
          "command": "leointeg.cloneNode",
          "when": "leoTreeOpened==true",
          "group": "leoNodeContext3@2"
        },
        {
          "command": "leointeg.promote",
          "when": "leoTreeOpened==true",
          "group": "leoNodeContext3@3"
        },
        {
          "command": "leointeg.demote",
          "when": "leoTreeOpened==true",
          "group": "leoNodeContext3@4"
        }
      ]
    },
    "keybindings": [
      {
        "command": "leointeg.editSelectedHeadline",
        "key": "ctrl+h",
        "mac": "cmd+h",
        "when": "leoTreeOpened && leoObjectSelected"
      },
      {
        "command": "leointeg.markSelection",
        "key": "ctrl+m",
        "mac": "cmd+m",
        "when": "leoTreeOpened && leoObjectSelected && !leoNodeMarked"
      },
      {
        "command": "leointeg.unmarkSelection",
        "key": "ctrl+m",
        "mac": "cmd+m",
        "when": "leoTreeOpened && leoObjectSelected && leoNodeMarked"
      },
      {
        "command": "leointeg.promoteSelection",
        "key": "ctrl+[BracketLeft]",
        "mac": "cmd+[BracketLeft]",
        "when": "leoTreeOpened && leoObjectSelected"
      },
      {
        "command": "leointeg.demoteSelection",
        "key": "ctrl+[BracketRight]",
        "mac": "cmd+[BracketRight]",
        "when": "leoTreeOpened && leoObjectSelected"
      },
      {
        "command": "leointeg.moveOutlineDownSelection",
        "key": "ctrl+d",
        "mac": "cmd+d",
        "when": "leoTreeOpened && leoObjectSelected && !editorHasSelection"
      },
      {
        "command": "leointeg.moveOutlineLeftSelection",
        "key": "ctrl+l",
        "mac": "cmd+l",
        "when": "leoTreeOpened && leoObjectSelected && !editorHasSelection"
      },
      {
        "command": "leointeg.moveOutlineRightSelection",
        "key": "ctrl+r",
        "mac": "cmd+r",
        "when": "leoTreeOpened && leoObjectSelected && !editorHasSelection"
      },
      {
        "command": "leointeg.moveOutlineUpSelection",
        "key": "ctrl+u",
        "mac": "cmd+u",
        "when": "leoTreeOpened && leoObjectSelected && !editorHasSelection"
      },
      {
        "command": "leointeg.moveOutlineDownSelection",
        "key": "shift+alt+down",
        "mac": "shift+alt+down",
        "when": "leoTreeOpened && leoObjectSelected && !editorHasSelection"
      },
      {
        "command": "leointeg.moveOutlineLeftSelection",
        "key": "shift+alt+left",
        "mac": "shift+alt+left",
        "when": "leoTreeOpened && leoObjectSelected && !editorHasSelection"
      },
      {
        "command": "leointeg.moveOutlineRightSelection",
        "key": "shift+alt+right",
        "mac": "shift+alt+right",
        "when": "leoTreeOpened && leoObjectSelected && !editorHasSelection"
      },
      {
        "command": "leointeg.moveOutlineUpSelection",
        "key": "shift+alt+up",
        "mac": "shift+alt+up",
        "when": "leoTreeOpened && leoObjectSelected && !editorHasSelection"
      },
      {
        "command": "leointeg.insertNodeSelection",
        "key": "ctrl+i",
        "mac": "cmd+i",
        "when": "leoTreeOpened && leoObjectSelected && !editorHasSelection"
      },
      {
        "command": "leointeg.cutNodeSelection",
        "key": "ctrl+shift+x",
        "mac": "cmd+shift+x",
        "when": "leoTreeOpened && leoObjectSelected && !editorHasSelection"
      },
      {
        "command": "leointeg.copyNodeSelection",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c",
        "when": "leoTreeOpened && leoObjectSelected && !editorHasSelection"
      },
      {
        "command": "leointeg.pasteNodeAtSelection",
        "key": "ctrl+shift+v",
        "mac": "cmd+shift+v",
        "when": "leoTreeOpened && leoObjectSelected && !editorHasSelection"
      },
      {
        "command": "leointeg.deleteSelection",
        "key": "ctrl+shift+backspace",
        "mac": "cmd+shift+backspace",
        "when": "leoTreeOpened && leoObjectSelected"
      }
    ],
    "resourceLabelFormatters": [
      {
        "scheme": "leo",
        "formatting": {
          "label": "LEO: BODY",
          "separator": "/",
          "workspaceSuffix": ""
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "test-compile": "tsc -p ./",
    "lint": "tslint -p ./"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "^5.2.6",
    "@types/node": "^10.17.14",
    "@types/vscode": "^1.42.0",
    "@types/which": "^1.3.2",
    "@types/ws": "^6.0.4",
    "clean-webpack-plugin": "^3.0.0",
    "csp-html-webpack-plugin": "^3.0.4",
    "css-loader": "^3.4.2",
    "eslint": "^6.8.0",
    "fork-ts-checker-webpack-plugin": "^3.1.1",
    "glob": "^7.1.6",
    "html-loader": "^0.5.5",
    "html-webpack-exclude-assets-plugin": "0.0.7",
    "html-webpack-plugin": "^3.2.0",
    "imagemin-webpack-plugin": "^2.4.2",
    "mini-css-extract-plugin": "^0.8.2",
    "mocha": "^6.2.2",
    "node-sass": "^4.13.1",
    "sass-loader": "^8.0.2",
    "ts-loader": "^6.2.1",
    "tslint": "^5.20.1",
    "typescript": "^3.7.5",
    "vscode-test": "^1.3.0",
    "webpack": "^4.41.5",
    "webpack-cli": "^3.3.10"
  },
  "dependencies": {
    "@types/debounce": "^1.2.0",
    "debounce": "^1.2.0",
    "hasbin": "^1.2.3",
    "which": "^1.3.0",
    "ws": "^6.0.0"
  }
}