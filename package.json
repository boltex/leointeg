{
  "name": "leointeg",
  "displayName": "Leo Editor Integration with Visual Studio Code",
  "description": "Use Leo, the literate editor with outline, directly in vscode.",
  "version": "1.0.8",
  "author": {
    "name": "Félix"
  },
  "sponsor": {
    "url": "https://boltex.github.io/"
  },
  "publisher": "boltex",
  "license": "SEE LICENSE IN LICENSE",
  "repository": {
    "type": "git",
    "url": "https://github.com/boltex/leointeg"
  },
  "bugs": {
    "url": "https://github.com/boltex/leointeg/issues"
  },
  "homepage": "https://github.com/boltex/leointeg#readme",
  "engines": {
    "vscode": "^1.68.0"
  },
  "keywords": [
    "leo",
    "tree",
    "outline",
    "editor",
    "literate"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "qna": false,
  "main": "./dist/extension",
  "icon": "resources/leoapp128px.png",
  "galleryBanner": {
    "color": "#fff3dc",
    "theme": "light"
  },
  "contributes": {
    "configuration": {
      "title": "Leo Integration — Use 'Leo: Open Settings' for a richer, interactive experience",
      "properties": {
        "leoIntegration.checkForChangeExternalFiles": {
          "scope": "application",
          "default": "none",
          "type": "string",
          "description": "Set default for checking changes to external files",
          "enum": [
            "none",
            "force-check",
            "force-ignore"
          ],
          "enumDescriptions": [
            "Default from Leo's config",
            "Check for changes",
            "Ignore all changes"
          ]
        },
        "leoIntegration.defaultReloadIgnore": {
          "scope": "application",
          "default": "none",
          "type": "string",
          "description": "Set default for derived files to always reload, or always ignore, when changes are detected",
          "enum": [
            "none",
            "yes-all",
            "no-all"
          ],
          "enumDescriptions": [
            "Choose each time",
            "Reload All",
            "Ignore All"
          ]
        },
        "leoIntegration.leoTreeBrowse": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Specifies whether to use Leo's style of tree browsing with the arrow keys"
        },
        "leoIntegration.treeKeepFocus": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Specifies whether to keep focus in the outline when selecting a node - overridden by \"leoTreeBrowse\""
        },
        "leoIntegration.treeKeepFocusWhenAside": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Specifies whether to keep focus in the outline when opening a body pane on the side"
        },
        "leoIntegration.statusBarColor": {
          "scope": "application",
          "default": "fb7c47",
          "type": "string",
          "description": "Specifies the hexadecimal color string for the Status Bar Indicator"
        },
        "leoIntegration.treeInExplorer": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Show the outline tree in the explorer view"
        },
        "leoIntegration.showOpenAside": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Offer 'Open to the Side' in nodes context menu"
        },
        "leoIntegration.showEditOnNodes": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Shows 'Edit Headline' button on tree nodes"
        },
        "leoIntegration.showAddOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Insert' button on tree nodes"
        },
        "leoIntegration.showMarkOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Mark/Unmark' buttons on tree nodes"
        },
        "leoIntegration.showCloneOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Clone' button on tree nodes"
        },
        "leoIntegration.showCopyOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Copy' button on tree nodes"
        },
        "leoIntegration.invertNodeContrast": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Inverts the contrast of the dirty/clean border aspect of tree nodes"
        },
        "leoIntegration.leoEditorPath": {
          "scope": "application",
          "default": "",
          "type": "string",
          "description": "Specifies the location of your Leo-Editor installation"
        },
        "leoIntegration.leoPythonCommand": {
          "scope": "application",
          "default": "",
          "type": "string",
          "description": "Specifies the command to start python (Defaults to 'py' on windows and 'python3' otherwise)"
        },
        "leoIntegration.startServerAutomatically": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Starts a Leo server automatically, by running the Leo server script"
        },
        "leoIntegration.connectToServerAutomatically": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Connect automatically to a Leo server on specified 'Connection Port' upon activation of this extension"
        },
        "leoIntegration.connectionAddress": {
          "default": "localhost",
          "scope": "application",
          "type": "string",
          "description": "Connection host"
        },
        "leoIntegration.connectionPort": {
          "default": 32125,
          "scope": "application",
          "minimum": 0,
          "maximum": 65535,
          "type": "number",
          "description": "Connection port"
        },
        "leoIntegration.setDetached": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Starts the server process with the 'detached' flag - Allows a dialog to be shown after closing for unsaved Leo documents"
        },
        "leoIntegration.limitUsers": {
          "default": 1,
          "scope": "application",
          "minimum": 1,
          "maximum": 255,
          "type": "number",
          "description": "Limit of concurrent connections - Allows for multi-user synchronous editing"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "leoIntegrationView",
          "title": "Leo",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "leoIntegrationExplorer",
          "name": "Leo Integration",
          "contextualTitle": "Leo",
          "when": "treeInExplorer",
          "visibility": "visible"
        },
        {
          "id": "leoDocumentsExplorer",
          "name": "Leo Documents",
          "contextualTitle": "Leo",
          "when": "treeInExplorer && leoTreeOpened",
          "visibility": "collapsed"
        },
        {
          "id": "leoButtonsExplorer",
          "name": "Leo Buttons",
          "contextualTitle": "Leo",
          "when": "treeInExplorer && leoTreeOpened",
          "visibility": "collapsed"
        },
        {
          "type": "webview",
          "id": "leoFindPanelExplorer",
          "contextualTitle": "Leo",
          "name": "Leo Find",
          "title": "Leo Find",
          "when": "treeInExplorer && leoTreeOpened",
          "visibility": "collapsed"
        },
        {
          "id": "leoGotoPanelExplorer",
          "name": "Leo Goto",
          "contextualTitle": "Leo",
          "when": "treeInExplorer && leoTreeOpened",
          "visibility": "collapsed"
        },
        {
          "id": "leoUndosExplorer",
          "name": "Leo Undo History",
          "contextualTitle": "Leo",
          "when": "treeInExplorer && leoTreeOpened",
          "visibility": "collapsed"
        }
      ],
      "leoIntegrationView": [
        {
          "id": "leoIntegration",
          "contextualTitle": "Leo",
          "name": "Integration",
          "visibility": "visible"
        },
        {
          "id": "leoDocuments",
          "contextualTitle": "Leo",
          "name": "Documents",
          "visibility": "collapsed"
        },
        {
          "id": "leoButtons",
          "contextualTitle": "Leo",
          "name": "Buttons",
          "visibility": "collapsed"
        },
        {
          "type": "webview",
          "contextualTitle": "Leo",
          "id": "leoFindPanel",
          "name": "Find",
          "title": "Find",
          "when": "leoTreeOpened",
          "visibility": "collapsed"
        },
        {
          "id": "leoGotoPanel",
          "contextualTitle": "Leo",
          "name": "Goto",
          "visibility": "collapsed"
        },
        {
          "id": "leoUndos",
          "contextualTitle": "Leo",
          "name": "Undo History",
          "when": "leoTreeOpened",
          "visibility": "collapsed"
        }
      ]
    },
    "languages": [
      {
        "id": "leobody.plain",
        "aliases": [
          "Leo Body Plain",
          "leobody"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.plain.language-configuration.json"
      },
      {
        "id": "leobody.python",
        "aliases": [
          "Leo Body Python",
          "leobody.python"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.python.language-configuration.json"
      },
      {
        "id": "leobody.typescript",
        "aliases": [
          "Leo Body Typescript",
          "leobody.typescript"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.typescript.language-configuration.json"
      },
      {
        "id": "leobody.javascript",
        "aliases": [
          "Leo Body Javascript",
          "leobody.javascript"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.javascript.language-configuration.json"
      },
      {
        "id": "leobody.c",
        "aliases": [
          "Leo Body c",
          "leobody.c"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.c.language-configuration.json"
      },
      {
        "id": "leobody.cpp",
        "aliases": [
          "Leo Body C++",
          "leobody.cpp"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.cpp.language-configuration.json"
      },
      {
        "id": "leobody.css",
        "aliases": [
          "Leo Body CSS",
          "leobody.css"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.css.language-configuration.json"
      },
      {
        "id": "leobody.fortran",
        "aliases": [
          "Leo Body Fortran",
          "leobody.fortran"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.fortran.language-configuration.json"
      },
      {
        "id": "leobody.fortran90",
        "aliases": [
          "Leo Body Fortran90",
          "leobody.fortran90"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.fortran.language-configuration.json"
      },
      {
        "id": "leobody.html",
        "aliases": [
          "Leo Body HTML",
          "leobody.html"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.html.language-configuration.json"
      },
      {
        "id": "leobody.java",
        "aliases": [
          "Leo Body Java",
          "leobody.java"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.java.language-configuration.json"
      },
      {
        "id": "leobody.json",
        "aliases": [
          "Leo Body Json",
          "leobody.json"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.json.language-configuration.json"
      },
      {
        "id": "leobody.markdown",
        "aliases": [
          "Leo Body Markdown",
          "leobody.markdown"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.markdown.language-configuration.json"
      },
      {
        "id": "leobody.php",
        "aliases": [
          "Leo Body PHP",
          "leobody.php"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.php.language-configuration.json"
      },
      {
        "id": "leobody.restructuredtext",
        "aliases": [
          "Leo Body reStructuredText",
          "leobody.restructuredtext"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.rst.language-configuration.json"
      },
      {
        "id": "leobody.rust",
        "aliases": [
          "Leo Body Rust",
          "leobody.rust"
        ],
        "extensions": [
          ""
        ],
        "configuration": "./language-configurations/leobody.rust.language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "leobody.plain",
        "scopeName": "source.leobody.plain",
        "path": "./syntaxes/leobody.plain.tmLanguage.json"
      },
      {
        "language": "leobody.python",
        "scopeName": "source.leobody.python",
        "path": "./syntaxes/leobody.python.tmLanguage.json"
      },
      {
        "language": "leobody.typescript",
        "scopeName": "source.leobody.typescript",
        "path": "./syntaxes/leobody.typescript.tmLanguage.json"
      },
      {
        "language": "leobody.javascript",
        "scopeName": "source.leobody.javascript",
        "path": "./syntaxes/leobody.javascript.tmLanguage.json"
      },
      {
        "language": "leobody.c",
        "scopeName": "source.leobody.c",
        "path": "./syntaxes/leobody.c.tmLanguage.json"
      },
      {
        "language": "leobody.cpp",
        "scopeName": "source.leobody.cpp",
        "path": "./syntaxes/leobody.cpp.tmLanguage.json"
      },
      {
        "language": "leobody.css",
        "scopeName": "source.leobody.css",
        "path": "./syntaxes/leobody.css.tmLanguage.json"
      },
      {
        "language": "leobody.fortran",
        "scopeName": "source.leobody.fortran",
        "path": "./syntaxes/leobody.fortran.tmLanguage.json"
      },
      {
        "language": "leobody.fortran90",
        "scopeName": "source.leobody.fortran90",
        "path": "./syntaxes/leobody.fortran90.tmLanguage.json"
      },
      {
        "language": "leobody.html",
        "scopeName": "source.leobody.html",
        "path": "./syntaxes/leobody.html.tmLanguage.json"
      },
      {
        "language": "leobody.java",
        "scopeName": "source.leobody.java",
        "path": "./syntaxes/leobody.java.tmLanguage.json"
      },
      {
        "language": "leobody.json",
        "scopeName": "source.leobody.json",
        "path": "./syntaxes/leobody.json.tmLanguage.json"
      },
      {
        "language": "leobody.markdown",
        "scopeName": "source.leobody.markdown",
        "path": "./syntaxes/leobody.markdown.tmLanguage.json"
      },
      {
        "language": "leobody.php",
        "scopeName": "source.leobody.php",
        "path": "./syntaxes/leobody.php.tmLanguage.json"
      },
      {
        "language": "leobody.restructuredtext",
        "scopeName": "source.leobody.restructuredtext",
        "path": "./syntaxes/leobody.rst.tmLanguage.json"
      },
      {
        "language": "leobody.rust",
        "scopeName": "source.leobody.rust",
        "path": "./syntaxes/leobody.rust.tmLanguage.json"
      },
      {
        "injectTo": [
          "source.leobody.c",
          "source.leobody.cpp",
          "source.leobody.css",
          "source.leobody.fortran",
          "source.leobody.fortran90",
          "source.leobody.html",
          "source.leobody.java",
          "source.leobody.javascript",
          "source.leobody.json",
          "source.leobody.markdown",
          "source.leobody.php",
          "source.leobody.plain",
          "source.leobody.python",
          "source.leobody.restructuredtext",
          "source.leobody.rust",
          "source.leobody.typescript"
        ],
        "path": "./syntaxes/leobody.tmLanguage.json",
        "scopeName": "leo.injection"
      }
    ],
    "snippets": [
      {
        "language": "leobody.c",
        "path": "./snippets/c.code-snippets"
      },
      {
        "language": "leobody.cpp",
        "path": "./snippets/cpp.code-snippets"
      },
      {
        "language": "leobody.fortran90",
        "path": "./snippets/fortran90.code-snippets"
      },
      {
        "language": "leobody.javascript",
        "path": "./snippets/javascript.code-snippets"
      },
      {
        "language": "leobody.typescript",
        "path": "./snippets/typescript.code-snippets"
      },
      {
        "language": "leobody.java",
        "path": "./snippets/java.code-snippets"
      },
      {
        "language": "leobody.php",
        "path": "./snippets/php.code-snippets"
      },
      {
        "language": "leobody.markdown",
        "path": "./snippets/markdown.code-snippets"
      },
      {
        "language": "leobody.restructuredtext",
        "path": "./snippets/restructuredtext.code-snippets"
      },
      {
        "language": "leobody.rust",
        "path": "./snippets/rust.code-snippets"
      }
    ],
    "commands": [
      {
        "command": "leointeg.setEnablePreview",
        "category": "Leo",
        "title": "Set Enable-Preview"
      },
      {
        "command": "leointeg.clearCloseEmptyGroups",
        "category": "Leo",
        "title": "Clear Close-Empty-Groups"
      },
      {
        "command": "leointeg.setCloseOnFileDelete",
        "category": "Leo",
        "title": "Set Close-On-File-Delete"
      },
      {
        "command": "leointeg.showSettingsPage",
        "title": "Open Settings",
        "category": "Leo",
        "icon": {
          "light": "resources/light/gear.svg",
          "dark": "resources/dark/gear.svg"
        }
      },
      {
        "command": "leointeg.showWelcomePage",
        "title": "Welcome",
        "category": "Leo"
      },
      {
        "command": "leointeg.chooseLeoFolder",
        "title": "Choose Leo Installation Folder",
        "shortTitle": "Set Leo Folder",
        "category": "Leo"
      },
      {
        "command": "leointeg.startServer",
        "category": "Leo",
        "title": "Start a Leo Server",
        "icon": {
          "light": "resources/light/start-server.svg",
          "dark": "resources/dark/start-server.svg"
        }
      },
      {
        "command": "leointeg.stopServer",
        "category": "Leo",
        "title": "Stop the Leo Server",
        "icon": {
          "light": "resources/light/close-server.svg",
          "dark": "resources/dark/close-server.svg"
        }
      },
      {
        "command": "leointeg.connectToServer",
        "title": "Connect to a Leo Server",
        "category": "Leo",
        "icon": {
          "light": "resources/light/connect.svg",
          "dark": "resources/dark/connect.svg"
        }
      },
      {
        "command": "leointeg.setLeoID",
        "title": "Set LeoID",
        "category": "Leo"
      },
      {
        "command": "leointeg.executeScript",
        "title": "Execute Script",
        "category": "Leo",
        "icon": {
          "light": "resources/light/execute.svg",
          "dark": "resources/dark/execute.svg"
        }
      },
      {
        "command": "leointeg.statusBar",
        "category": "Leo",
        "title": "Statusbar Click"
      },
      {
        "command": "leointeg.minibuffer",
        "category": "Leo",
        "title": "Minibuffer"
      },
      {
        "command": "leointeg.gotoScript",
        "category": "Leo",
        "title": "Goto Script"
      },
      {
        "command": "leointeg.removeButton",
        "category": "Leo",
        "title": "Remove Button"
      },
      {
        "command": "leointeg.showBody",
        "category": "Leo",
        "title": "Focus on Body"
      },
      {
        "command": "leointeg.showOutline",
        "category": "Leo",
        "title": "Focus on Tree"
      },
      {
        "command": "leointeg.showLogPane",
        "category": "Leo",
        "title": "Show Log Pane",
        "icon": {
          "light": "resources/light/show-log.svg",
          "dark": "resources/dark/show-log.svg"
        }
      },
      {
        "command": "leointeg.openLeoFile",
        "title": "Open with LeoInteg",
        "category": "Leo",
        "icon": {
          "light": "resources/light/folder.svg",
          "dark": "resources/dark/folder.svg"
        }
      },
      {
        "command": "leointeg.importAnyFile",
        "title": "Import File",
        "category": "Leo",
        "icon": {
          "light": "resources/light/import.svg",
          "dark": "resources/dark/import.svg"
        }
      },
      {
        "command": "leointeg.clearRecentFiles",
        "category": "Leo",
        "title": "Clear Recent Files",
        "icon": {
          "light": "resources/light/clear-files.svg",
          "dark": "resources/dark/clear-files.svg"
        }
      },
      {
        "command": "leointeg.recentLeoFiles",
        "category": "Leo",
        "title": "Recent Files"
      },
      {
        "command": "leointeg.switchLeoFile",
        "title": "Switch Leo File",
        "category": "Leo",
        "icon": {
          "light": "resources/light/switch.svg",
          "dark": "resources/dark/switch.svg"
        }
      },
      {
        "command": "leointeg.newLeoFile",
        "title": "New Leo File",
        "category": "Leo",
        "icon": {
          "light": "resources/light/new-file.svg",
          "dark": "resources/dark/new-file.svg"
        }
      },
      {
        "command": "leointeg.closeLeoFile",
        "title": "Close Leo File",
        "category": "Leo",
        "icon": {
          "light": "resources/light/close.svg",
          "dark": "resources/dark/close.svg"
        }
      },
      {
        "command": "leointeg.saveLeoFile",
        "category": "Leo",
        "title": "Save Leo File",
        "icon": {
          "light": "resources/light/save.svg",
          "dark": "resources/dark/save.svg"
        }
      },
      {
        "command": "leointeg.saveLeoFileFromOutline",
        "category": "Leo",
        "title": "Save Leo File",
        "icon": {
          "light": "resources/light/save.svg",
          "dark": "resources/dark/save.svg"
        }
      },
      {
        "command": "leointeg.saveAsLeoFile",
        "category": "Leo",
        "title": "Save Leo File as...",
        "icon": {
          "light": "resources/light/save-as.svg",
          "dark": "resources/dark/save-as.svg"
        }
      },
      {
        "command": "leointeg.saveAsLeoJsFile",
        "category": "Leo",
        "title": "Save as leojs JSON File...",
        "icon": {
          "light": "resources/light/save-as-leojs.svg",
          "dark": "resources/dark/save-as-leojs.svg"
        }
      },
      {
        "command": "leointeg.refreshFromDisk",
        "category": "Leo",
        "title": "Refresh from Disk",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "leointeg.refreshFromDiskSelection",
        "category": "Leo",
        "title": "Refresh from Disk",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "leointeg.refreshFromDiskSelectionFromOutline",
        "category": "Leo",
        "title": "Refresh from Disk",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "leointeg.writeAtFileNodes",
        "category": "Leo",
        "title": "Write @<file> Nodes"
      },
      {
        "command": "leointeg.writeAtFileNodesFromOutline",
        "category": "Leo",
        "title": "Write @<file> Nodes"
      },
      {
        "command": "leointeg.writeDirtyAtFileNodes",
        "category": "Leo",
        "title": "Write Dirty @<file> Nodes"
      },
      {
        "command": "leointeg.writeDirtyAtFileNodesFromOutline",
        "category": "Leo",
        "title": "Write Dirty @<file> Nodes"
      },
      {
        "command": "leointeg.gitDiff",
        "category": "Leo",
        "title": "Git Diff"
      },
      {
        "command": "leointeg.exportHeadlines",
        "category": "Leo",
        "title": "Export Outline..."
      },
      {
        "command": "leointeg.exportJupyterNotebook",
        "category": "Leo",
        "title": "Export Jupyter Notebook..."
      },
      {
        "command": "leointeg.flattenOutline",
        "category": "Leo",
        "title": "Flatten Selected Outline..."
      },
      {
        "command": "leointeg.outlineToCweb",
        "category": "Leo",
        "title": "Outline to CWEB..."
      },
      {
        "command": "leointeg.outlineToNoweb",
        "category": "Leo",
        "title": "Outline to Noweb..."
      },
      {
        "command": "leointeg.removeSentinels",
        "category": "Leo",
        "title": "Remove Sentinels..."
      },
      {
        "command": "leointeg.weave",
        "category": "Leo",
        "title": "Weave..."
      },
      {
        "command": "leointeg.writeFileFromNode",
        "category": "Leo",
        "title": "Write File From Node..."
      },
      {
        "command": "leointeg.openAside",
        "category": "Leo",
        "title": "Open to the Side"
      },
      {
        "command": "leointeg.contractAll",
        "category": "Leo",
        "title": "Contract All",
        "icon": {
          "light": "resources/light/collapse.svg",
          "dark": "resources/dark/collapse.svg"
        }
      },
      {
        "command": "leointeg.contractAllFromOutline",
        "category": "Leo",
        "title": "Contract All",
        "icon": {
          "light": "resources/light/collapse.svg",
          "dark": "resources/dark/collapse.svg"
        }
      },
      {
        "command": "leointeg.prev",
        "category": "Leo",
        "title": "Prev",
        "enablement": "leoCanGoBack",
        "icon": {
          "light": "resources/light/prev.svg",
          "dark": "resources/dark/prev.svg"
        }
      },
      {
        "command": "leointeg.prevFromOutline",
        "category": "Leo",
        "title": "Prev",
        "enablement": "leoCanGoBack",
        "icon": {
          "light": "resources/light/prev.svg",
          "dark": "resources/dark/prev.svg"
        }
      },
      {
        "command": "leointeg.next",
        "category": "Leo",
        "title": "Next",
        "enablement": "leoCanGoNext",
        "icon": {
          "light": "resources/light/next.svg",
          "dark": "resources/dark/next.svg"
        }
      },
      {
        "command": "leointeg.nextFromOutline",
        "category": "Leo",
        "title": "Next",
        "enablement": "leoCanGoNext",
        "icon": {
          "light": "resources/light/next.svg",
          "dark": "resources/dark/next.svg"
        }
      },
      {
        "command": "leointeg.editHeadline",
        "category": "Leo",
        "title": "Edit Headline",
        "icon": {
          "light": "resources/light/edit.svg",
          "dark": "resources/dark/edit.svg"
        }
      },
      {
        "command": "leointeg.editSelectedHeadline",
        "category": "Leo",
        "title": "Edit Headline"
      },
      {
        "command": "leointeg.editSelectedHeadlineFromOutline",
        "category": "Leo",
        "title": "Edit Headline"
      },
      {
        "command": "leointeg.copyNode",
        "category": "Leo",
        "title": "Copy Node",
        "icon": {
          "light": "resources/light/clipboard.svg",
          "dark": "resources/dark/clipboard.svg"
        }
      },
      {
        "command": "leointeg.copyNodeSelection",
        "category": "Leo",
        "title": "Copy Node",
        "icon": {
          "light": "resources/light/clipboard.svg",
          "dark": "resources/dark/clipboard.svg"
        }
      },
      {
        "command": "leointeg.cutNode",
        "category": "Leo",
        "title": "Cut Node"
      },
      {
        "command": "leointeg.cutNodeSelection",
        "category": "Leo",
        "title": "Cut Node",
        "icon": {
          "light": "resources/light/cut.svg",
          "dark": "resources/dark/cut.svg"
        }
      },
      {
        "command": "leointeg.cutNodeSelectionFromOutline",
        "category": "Leo",
        "title": "Cut Node"
      },
      {
        "command": "leointeg.pasteNode",
        "category": "Leo",
        "title": "Paste Node"
      },
      {
        "command": "leointeg.pasteNodeAtSelection",
        "category": "Leo",
        "title": "Paste Node",
        "icon": {
          "light": "resources/light/paste.svg",
          "dark": "resources/dark/paste.svg"
        }
      },
      {
        "command": "leointeg.pasteNodeAtSelectionFromOutline",
        "category": "Leo",
        "title": "Paste Node"
      },
      {
        "command": "leointeg.pasteNodeAsClone",
        "category": "Leo",
        "title": "Paste Node as Clone"
      },
      {
        "command": "leointeg.pasteNodeAsCloneAtSelection",
        "category": "Leo",
        "title": "Paste Node as Clone",
        "icon": {
          "light": "resources/light/paste-clone.svg",
          "dark": "resources/dark/paste-clone.svg"
        }
      },
      {
        "command": "leointeg.pasteNodeAsCloneAtSelectionFromOutline",
        "category": "Leo",
        "title": "Paste Node as Clone"
      },
      {
        "command": "leointeg.delete",
        "category": "Leo",
        "title": "Delete",
        "icon": {
          "light": "resources/light/close.svg",
          "dark": "resources/dark/close.svg"
        }
      },
      {
        "command": "leointeg.deleteSelection",
        "category": "Leo",
        "title": "Delete Node",
        "icon": {
          "light": "resources/light/delete.svg",
          "dark": "resources/dark/delete.svg"
        }
      },
      {
        "command": "leointeg.deleteSelectionFromOutline",
        "category": "Leo",
        "title": "Delete Node"
      },
      {
        "command": "leointeg.setUa",
        "category": "Leo",
        "title": "Set uA"
      },
      {
        "command": "leointeg.extract",
        "category": "Leo",
        "title": "Extract",
        "icon": {
          "light": "resources/light/extract.svg",
          "dark": "resources/dark/extract.svg"
        }
      },
      {
        "command": "leointeg.extractNames",
        "category": "Leo",
        "title": "Extract Names",
        "icon": {
          "light": "resources/light/extract-name.svg",
          "dark": "resources/dark/extract-name.svg"
        }
      },
      {
        "command": "leointeg.moveOutlineDown",
        "category": "Leo",
        "title": "Move Outline Down",
        "icon": {
          "light": "resources/light/arrow-down.svg",
          "dark": "resources/dark/arrow-down.svg"
        }
      },
      {
        "command": "leointeg.moveOutlineDownSelection",
        "category": "Leo",
        "title": "Move Outline Down"
      },
      {
        "command": "leointeg.moveOutlineDownSelectionFromOutline",
        "category": "Leo",
        "title": "Move Outline Down"
      },
      {
        "command": "leointeg.moveOutlineLeft",
        "category": "Leo",
        "title": "Move Outline Left",
        "icon": {
          "light": "resources/light/arrow-left.svg",
          "dark": "resources/dark/arrow-left.svg"
        }
      },
      {
        "command": "leointeg.moveOutlineLeftSelection",
        "category": "Leo",
        "title": "Move Outline Left"
      },
      {
        "command": "leointeg.moveOutlineLeftSelectionFromOutline",
        "category": "Leo",
        "title": "Move Outline Left"
      },
      {
        "command": "leointeg.moveOutlineRight",
        "category": "Leo",
        "title": "Move Outline Right",
        "icon": {
          "light": "resources/light/arrow-right.svg",
          "dark": "resources/dark/arrow-right.svg"
        }
      },
      {
        "command": "leointeg.moveOutlineRightSelection",
        "category": "Leo",
        "title": "Move Outline Right"
      },
      {
        "command": "leointeg.moveOutlineRightSelectionFromOutline",
        "category": "Leo",
        "title": "Move Outline Right"
      },
      {
        "command": "leointeg.moveOutlineUp",
        "category": "Leo",
        "title": "Move Outline Up",
        "icon": {
          "light": "resources/light/arrow-up.svg",
          "dark": "resources/dark/arrow-up.svg"
        }
      },
      {
        "command": "leointeg.moveOutlineUpSelection",
        "category": "Leo",
        "title": "Move Outline Up"
      },
      {
        "command": "leointeg.moveOutlineUpSelectionFromOutline",
        "category": "Leo",
        "title": "Move Outline Up"
      },
      {
        "command": "leointeg.insertNode",
        "category": "Leo",
        "title": "Insert Node",
        "icon": {
          "light": "resources/light/plus.svg",
          "dark": "resources/dark/plus.svg"
        }
      },
      {
        "command": "leointeg.insertChildNode",
        "category": "Leo",
        "title": "Insert Child",
        "icon": {
          "light": "resources/light/insert-child.svg",
          "dark": "resources/dark/insert-child.svg"
        }
      },
      {
        "command": "leointeg.insertNodeSelection",
        "category": "Leo",
        "title": "Insert Node",
        "icon": {
          "light": "resources/light/insert.svg",
          "dark": "resources/dark/insert.svg"
        }
      },
      {
        "command": "leointeg.insertChildNodeSelection",
        "category": "Leo",
        "title": "Insert Child",
        "icon": {
          "light": "resources/light/insert-child.svg",
          "dark": "resources/dark/insert-child.svg"
        }
      },
      {
        "command": "leointeg.insertNodeSelectionFromOutline",
        "category": "Leo",
        "title": "Insert Node",
        "icon": {
          "light": "resources/light/insert.svg",
          "dark": "resources/dark/insert.svg"
        }
      },
      {
        "command": "leointeg.insertChildNodeSelectionFromOutline",
        "category": "Leo",
        "title": "Insert Child",
        "icon": {
          "light": "resources/light/insert-child.svg",
          "dark": "resources/dark/insert-child.svg"
        }
      },
      {
        "command": "leointeg.insertNodeSelectionInterrupt",
        "category": "Leo",
        "title": "Insert Node",
        "icon": {
          "light": "resources/light/insert.svg",
          "dark": "resources/dark/insert.svg"
        }
      },
      {
        "command": "leointeg.insertChildNodeSelectionInterrupt",
        "category": "Leo",
        "title": "Insert Child",
        "icon": {
          "light": "resources/light/insert-child.svg",
          "dark": "resources/dark/insert-child.svg"
        }
      },
      {
        "command": "leointeg.cloneNode",
        "category": "Leo",
        "title": "Clone Node",
        "icon": {
          "light": "resources/light/link.svg",
          "dark": "resources/dark/link.svg"
        }
      },
      {
        "command": "leointeg.cloneNodeSelection",
        "category": "Leo",
        "title": "Clone Node",
        "icon": {
          "light": "resources/light/link.svg",
          "dark": "resources/dark/link.svg"
        }
      },
      {
        "command": "leointeg.cloneNodeSelectionFromOutline",
        "category": "Leo",
        "title": "Clone Node",
        "icon": {
          "light": "resources/light/link.svg",
          "dark": "resources/dark/link.svg"
        }
      },
      {
        "command": "leointeg.promote",
        "category": "Leo",
        "title": "Promote Children",
        "icon": {
          "light": "resources/light/promote.svg",
          "dark": "resources/dark/promote.svg"
        }
      },
      {
        "command": "leointeg.promoteSelection",
        "category": "Leo",
        "title": "Promote Children",
        "enablement": "leoCanPromote",
        "icon": {
          "light": "resources/light/promote.svg",
          "dark": "resources/dark/promote.svg"
        }
      },
      {
        "command": "leointeg.promoteSelectionFromOutline",
        "category": "Leo",
        "title": "Promote Children",
        "enablement": "leoCanPromote",
        "icon": {
          "light": "resources/light/promote.svg",
          "dark": "resources/dark/promote.svg"
        }
      },
      {
        "command": "leointeg.demote",
        "category": "Leo",
        "title": "Demote Siblings",
        "icon": {
          "light": "resources/light/demote.svg",
          "dark": "resources/dark/demote.svg"
        }
      },
      {
        "command": "leointeg.demoteSelection",
        "category": "Leo",
        "title": "Demote Siblings",
        "enablement": "leoCanDemote",
        "icon": {
          "light": "resources/light/demote.svg",
          "dark": "resources/dark/demote.svg"
        }
      },
      {
        "command": "leointeg.demoteSelectionFromOutline",
        "category": "Leo",
        "title": "Demote Siblings",
        "enablement": "leoCanDemote",
        "icon": {
          "light": "resources/light/demote.svg",
          "dark": "resources/dark/demote.svg"
        }
      },
      {
        "command": "leointeg.sortChildrenSelection",
        "category": "Leo",
        "title": "Sort Children"
      },
      {
        "command": "leointeg.sortChildrenSelectionFromOutline",
        "category": "Leo",
        "title": "Sort Children"
      },
      {
        "command": "leointeg.sortSiblingsSelection",
        "category": "Leo",
        "title": "Sort Siblings",
        "icon": {
          "light": "resources/light/sort.svg",
          "dark": "resources/dark/sort.svg"
        }
      },
      {
        "command": "leointeg.sortSiblingsSelectionFromOutline",
        "category": "Leo",
        "title": "Sort Siblings",
        "icon": {
          "light": "resources/light/sort.svg",
          "dark": "resources/dark/sort.svg"
        }
      },
      {
        "command": "leointeg.gotoFirstVisible",
        "category": "Leo",
        "title": "Goto First Visible"
      },
      {
        "command": "leointeg.gotoLastVisible",
        "category": "Leo",
        "title": "Goto Last Visible"
      },
      {
        "command": "leointeg.pageUp",
        "category": "Leo",
        "title": "Page Up"
      },
      {
        "command": "leointeg.pageDown",
        "category": "Leo",
        "title": "Page Down"
      },
      {
        "command": "leointeg.scrollTop",
        "category": "Leo",
        "title": "Scroll to Outline Top"
      },
      {
        "command": "leointeg.scrollBottom",
        "category": "Leo",
        "title": "Scroll to Outline Bottom"
      },
      {
        "command": "leointeg.gotoFirstSibling",
        "category": "Leo",
        "title": "Goto First Sibling"
      },
      {
        "command": "leointeg.gotoLastSibling",
        "category": "Leo",
        "title": "Goto Last Sibling"
      },
      {
        "command": "leointeg.gotoNextVisible",
        "category": "Leo",
        "title": "Goto Next Visible"
      },
      {
        "command": "leointeg.gotoPrevVisible",
        "category": "Leo",
        "title": "Goto Prev Visible"
      },
      {
        "command": "leointeg.contractOrGoLeft",
        "category": "Leo",
        "title": "Contract Or Go Left"
      },
      {
        "command": "leointeg.expandAndGoRight",
        "category": "Leo",
        "title": "Expand And Go Right"
      },
      {
        "command": "leointeg.gotoNextMarked",
        "category": "Leo",
        "title": "Goto Next Marked"
      },
      {
        "command": "leointeg.gotoNextClone",
        "category": "Leo",
        "title": "Goto Next Clone"
      },
      {
        "command": "leointeg.gotoNextCloneSelection",
        "category": "Leo",
        "title": "Goto Next Clone"
      },
      {
        "command": "leointeg.gotoNextCloneSelectionFromOutline",
        "category": "Leo",
        "title": "Goto Next Clone"
      },
      {
        "command": "leointeg.hoistNode",
        "category": "Leo",
        "title": "Hoist",
        "icon": {
          "light": "resources/light/hoist.svg",
          "dark": "resources/dark/hoist.svg"
        }
      },
      {
        "command": "leointeg.hoistSelection",
        "category": "Leo",
        "title": "Hoist",
        "enablement": "leoCanHoist",
        "icon": {
          "light": "resources/light/hoist.svg",
          "dark": "resources/dark/hoist.svg"
        }
      },
      {
        "command": "leointeg.hoistSelectionFromOutline",
        "category": "Leo",
        "title": "Hoist",
        "enablement": "leoCanHoist",
        "icon": {
          "light": "resources/light/hoist.svg",
          "dark": "resources/dark/hoist.svg"
        }
      },
      {
        "command": "leointeg.deHoist",
        "category": "Leo",
        "title": "De-Hoist",
        "enablement": "leoCanDehoist",
        "icon": {
          "light": "resources/light/dehoist.svg",
          "dark": "resources/dark/dehoist.svg"
        }
      },
      {
        "command": "leointeg.deHoistFromOutline",
        "category": "Leo",
        "title": "De-Hoist",
        "enablement": "leoCanDehoist && !leoTopHoistChapter",
        "icon": {
          "light": "resources/light/dehoist.svg",
          "dark": "resources/dark/dehoist.svg"
        }
      },
      {
        "command": "leointeg.chapterNext",
        "category": "Leo",
        "title": "Chapter Next",
        "icon": {
          "light": "resources/light/chapter-next.svg",
          "dark": "resources/dark/chapter-next.svg"
        }
      },
      {
        "command": "leointeg.chapterBack",
        "category": "Leo",
        "title": "Chapter Back",
        "icon": {
          "light": "resources/light/chapter-back.svg",
          "dark": "resources/dark/chapter-back.svg"
        }
      },
      {
        "command": "leointeg.chapterMain",
        "category": "Leo",
        "title": "Chapter Main",
        "enablement": "leoInChapter && leoTopHoistChapter",
        "icon": {
          "light": "resources/light/chapter-main.svg",
          "dark": "resources/dark/chapter-main.svg"
        }
      },
      {
        "command": "leointeg.chapterSelect",
        "category": "Leo",
        "title": "Chapter Select",
        "icon": {
          "light": "resources/light/chapter-select.svg",
          "dark": "resources/dark/chapter-select.svg"
        }
      },
      {
        "command": "leointeg.undo",
        "category": "Leo",
        "title": "Undo",
        "enablement": "leoCanUndo",
        "icon": {
          "light": "resources/light/undo.svg",
          "dark": "resources/dark/undo.svg"
        }
      },
      {
        "command": "leointeg.undoFromOutline",
        "category": "Leo",
        "title": "Undo",
        "enablement": "leoCanUndo",
        "icon": {
          "light": "resources/light/undo.svg",
          "dark": "resources/dark/undo.svg"
        }
      },
      {
        "command": "leointeg.redo",
        "category": "Leo",
        "title": "Redo",
        "enablement": "leoCanRedo",
        "icon": {
          "light": "resources/light/redo.svg",
          "dark": "resources/dark/redo.svg"
        }
      },
      {
        "command": "leointeg.redoFromOutline",
        "category": "Leo",
        "title": "Redo",
        "enablement": "leoCanRedo",
        "icon": {
          "light": "resources/light/redo.svg",
          "dark": "resources/dark/redo.svg"
        }
      },
      {
        "command": "leointeg.revertToUndo",
        "category": "Leo",
        "title": "Revert to Undo State"
      },
      {
        "command": "leointeg.startSearch",
        "category": "Leo",
        "title": "Start Search"
      },
      {
        "command": "leointeg.findAll",
        "category": "Leo",
        "title": "Find All"
      },
      {
        "command": "leointeg.findNext",
        "category": "Leo",
        "title": "Find Next"
      },
      {
        "command": "leointeg.findNextFromOutline",
        "category": "Leo",
        "title": "Find Next",
        "icon": {
          "light": "resources/light/find-next.svg",
          "dark": "resources/dark/find-next.svg"
        }
      },
      {
        "command": "leointeg.findPrevious",
        "category": "Leo",
        "title": "Find Previous"
      },
      {
        "command": "leointeg.findPreviousFromOutline",
        "category": "Leo",
        "title": "Find Previous",
        "icon": {
          "light": "resources/light/find-previous.svg",
          "dark": "resources/dark/find-previous.svg"
        }
      },
      {
        "command": "leointeg.findVar",
        "category": "Leo",
        "title": "Find the var under the cursor"
      },
      {
        "command": "leointeg.findDef",
        "category": "Leo",
        "shortTitle": "Find Definition",
        "title": "Find the def or class under the cursor"
      },
      {
        "command": "leointeg.replace",
        "category": "Leo",
        "title": "Replace"
      },
      {
        "command": "leointeg.replaceFromOutline",
        "category": "Leo",
        "title": "Replace"
      },
      {
        "command": "leointeg.replaceThenFind",
        "category": "Leo",
        "title": "Replace Then Find"
      },
      {
        "command": "leointeg.replaceThenFindFromOutline",
        "category": "Leo",
        "title": "Replace Then Find"
      },
      {
        "command": "leointeg.replaceAll",
        "category": "Leo",
        "title": "Replace All"
      },
      {
        "command": "leointeg.gotoGlobalLine",
        "category": "Leo",
        "title": "Goto Global Line"
      },
      {
        "command": "leointeg.cloneFindAll",
        "category": "Leo",
        "title": "Clone Find All"
      },
      {
        "command": "leointeg.cloneFindAllFlattened",
        "category": "Leo",
        "title": "Clone Find All Flattened"
      },
      {
        "command": "leointeg.cloneFindMarked",
        "category": "Leo",
        "shortTitle": "cfam",
        "title": "cfam - Clone Find All Marked Nodes"
      },
      {
        "command": "leointeg.cloneFindFlattenedMarked",
        "category": "Leo",
        "shortTitle": "cffm",
        "title": "cffm - Clone Find All Flattened Marked"
      },
      {
        "command": "leointeg.cloneFindTag",
        "category": "Leo",
        "shortTitle": "cft",
        "title": "cft - Clone Find Tag"
      },
      {
        "command": "leointeg.tagChildren",
        "category": "Leo",
        "title": "Tag Children"
      },
      {
        "command": "leointeg.tagNode",
        "category": "Leo",
        "title": "Tag Node"
      },
      {
        "command": "leointeg.removeTag",
        "category": "Leo",
        "title": "Remove Tag"
      },
      {
        "command": "leointeg.removeTags",
        "category": "Leo",
        "title": "Remove All Tags"
      },
      {
        "command": "leointeg.setFindEverywhereOption",
        "category": "Leo",
        "shortTitle": "Find Everywhere",
        "title": "Set Find Everywhere Option"
      },
      {
        "command": "leointeg.setFindNodeOnlyOption",
        "category": "Leo",
        "shortTitle": "Find in Node",
        "title": "Set Find in Node Only Option"
      },
      {
        "command": "leointeg.setFindFileOnlyOption",
        "category": "Leo",
        "shortTitle": "Find in External Files",
        "title": "Set Find in External Files Only Option"
      },
      {
        "command": "leointeg.setFindSuboutlineOnlyOption",
        "category": "Leo",
        "shortTitle": "Find in SubOutline",
        "title": "Set Find in SubOutline Only Option"
      },
      {
        "command": "leointeg.toggleFindIgnoreCaseOption",
        "category": "Leo",
        "shortTitle": "Find Ignore Case",
        "title": "Toggle Find Ignore Case Option"
      },
      {
        "command": "leointeg.toggleFindMarkChangesOption",
        "category": "Leo",
        "shortTitle": "Find Mark Changes",
        "title": "Toggle Find Mark Changes Option"
      },
      {
        "command": "leointeg.toggleFindMarkFindsOption",
        "category": "Leo",
        "shortTitle": "Find Mark Finds",
        "title": "Toggle Find Mark Finds Option"
      },
      {
        "command": "leointeg.toggleFindRegexpOption",
        "category": "Leo",
        "shortTitle": "Find RegExp",
        "title": "Toggle Find RegExp Option"
      },
      {
        "command": "leointeg.toggleFindWordOption",
        "category": "Leo",
        "shortTitle": "Find Whole Word",
        "title": "Toggle Find Whole Word Option"
      },
      {
        "command": "leointeg.toggleFindSearchBodyOption",
        "category": "Leo",
        "shortTitle": "Find Search Body",
        "title": "Toggle Find Search Body Option"
      },
      {
        "command": "leointeg.toggleFindSearchHeadlineOption",
        "category": "Leo",
        "shortTitle": "Find Search Headline",
        "title": "Toggle Find Search Headline Option"
      },
      {
        "command": "leointeg.findQuick",
        "category": "Leo",
        "title": "Focus on Nav tab"
      },
      {
        "command": "leointeg.goAnywhere",
        "category": "Leo",
        "title": "Go Anywhere"
      },
      {
        "command": "leointeg.findQuickSelected",
        "category": "Leo",
        "title": "Nav search with current selection",
        "icon": {
          "light": "resources/light/find-quick-selected.svg",
          "dark": "resources/dark/find-quick-selected.svg"
        }
      },
      {
        "command": "leointeg.findQuickTimeline",
        "category": "Leo",
        "title": "List timeline of nodes in reverse gnx order",
        "icon": {
          "light": "resources/light/find-quick-timeline.svg",
          "dark": "resources/dark/find-quick-timeline.svg"
        }
      },
      {
        "command": "leointeg.findQuickChanged",
        "category": "Leo",
        "title": "List all changed/dirty nodes",
        "icon": {
          "light": "resources/light/find-quick-changed.svg",
          "dark": "resources/dark/find-quick-changed.svg"
        }
      },
      {
        "command": "leointeg.history",
        "category": "Leo",
        "title": "List visited nodes from history",
        "icon": {
          "light": "resources/light/find-quick-history.svg",
          "dark": "resources/dark/find-quick-history.svg"
        }
      },
      {
        "command": "leointeg.markedList",
        "category": "Leo",
        "title": "List all marked nodes",
        "icon": {
          "light": "resources/light/find-quick-marked.svg",
          "dark": "resources/dark/find-quick-marked.svg"
        }
      },
      {
        "command": "leointeg.mark",
        "category": "Leo",
        "title": "Mark",
        "icon": {
          "light": "resources/light/mark.svg",
          "dark": "resources/dark/mark.svg"
        }
      },
      {
        "command": "leointeg.markSelection",
        "category": "Leo",
        "title": "Mark",
        "icon": {
          "light": "resources/light/mark.svg",
          "dark": "resources/dark/mark.svg"
        }
      },
      {
        "command": "leointeg.markSelectionFromOutline",
        "category": "Leo",
        "title": "Mark",
        "icon": {
          "light": "resources/light/mark.svg",
          "dark": "resources/dark/mark.svg"
        }
      },
      {
        "command": "leointeg.unmark",
        "category": "Leo",
        "title": "Unmark",
        "icon": {
          "light": "resources/light/unmark.svg",
          "dark": "resources/dark/unmark.svg"
        }
      },
      {
        "command": "leointeg.unmarkSelection",
        "category": "Leo",
        "title": "Unmark",
        "icon": {
          "light": "resources/light/unmark.svg",
          "dark": "resources/dark/unmark.svg"
        }
      },
      {
        "command": "leointeg.unmarkSelectionFromOutline",
        "category": "Leo",
        "title": "Unmark",
        "icon": {
          "light": "resources/light/unmark.svg",
          "dark": "resources/dark/unmark.svg"
        }
      },
      {
        "command": "leointeg.unmarkAll",
        "category": "Leo",
        "title": "Unmark All"
      },
      {
        "command": "leointeg.markSubheads",
        "category": "Leo",
        "title": "Mark Subheads"
      },
      {
        "command": "leointeg.markChangedItems",
        "category": "Leo",
        "title": "Mark Changed Items"
      },
      {
        "command": "leointeg.copyMarked",
        "category": "Leo",
        "title": "Copy Marked"
      },
      {
        "command": "leointeg.cloneMarkedNodes",
        "category": "Leo",
        "title": "Clone Marked Nodes"
      },
      {
        "command": "leointeg.diffMarkedNodes",
        "category": "Leo",
        "title": "Diff Marked Nodes"
      },
      {
        "command": "leointeg.deleteMarkedNodes",
        "category": "Leo",
        "title": "Delete Marked Nodes"
      },
      {
        "command": "leointeg.moveMarkedNodes",
        "category": "Leo",
        "title": "Move Marked Nodes"
      }
    ],
    "viewsWelcome": [
      {
        "view": "leoIntegration",
        "contents": "Not Connected\n[Start Server](command:leointeg.startServer)\n[Connect to Server](command:leointeg.connectToServer)\nServer startup and connection can be automated in LeoInteg's [configuration settings](command:leointeg.showSettingsPage)",
        "when": "!leoBridgeReady && !leoServerStarted && leoStartupFinished && !leoConnecting || !leoBridgeReady && !leoServerStarted && !startServerAutomatically && !connectToServerAutomatically && !leoConnecting"
      },
      {
        "view": "leoIntegrationExplorer",
        "contents": "Not Connected\n[Start Server](command:leointeg.startServer)\n[Connect to Server](command:leointeg.connectToServer)\nServer startup and connection can be automated in LeoInteg's [configuration settings](command:leointeg.showSettingsPage)",
        "when": "!leoBridgeReady && !leoServerStarted && leoStartupFinished && !leoConnecting || !leoBridgeReady && !leoServerStarted && !startServerAutomatically && !connectToServerAutomatically && !leoConnecting"
      },
      {
        "view": "leoIntegration",
        "contents": "Not Connected\n[Connect to Server](command:leointeg.connectToServer)\nServer startup and connection can be automated in LeoInteg's [configuration settings](command:leointeg.showSettingsPage)",
        "when": "!leoBridgeReady && !leoTreeOpened && startServerAutomatically && !connectToServerAutomatically && !leoConnecting || !leoBridgeReady && leoServerStarted && !connectToServerAutomatically && !leoConnecting"
      },
      {
        "view": "leoIntegrationExplorer",
        "contents": "Not Connected\n[Connect to Server](command:leointeg.connectToServer)\nServer startup and connection can be automated in LeoInteg's [configuration settings](command:leointeg.showSettingsPage)",
        "when": "!leoBridgeReady && !leoTreeOpened && startServerAutomatically && !connectToServerAutomatically && !leoConnecting || !leoBridgeReady && leoServerStarted && !connectToServerAutomatically && !leoConnecting"
      },
      {
        "view": "leoIntegration",
        "contents": "Connecting...",
        "when": "!leoBridgeReady && !leoTreeOpened && leoConnecting || !leoBridgeReady && !leoTreeOpened && connectToServerAutomatically && !leoConnecting && !leoStartupFinished"
      },
      {
        "view": "leoIntegrationExplorer",
        "contents": "Connecting...",
        "when": "!leoBridgeReady && !leoTreeOpened && leoConnecting || !leoBridgeReady && !leoTreeOpened && connectToServerAutomatically && !leoConnecting && !leoStartupFinished"
      },
      {
        "view": "leoIntegration",
        "contents": "Connected\n[Open Leo File](command:leointeg.openLeoFile)\nView LeoInteg's [configuration settings](command:leointeg.showSettingsPage)",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoIntegrationExplorer",
        "contents": "Connected\n[Open Leo File](command:leointeg.openLeoFile)\nView LeoInteg's [configuration settings](command:leointeg.showSettingsPage)",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoDocuments",
        "contents": "Not connected",
        "when": "!leoBridgeReady"
      },
      {
        "view": "leoDocumentsExplorer",
        "contents": "Not connected",
        "when": "!leoBridgeReady"
      },
      {
        "view": "leoDocuments",
        "contents": "There are no Leo files currently opened",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoDocumentsExplorer",
        "contents": "There are no Leo files currently opened",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoButtons",
        "contents": "Not connected",
        "when": "!leoBridgeReady"
      },
      {
        "view": "leoButtonsExplorer",
        "contents": "Not connected",
        "when": "!leoBridgeReady"
      },
      {
        "view": "leoButtons",
        "contents": "There are no Leo files currently opened",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoButtonsExplorer",
        "contents": "There are no Leo files currently opened",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoButtons",
        "contents": "There are no @buttons in this outline",
        "when": "leoBridgeReady && leoTreeOpened"
      },
      {
        "view": "leoButtonsExplorer",
        "contents": "There are no @buttons in this outline",
        "when": "leoBridgeReady && leoTreeOpened"
      },
      {
        "view": "leoGotoPanel",
        "contents": "Not connected",
        "when": "!leoTreeOpened"
      },
      {
        "view": "leoGotoPanelExplorer",
        "contents": "Not connected",
        "when": "!leoTreeOpened"
      },
      {
        "view": "leoGotoPanel",
        "contents": "No Results",
        "when": "leoTreeOpened"
      },
      {
        "view": "leoGotoPanelExplorer",
        "contents": "No Results",
        "when": "leoTreeOpened"
      },
      {
        "view": "leoFindPanel",
        "contents": "Not connected",
        "when": "!leoTreeOpened"
      },
      {
        "view": "leoFindPanelExplorer",
        "contents": "Not connected",
        "when": "!leoTreeOpened"
      },
      {
        "view": "leoUndos",
        "contents": "There are no Leo files currently opened",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoUndosExplorer",
        "contents": "There are no Leo files currently opened",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoUndos",
        "contents": "Can't undo",
        "when": "leoBridgeReady && leoTreeOpened"
      },
      {
        "view": "leoUndosExplorer",
        "contents": "Can't undo",
        "when": "leoBridgeReady && leoTreeOpened"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "leointeg.startServer",
          "when": "!leoBridgeReady && !leoTreeOpened && !leoServerStarted"
        },
        {
          "command": "leointeg.stopServer",
          "when": "leoServerStarted"
        },
        {
          "command": "leointeg.connectToServer",
          "when": "!leoBridgeReady && !leoTreeOpened"
        },
        {
          "command": "leointeg.setLeoID",
          "when": "leoBridgeReady && leoIDMissing"
        },
        {
          "command": "leointeg.executeScript",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.minibuffer",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.showLogPane",
          "when": "leoBridgeReady"
        },
        {
          "command": "leointeg.openLeoFile",
          "when": "leoBridgeReady"
        },
        {
          "command": "leointeg.importAnyFile",
          "when": "leoBridgeReady && leoTreeOpened"
        },
        {
          "command": "leointeg.recentLeoFiles",
          "when": "leoBridgeReady"
        },
        {
          "command": "leointeg.switchLeoFile",
          "when": "leoBridgeReady && leoTreeOpened"
        },
        {
          "command": "leointeg.newLeoFile",
          "when": "leoBridgeReady"
        },
        {
          "command": "leointeg.closeLeoFile",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.saveLeoFile",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.saveAsLeoFile",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.saveAsLeoJsFile",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.refreshFromDiskSelection",
          "when": "leoTreeOpened && leoAtFile"
        },
        {
          "command": "leointeg.gitDiff",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.writeAtFileNodes",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.writeDirtyAtFileNodes",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.exportHeadlines",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.exportJupyterNotebook",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.flattenOutline",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.outlineToCweb",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.outlineToNoweb",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.removeSentinels",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.weave",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.writeFileFromNode",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.contractAll",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.editSelectedHeadline",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.markSelection",
          "when": "leoTreeOpened && !leoMarked"
        },
        {
          "command": "leointeg.unmarkSelection",
          "when": "leoTreeOpened && leoMarked"
        },
        {
          "command": "leointeg.copyNodeSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.cutNodeSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.pasteNodeAtSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.pasteNodeAsCloneAtSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.deleteSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.setUa",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.extract",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.extractNames",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.moveOutlineDownSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.moveOutlineLeftSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.moveOutlineRightSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.moveOutlineUpSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.insertNodeSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.insertChildNodeSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.cloneNodeSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.promoteSelection",
          "when": "leoTreeOpened && leoCanPromote"
        },
        {
          "command": "leointeg.demoteSelection",
          "when": "leoTreeOpened && leoCanDemote"
        },
        {
          "command": "leointeg.sortChildrenSelection",
          "when": "leoTreeOpened && leoChild"
        },
        {
          "command": "leointeg.sortSiblingsSelection",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.gotoNextMarked",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.gotoNextCloneSelection",
          "when": "leoTreeOpened && leoCloned"
        },
        {
          "command": "leointeg.hoistSelection",
          "when": "leoTreeOpened && leoCanHoist"
        },
        {
          "command": "leointeg.deHoist",
          "when": "leoTreeOpened && leoCanDehoist"
        },
        {
          "command": "leointeg.chapterNext",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.chapterBack",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.chapterMain",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.chapterSelect",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.undo",
          "when": "leoTreeOpened && leoCanUndo"
        },
        {
          "command": "leointeg.redo",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.findQuick",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.findQuickSelected",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.findQuickTimeline",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.findQuickChanged",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.goAnywhere",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.history",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.markedList",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.startSearch",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.findAll",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.findNext",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.findPrevious",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.findVar",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.findDef",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.replace",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.replaceThenFind",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.replaceAll",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.setFindEverywhereOption",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.setFindNodeOnlyOption",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.setFindFileOnlyOption",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.setFindSuboutlineOnlyOption",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.toggleFindIgnoreCaseOption",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.toggleFindMarkChangesOption",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.toggleFindMarkFindsOption",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.toggleFindRegexpOption",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.toggleFindWordOption",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.toggleFindSearchBodyOption",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.toggleFindSearchHeadlineOption",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.gotoGlobalLine",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.cloneFindAll",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.cloneFindAllFlattened",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.cloneFindMarked",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.cloneFindFlattenedMarked",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.cloneFindTag",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.tagChildren",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.copyMarked",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.diffMarkedNodes",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.markChangedItems",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.markSubheads",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.unmarkAll",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.cloneMarkedNodes",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.deleteMarkedNodes",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.moveMarkedNodes",
          "when": "leoTreeOpened"
        },
        {
          "command": "leointeg.setEnablePreview",
          "when": "false"
        },
        {
          "command": "leointeg.clearCloseEmptyGroups",
          "when": "false"
        },
        {
          "command": "leointeg.setCloseOnFileDelete",
          "when": "false"
        },
        {
          "command": "leointeg.statusBar",
          "when": "false"
        },
        {
          "command": "leointeg.gotoScript",
          "when": "false"
        },
        {
          "command": "leointeg.removeButton",
          "when": "false"
        },
        {
          "command": "leointeg.showBody",
          "when": "false"
        },
        {
          "command": "leointeg.showOutline",
          "when": "false"
        },
        {
          "command": "leointeg.saveLeoFileFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.refreshFromDisk",
          "when": "false"
        },
        {
          "command": "leointeg.refreshFromDiskSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.writeAtFileNodesFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.writeDirtyAtFileNodesFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.openAside",
          "when": "false"
        },
        {
          "command": "leointeg.contractAllFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.prevFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.nextFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.editHeadline",
          "when": "false"
        },
        {
          "command": "leointeg.editSelectedHeadlineFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.mark",
          "when": "false"
        },
        {
          "command": "leointeg.markSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.unmark",
          "when": "false"
        },
        {
          "command": "leointeg.unmarkSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.copyNode",
          "when": "false"
        },
        {
          "command": "leointeg.cutNode",
          "when": "false"
        },
        {
          "command": "leointeg.cutNodeSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.pasteNode",
          "when": "false"
        },
        {
          "command": "leointeg.pasteNodeAtSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.pasteNodeAsClone",
          "when": "false"
        },
        {
          "command": "leointeg.pasteNodeAsCloneAtSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.delete",
          "when": "false"
        },
        {
          "command": "leointeg.deleteSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineDown",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineDownSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineLeft",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineLeftSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineRight",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineRightSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineUp",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineUpSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.insertNode",
          "when": "false"
        },
        {
          "command": "leointeg.insertNodeSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.insertNodeSelectionInterrupt",
          "when": "false"
        },
        {
          "command": "leointeg.insertChildNode",
          "when": "false"
        },
        {
          "command": "leointeg.insertChildNodeSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.insertChildNodeSelectionInterrupt",
          "when": "false"
        },
        {
          "command": "leointeg.cloneNode",
          "when": "false"
        },
        {
          "command": "leointeg.cloneNodeSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.promote",
          "when": "false"
        },
        {
          "command": "leointeg.promoteSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.demote",
          "when": "false"
        },
        {
          "command": "leointeg.demoteSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.sortChildrenSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.sortSiblingsSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.gotoNextClone",
          "when": "false"
        },
        {
          "command": "leointeg.gotoNextCloneSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.gotoFirstVisible",
          "when": "false"
        },
        {
          "command": "leointeg.gotoLastVisible",
          "when": "false"
        },
        {
          "command": "leointeg.gotoFirstSibling",
          "when": "false"
        },
        {
          "command": "leointeg.gotoLastSibling",
          "when": "false"
        },
        {
          "command": "leointeg.gotoNextVisible",
          "when": "false"
        },
        {
          "command": "leointeg.gotoPrevVisible",
          "when": "false"
        },
        {
          "command": "leointeg.contractOrGoLeft",
          "when": "false"
        },
        {
          "command": "leointeg.expandAndGoRight",
          "when": "false"
        },
        {
          "command": "leointeg.scrollTop",
          "when": "false"
        },
        {
          "command": "leointeg.scrollBottom",
          "when": "false"
        },
        {
          "command": "leointeg.pageUp",
          "when": "false"
        },
        {
          "command": "leointeg.pageDown",
          "when": "false"
        },
        {
          "command": "leointeg.hoistNode",
          "when": "false"
        },
        {
          "command": "leointeg.hoistSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.deHoistFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.undoFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.redoFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.revertToUndo",
          "when": "false"
        },
        {
          "command": "leointeg.findNextFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.findPreviousFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.replaceFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.replaceThenFindFromOutline",
          "when": "false"
        }
      ],
      "explorer/context": [
        {
          "command": "leointeg.openLeoFile",
          "when": "leoBridgeReady && resourceScheme == file && resourceExtname == .leo || leoBridgeReady && resourceScheme == file && resourceExtname == .leojs",
          "group": "navigation@1"
        }
      ],
      "editor/title": [
        {
          "command": "leointeg.prev",
          "when": "resourceScheme == leo && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.next",
          "when": "resourceScheme == leo && leoTreeOpened",
          "group": "navigation@2"
        },
        {
          "command": "leointeg.executeScript",
          "when": "resourceScheme == leo && leoTreeOpened",
          "group": "navigation@3"
        },
        {
          "command": "leointeg.extract",
          "when": "resourceScheme == leo && leoTreeOpened",
          "group": "navigation@4"
        },
        {
          "command": "leointeg.extractNames",
          "when": "resourceScheme == leo && leoTreeOpened",
          "group": "navigation@5"
        },
        {
          "command": "leointeg.importAnyFile",
          "when": "resourceScheme == leo && leoTreeOpened",
          "group": "navigation@6"
        },
        {
          "command": "leointeg.showSettingsPage",
          "when": "resourceScheme == leo",
          "group": "navigation@7"
        }
      ],
      "editor/context": [
        {
          "command": "leointeg.findVar",
          "when": "!editorHasMultipleSelections && resourceScheme == leo && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.findDef",
          "when": "!editorHasMultipleSelections && resourceScheme == leo && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.extract",
          "when": "!editorHasMultipleSelections && resourceScheme == leo && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.extractNames",
          "when": "editorHasSelection && !editorHasMultipleSelections && resourceScheme == leo && leoTreeOpened",
          "group": "navigation@1"
        }
      ],
      "view/title": [
        {
          "command": "leointeg.openLeoFile",
          "when": "view =~ /^leoIntegration/ && leoBridgeReady && !leoTreeOpened || view =~ /^leoDocuments/ && leoBridgeReady",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.newLeoFile",
          "when": "view =~ /^leoIntegration/ && leoBridgeReady && !leoTreeOpened || view =~ /^leoDocuments/ && leoBridgeReady",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.showSettingsPage",
          "when": "view =~ /^leoFindPanel|^leoDocuments|^leoButtons/ && leoBridgeReady",
          "group": "navigation@9"
        },
        {
          "command": "leointeg.showLogPane",
          "when": "view =~ /^leoFindPanel|^leoDocuments|^leoButtons/ && leoBridgeReady",
          "group": "navigation@9"
        },
        {
          "command": "leointeg.findQuickSelected",
          "when": "view =~ /^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.findQuickTimeline",
          "when": "view =~ /^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.findQuickChanged",
          "when": "view =~ /^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.history",
          "when": "view =~ /^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.markedList",
          "when": "view =~ /^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.showSettingsPage",
          "when": "view =~ /^leoIntegration/ && !leoTreeOpened",
          "group": "navigation@2"
        },
        {
          "command": "leointeg.clearRecentFiles",
          "when": "view =~ /^leoIntegration/ && !leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.connectToServer",
          "when": "view =~ /^leoIntegration/ && !leoBridgeReady && !leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.startServer",
          "when": "view =~ /^leoIntegration/ && !leoBridgeReady && !leoTreeOpened && !leoServerStarted",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.stopServer",
          "when": "view =~ /^leoIntegration/ && !leoBridgeReady && !leoTreeOpened && leoServerStarted",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.saveAsLeoFile",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened && !leoTreeTitled",
          "group": "navigation@2"
        },
        {
          "command": "leointeg.saveAsLeoJsFile",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened && !leoTreeTitled",
          "group": "navigation@2"
        },
        {
          "command": "leointeg.prevFromOutline",
          "when": "view =~ /^leoIntegration|^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@3"
        },
        {
          "command": "leointeg.nextFromOutline",
          "when": "view =~ /^leoIntegration|^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@4"
        },
        {
          "command": "leointeg.undoFromOutline",
          "when": "view =~ /^leoIntegration|^leoUndo/ && leoTreeOpened",
          "group": "navigation@5"
        },
        {
          "command": "leointeg.redoFromOutline",
          "when": "view =~ /^leoIntegration|^leoUndo/ && leoTreeOpened",
          "group": "navigation@6"
        },
        {
          "command": "leointeg.deHoistFromOutline",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened && !leoTopHoistChapter",
          "group": "navigation@7"
        },
        {
          "command": "leointeg.chapterMain",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened && leoTopHoistChapter",
          "group": "navigation@7"
        },
        {
          "command": "leointeg.hoistSelectionFromOutline",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened",
          "group": "navigation@8"
        },
        {
          "command": "leointeg.findNextFromOutline",
          "when": "view =~ /^leoFindPanel/ && leoTreeOpened",
          "group": "navigation@2"
        },
        {
          "command": "leointeg.findPreviousFromOutline",
          "when": "view =~ /^leoFindPanel/ && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.chapterBack",
          "when": "view =~ /^leoFindPanel|^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@5"
        },
        {
          "command": "leointeg.chapterNext",
          "when": "view =~ /^leoFindPanel|^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@5"
        },
        {
          "command": "leointeg.chapterSelect",
          "when": "view =~ /^leoFindPanel|^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@5"
        },
        {
          "command": "leointeg.chapterMain",
          "when": "view =~ /^leoFindPanel|^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@6"
        },
        {
          "command": "leointeg.promoteSelectionFromOutline",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened",
          "group": "navigation@9"
        },
        {
          "command": "leointeg.demoteSelectionFromOutline",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened",
          "group": "navigation@10"
        },
        {
          "command": "leointeg.importAnyFile",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened",
          "group": "navigation@11"
        },
        {
          "command": "leointeg.contractAllFromOutline",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened",
          "group": "navigation@12"
        }
      ],
      "view/item/context": [
        {
          "command": "leointeg.saveLeoFileFromOutline",
          "when": "viewItem =~ /^leoDocumentSelectedTitled/",
          "group": "inline@1"
        },
        {
          "command": "leointeg.saveAsLeoFile",
          "when": "viewItem =~ /^leoDocumentSelected/",
          "group": "inline@1"
        },
        {
          "command": "leointeg.saveAsLeoJsFile",
          "when": "viewItem =~ /^leoDocumentSelectedUntitled/",
          "group": "inline@1"
        },
        {
          "command": "leointeg.closeLeoFile",
          "when": "viewItem =~ /^leoDocumentSelected/",
          "group": "inline@2"
        },
        {
          "command": "leointeg.editHeadline",
          "when": "showEditOnNodes && viewItem =~ /^leoNode/",
          "group": "inline@1"
        },
        {
          "command": "leointeg.insertNode",
          "when": "showAddOnNodes && viewItem =~ /^leoNode/",
          "group": "inline@2"
        },
        {
          "command": "leointeg.copyNode",
          "when": "showCopyOnNodes && viewItem =~ /^leoNode/",
          "group": "inline@3"
        },
        {
          "command": "leointeg.cloneNode",
          "when": "showCloneOnNodes && viewItem =~ /^leoNode/",
          "group": "inline@3"
        },
        {
          "command": "leointeg.mark",
          "when": "showMarkOnNodes && viewItem =~ /^leoNodeUnmarked/",
          "group": "inline@4"
        },
        {
          "command": "leointeg.unmark",
          "when": "showMarkOnNodes && viewItem =~ /^leoNodeMarked/",
          "group": "inline@4"
        },
        {
          "command": "leointeg.openAside",
          "when": "showOpenAside && viewItem =~ /^leoNode/",
          "group": "leoNodeContext1@1"
        },
        {
          "command": "leointeg.hoistNode",
          "when": "viewItem =~ /leoNodeNotRoot/",
          "group": "leoNodeContext1@2"
        },
        {
          "command": "leointeg.deHoist",
          "when": "leoCanDehoist && viewItem =~ /leoNodeRoot/",
          "group": "leoNodeContext1@2"
        },
        {
          "command": "leointeg.refreshFromDisk",
          "when": "viewItem =~ /leoNodeAtFile/",
          "group": "leoNodeContext1@3"
        },
        {
          "command": "leointeg.mark",
          "when": "viewItem =~ /^leoNodeUnmarked/",
          "group": "leoNodeContext2@1"
        },
        {
          "command": "leointeg.unmark",
          "when": "viewItem =~ /^leoNodeMarked/",
          "group": "leoNodeContext2@2"
        },
        {
          "command": "leointeg.copyNode",
          "when": "viewItem =~ /^leoNode/",
          "group": "leoNodeContext2@3"
        },
        {
          "command": "leointeg.cutNode",
          "when": "viewItem =~ /^leoNode/",
          "group": "leoNodeContext2@4"
        },
        {
          "command": "leointeg.pasteNode",
          "when": "viewItem =~ /^leoNode/",
          "group": "leoNodeContext2@5"
        },
        {
          "command": "leointeg.pasteNodeAsClone",
          "when": "viewItem =~ /^leoNode/",
          "group": "leoNodeContext2@6"
        },
        {
          "command": "leointeg.delete",
          "when": "viewItem =~ /^leoNode/",
          "group": "leoNodeContext2@7"
        },
        {
          "command": "leointeg.insertNode",
          "when": "leoTreeOpened && viewItem =~ /^leoNode/",
          "group": "leoNodeContext3@1"
        },
        {
          "command": "leointeg.cloneNode",
          "when": "leoTreeOpened && viewItem =~ /^leoNode/",
          "group": "leoNodeContext3@2"
        },
        {
          "command": "leointeg.gotoNextClone",
          "when": "leoTreeOpened && viewItem =~ /leoNodeCloned/",
          "group": "leoNodeContext3@3"
        },
        {
          "command": "leointeg.removeButton",
          "when": "leoTreeOpened && viewItem =~ /^leoButtonNode/",
          "group": "leoButtonContext1@1"
        },
        {
          "command": "leointeg.gotoScript",
          "when": "leoTreeOpened && viewItem =~ /^leoButtonNode/",
          "group": "leoButtonContext1@2"
        },
        {
          "command": "leointeg.revertToUndo",
          "when": "leoTreeOpened && viewItem =~ /^leoUndoNode/",
          "group": "leoUndosContext1@1"
        }
      ],
      "extension/context": [
        {
          "command": "leointeg.showSettingsPage",
          "when": "extension =~ /^boltex.leointeg/ && extensionStatus == installed",
          "group": "3_leointeg@1"
        }
      ]
    },
    "keybindings": [
      {
        "command": "leointeg.executeScript",
        "key": "ctrl+b",
        "mac": "cmd+b",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.minibuffer",
        "key": "alt+x",
        "when": "leoTreeOpened"
      },
      {
        "command": "leointeg.showOutline",
        "key": "alt+t",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.showOutline",
        "key": "ctrl+t",
        "mac": "cmd+t",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.showBody",
        "key": "ctrl+t",
        "mac": "cmd+t",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.showBody",
        "key": "alt+d",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.showBody",
        "key": "ctrl+g",
        "mac": "cmd+g",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.showBody",
        "key": "tab",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.showBody",
        "key": "enter",
        "when": "leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.saveLeoFileFromOutline",
        "key": "ctrl+s",
        "mac": "cmd+s",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.saveLeoFile",
        "key": "ctrl+s",
        "mac": "cmd+s",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.newLeoFile",
        "key": "ctrl+n",
        "mac": "cmd+n",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.openLeoFile",
        "key": "ctrl+o",
        "mac": "cmd+o",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.writeAtFileNodes",
        "key": "ctrl+shift+w",
        "mac": "cmd+shift+w",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.writeAtFileNodesFromOutline",
        "key": "ctrl+shift+w",
        "mac": "cmd+shift+w",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.writeDirtyAtFileNodes",
        "key": "ctrl+shift+q",
        "mac": "cmd+shift+q",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.writeDirtyAtFileNodesFromOutline",
        "key": "ctrl+shift+q",
        "mac": "cmd+shift+q",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.contractAll",
        "key": "alt+-",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.contractAllFromOutline",
        "key": "alt+-",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.editSelectedHeadline",
        "key": "ctrl+h",
        "mac": "cmd+h",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.editSelectedHeadlineFromOutline",
        "key": "ctrl+h",
        "mac": "cmd+h",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.markSelection",
        "key": "ctrl+m",
        "mac": "cmd+m",
        "when": "leoTreeOpened && !leoMarked && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.markSelectionFromOutline",
        "key": "ctrl+m",
        "mac": "cmd+m",
        "when": "leoTreeOpened && !leoMarked && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.unmarkSelection",
        "key": "ctrl+m",
        "mac": "cmd+m",
        "when": "leoTreeOpened && leoMarked && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.unmarkSelectionFromOutline",
        "key": "ctrl+m",
        "mac": "cmd+m",
        "when": "leoTreeOpened && leoMarked && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.extract",
        "key": "ctrl+shift+d",
        "mac": "cmd+shift+d",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && editorHasSelection && resourceScheme == leo"
      },
      {
        "command": "leointeg.extractNames",
        "key": "ctrl+shift+n",
        "mac": "cmd+shift+n",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && editorHasSelection && resourceScheme == leo"
      },
      {
        "command": "leointeg.moveOutlineDownSelection",
        "key": "ctrl+d",
        "mac": "cmd+d",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.moveOutlineDownSelection",
        "key": "shift+alt+down",
        "mac": "shift+alt+down",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.moveOutlineDownSelectionFromOutline",
        "key": "ctrl+d",
        "mac": "cmd+d",
        "when": "leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineDownSelectionFromOutline",
        "key": "shift+down",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineDownSelectionFromOutline",
        "key": "shift+alt+down",
        "mac": "shift+alt+down",
        "when": "leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineLeftSelection",
        "key": "ctrl+l",
        "mac": "cmd+l",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.moveOutlineLeftSelection",
        "key": "shift+alt+left",
        "mac": "shift+alt+left",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.moveOutlineLeftSelectionFromOutline",
        "key": "ctrl+l",
        "mac": "cmd+l",
        "when": "leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineLeftSelectionFromOutline",
        "key": "shift+left",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineLeftSelectionFromOutline",
        "key": "shift+alt+left",
        "mac": "shift+alt+left",
        "when": "leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineRightSelection",
        "key": "ctrl+r",
        "mac": "cmd+r",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.moveOutlineRightSelection",
        "key": "shift+alt+right",
        "mac": "shift+alt+right",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.moveOutlineRightSelectionFromOutline",
        "key": "ctrl+r",
        "mac": "cmd+r",
        "when": "leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineRightSelectionFromOutline",
        "key": "shift+right",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineRightSelectionFromOutline",
        "key": "shift+alt+right",
        "mac": "shift+alt+right",
        "when": "leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineUpSelection",
        "key": "ctrl+u",
        "mac": "cmd+u",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.moveOutlineUpSelection",
        "key": "shift+alt+up",
        "mac": "shift+alt+up",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.moveOutlineUpSelectionFromOutline",
        "key": "ctrl+u",
        "mac": "cmd+u",
        "when": "leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineUpSelectionFromOutline",
        "key": "shift+up",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineUpSelectionFromOutline",
        "key": "shift+alt+up",
        "mac": "shift+alt+up",
        "when": "leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.sortSiblingsSelection",
        "key": "alt+a",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.sortSiblingsSelectionFromOutline",
        "key": "alt+a",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.promoteSelection",
        "key": "ctrl+[BracketLeft]",
        "win": "ctrl+oem_4",
        "linux": "ctrl+[",
        "mac": "cmd+[BracketLeft]",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.promoteSelectionFromOutline",
        "key": "ctrl+[BracketLeft]",
        "win": "ctrl+oem_4",
        "linux": "ctrl+[",
        "mac": "cmd+[BracketLeft]",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.demoteSelection",
        "key": "ctrl+[BracketRight]",
        "win": "ctrl+oem_6",
        "linux": "ctrl+]",
        "mac": "cmd+[BracketRight]",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.demoteSelectionFromOutline",
        "key": "ctrl+[BracketRight]",
        "win": "ctrl+oem_6",
        "linux": "ctrl+]",
        "mac": "cmd+[BracketRight]",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.insertNodeSelection",
        "key": "ctrl+i",
        "mac": "cmd+i",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.insertNodeSelectionFromOutline",
        "key": "ctrl+i",
        "mac": "cmd+i",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.insertNodeSelectionInterrupt",
        "key": "ctrl+i",
        "mac": "cmd+i",
        "when": "!terminalFocus && !panelFocus && leoTreeOpened && !sideBarFocus && !editorTextFocus"
      },
      {
        "command": "leointeg.insertNodeSelection",
        "key": "shift+insert",
        "mac": "shift+insert",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.insertNodeSelectionFromOutline",
        "key": "shift+insert",
        "mac": "shift+insert",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.insertNodeSelectionFromOutline",
        "key": "insert",
        "mac": "insert",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.insertNodeSelectionInterrupt",
        "key": "shift+insert",
        "mac": "shift+insert",
        "when": "!terminalFocus && !panelFocus && leoTreeOpened && !sideBarFocus && !editorTextFocus"
      },
      {
        "command": "leointeg.insertChildNodeSelection",
        "key": "ctrl+insert",
        "mac": "cmd+insert",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.insertChildNodeSelectionFromOutline",
        "key": "ctrl+insert",
        "mac": "cmd+insert",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.insertChildNodeSelectionInterrupt",
        "key": "ctrl+insert",
        "mac": "cmd+insert",
        "when": "!terminalFocus && !panelFocus && leoTreeOpened && !sideBarFocus && !editorTextFocus"
      },
      {
        "command": "leointeg.cloneNodeSelection",
        "key": "ctrl+`",
        "win": "ctrl+oem_3",
        "linux": "ctrl+`",
        "mac": "cmd+`",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.cloneNodeSelectionFromOutline",
        "key": "ctrl+`",
        "win": "ctrl+oem_3",
        "linux": "ctrl+`",
        "mac": "cmd+`",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.cutNodeSelection",
        "key": "ctrl+shift+x",
        "mac": "cmd+shift+x",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.cutNodeSelectionFromOutline",
        "key": "ctrl+shift+x",
        "mac": "cmd+shift+x",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.copyNodeSelection",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.pasteNodeAtSelection",
        "key": "ctrl+shift+v",
        "mac": "cmd+shift+v",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.pasteNodeAtSelectionFromOutline",
        "key": "ctrl+shift+v",
        "mac": "cmd+shift+v",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.deleteSelection",
        "key": "ctrl+shift+backspace",
        "mac": "cmd+shift+backspace",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.deleteSelectionFromOutline",
        "key": "ctrl+shift+backspace",
        "mac": "cmd+shift+backspace",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.deleteSelectionFromOutline",
        "key": "delete",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.scrollTop",
        "key": "alt+home",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoLastSibling",
        "key": "alt+end",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.scrollTop",
        "key": "home",
        "when": "leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.scrollBottom",
        "key": "end",
        "when": "leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoFirstSibling",
        "key": "pageup",
        "when": "leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoLastSibling",
        "key": "pagedown",
        "when": "leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoNextCloneSelectionFromOutline",
        "key": "alt+n",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoNextCloneSelection",
        "key": "alt+n",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.gotoNextVisible",
        "key": "down",
        "when": "leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoNextVisible",
        "key": "alt+down",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments|^leoButtons/ || leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.gotoPrevVisible",
        "key": "up",
        "when": "leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoPrevVisible",
        "key": "alt+up",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments|^leoButtons/ || leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.contractOrGoLeft",
        "key": "left",
        "when": "leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.contractOrGoLeft",
        "key": "alt+left",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments|^leoButtons/ || leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.expandAndGoRight",
        "key": "right",
        "when": "leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.expandAndGoRight",
        "key": "alt+right",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments|^leoButtons/ || leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.undoFromOutline",
        "key": "ctrl+z",
        "mac": "cmd+z",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && !inputFocus && !editorTextFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoUndos|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.redoFromOutline",
        "key": "ctrl+shift+z",
        "mac": "cmd+shift+z",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && !inputFocus && !editorTextFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoUndos|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.startSearch",
        "key": "ctrl+f",
        "mac": "cmd+f",
        "when": "leoTreeOpened && sideBarFocus && !editorFocus && !editorTextFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.findNextFromOutline",
        "key": "f3",
        "when": "leoFindFocus || leoTreeOpened && !editorTextFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.findNext",
        "key": "f3",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.findPreviousFromOutline",
        "key": "f2",
        "when": "leoFindFocus || leoTreeOpened && !editorTextFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.findPrevious",
        "key": "f2",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.replace",
        "key": "ctrl+=",
        "mac": "cmd+=",
        "when": "leoTreeOpened && editorTextFocus && editorHasSelection && resourceScheme == leo"
      },
      {
        "command": "leointeg.replaceFromOutline",
        "key": "ctrl+=",
        "mac": "cmd+=",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.replaceThenFind",
        "key": "ctrl+-",
        "mac": "cmd+-",
        "when": "leoTreeOpened && editorTextFocus && editorHasSelection && resourceScheme == leo"
      },
      {
        "command": "leointeg.replaceThenFindFromOutline",
        "key": "ctrl+-",
        "mac": "cmd+-",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.gotoGlobalLine",
        "key": "alt+g",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.setFindEverywhereOption",
        "key": "ctrl+alt+e",
        "mac": "cmd+alt+e",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.setFindNodeOnlyOption",
        "key": "ctrl+alt+n",
        "mac": "cmd+alt+n",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.setFindFileOnlyOption",
        "key": "ctrl+alt+l",
        "mac": "cmd+alt+l",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.setFindSuboutlineOnlyOption",
        "key": "ctrl+alt+s",
        "mac": "cmd+alt+s",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.toggleFindIgnoreCaseOption",
        "key": "ctrl+alt+i",
        "mac": "cmd+alt+i",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.toggleFindMarkChangesOption",
        "key": "ctrl+alt+c",
        "mac": "cmd+alt+c",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.toggleFindMarkFindsOption",
        "key": "ctrl+alt+f",
        "mac": "cmd+alt+f",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.toggleFindRegexpOption",
        "key": "ctrl+alt+x",
        "mac": "cmd+alt+x",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.toggleFindWordOption",
        "key": "ctrl+alt+w",
        "mac": "cmd+alt+w",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.toggleFindSearchBodyOption",
        "key": "ctrl+alt+b",
        "mac": "cmd+alt+b",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "leointeg.toggleFindSearchHeadlineOption",
        "key": "ctrl+alt+h",
        "mac": "cmd+alt+h",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leo"
      },
      {
        "command": "workbench.files.action.collapseExplorerFolders",
        "key": "alt+-",
        "when": "!inSearchEditor && !sideBarFocus && resourceScheme == untitled || !inSearchEditor && !sideBarFocus && resourceScheme == file || !inSearchEditor && explorerViewletFocus"
      }
    ],
    "resourceLabelFormatters": [
      {
        "scheme": "leo",
        "formatting": {
          "label": "LEO: BODY",
          "separator": "/",
          "workspaceSuffix": ""
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "test-compile": "tsc -p ./",
    "lint": "tslint -p ./"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/lodash": "^4.14.177",
    "@types/mocha": "^7.0.2",
    "@types/node": "^14.11.2",
    "@types/vscode": "^1.68.0",
    "@types/ws": "^7.2.6",
    "clean-webpack-plugin": "^3.0.0",
    "csp-html-webpack-plugin": "^4.0.0",
    "css-loader": "^3.5.3",
    "eslint": "^7.9.0",
    "fork-ts-checker-webpack-plugin": "^4.1.6",
    "glob": "^7.1.6",
    "html-loader": "^1.1.0",
    "html-webpack-exclude-assets-plugin": "0.0.7",
    "html-webpack-plugin": "^3.2.0",
    "imagemin-webpack-plugin": "^2.4.2",
    "mini-css-extract-plugin": "^0.9.0",
    "mocha": "^7.2.0",
    "node-sass": "^4.14.1",
    "sass-loader": "^8.0.2",
    "ts-loader": "^7.0.5",
    "tslint": "^6.1.3",
    "typescript": "^3.9.7",
    "vscode-test": "^1.4.0",
    "webpack": "^4.44.2",
    "webpack-cli": "^3.3.12"
  },
  "dependencies": {
    "bufferutil": "^4.0.1",
    "hasbin": "^1.2.3",
    "lodash": "^4.17.21",
    "portfinder": "^1.0.28",
    "tree-kill": "^1.2.2",
    "ws": "^7.4.6"
  }
}
