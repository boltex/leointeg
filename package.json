{
  "name": "leointeg",
  "displayName": "Leo Editor Integration with Visual Studio Code",
  "description": "Use Leo, the literate editor with outline, directly in vscode.",
  "version": "0.1.6",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/boltex/leointeg"
  },
  "engines": {
    "vscode": "^1.38.0"
  },
  "keywords": [
    "leo",
    "literate",
    "outline",
    "programming",
    "IDE"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onView:leoIntegration",
    "workspaceContains:**/*.leo"
  ],
  "main": "./out/extension.js",
  "icon": "resources/leoapp128px.png",
  "galleryBanner": {
    "color": "#fffbdc",
    "theme": "light"
  },
  "contributes": {
    "configuration": {
      "title": "Leo Integration",
      "properties": {
        "leoIntegration.treeKeepFocus": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Specifies whether to keep focus in the outline when selecting a node"
        },
        "leoIntegration.treeKeepFocusWhenAside": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Specifies whether to keep focus in the outline when opening a body pane on the side"
        },
        "leoIntegration.treeInExplorer": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Show the outline tree in the explorer view"
        },
        "leoIntegration.python": {
          "scope": "application",
          "default": "",
          "type": "string",
          "description": "Specifies the name of the python3 launcher - leaving empty will try 'python3', 'py' and 'python'"
        },
        "leoIntegration.showOpenAside": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Offer 'Open to the Side' in nodes context menu"
        },
        "leoIntegration.bodyEditDelay": {
          "scope": "application",
          "type": "number",
          "default": 500,
          "minimum": 250,
          "maximum": 1000,
          "description": "Specifies delay time for edits to be sent to Leo, in milliseconds"
        },
        "leoIntegration.connectionType": {
          "scope": "application",
          "description": "Connection to leoBridge - ONLY 'standard I/O' FOR NOW",
          "type": "string",
          "default": "standard I/O",
          "enum": [
            "standard I/O",
            "TCP/IP",
            "HTTP",
            "WebSocket"
          ],
          "enumDescriptions": [
            "Uses stdin/stdout",
            "TCP/IP on port 'Connection Port' * Not Available",
            "HTTP REST Api * Not Available",
            "WebSocket stream * Not Available"
          ]
        },
        "leoIntegration.connectionPort": {
          "default": 80,
          "scope": "application",
          "minimum": 0,
          "maximum": 65535,
          "type": "number",
          "description": "Connection port"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "leoIntegrationView",
          "title": "Leo",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "leoIntegrationExplorer",
          "name": "Leo Outline",
          "when": "leoBridgeReady==true && treeInExplorer==true"
        }
      ],
      "leoIntegrationView": [
        {
          "id": "leoIntegration",
          "name": "Outline"
        }
      ]
    },
    "commands": [
      {
        "command": "leointeg.openLeoFile",
        "title": "Open Leo File",
        "icon": {
          "light": "resources/light/folder.svg",
          "dark": "resources/dark/folder.svg"
        }
      },
      {
        "command": "leointeg.closeLeoFile",
        "title": "Close Leo File",
        "icon": {
          "light": "resources/light/close.svg",
          "dark": "resources/dark/close.svg"
        }
      },
      {
        "command": "leointeg.test",
        "title": "Test Leo Integration"
      },
      {
        "command": "leointeg.killLeo",
        "title": "Kill Leo Integration"
      },
      {
        "command": "leointeg.editHeadline",
        "title": "Edit Headline",
        "icon": {
          "light": "resources/light/edit.svg",
          "dark": "resources/dark/edit.svg"
        }
      },
      {
        "command": "leointeg.openAside",
        "title": "Open to the Side"
      },
      {
        "command": "leointeg.mark",
        "title": "Mark"
      },
      {
        "command": "leointeg.unmark",
        "title": "Unmark"
      },
      {
        "command": "leointeg.copyNode",
        "title": "Copy Node"
      },
      {
        "command": "leointeg.cutNode",
        "title": "Cut Node"
      },
      {
        "command": "leointeg.pasteNode",
        "title": "Paste Node"
      },
      {
        "command": "leointeg.pasteNodeAsClone",
        "title": "Paste Node as Clone"
      },
      {
        "command": "leointeg.delete",
        "title": "Delete"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "leointeg.openLeoFile",
          "when": "leoBridgeReady==true && !leoTreeOpened"
        },
        {
          "command": "leointeg.closeLeoFile",
          "when": "leoTreeOpened==true"
        },
        {
          "command": "leointeg.test",
          "when": "true"
        },
        {
          "command": "leointeg.killLeo",
          "when": "leoBridgeReady==true"
        }
      ],
      "view/title": [
        {
          "command": "leointeg.openLeoFile",
          "when": "leoBridgeReady==true && !leoTreeOpened",
          "group": "navigation"
        },
        {
          "command": "leointeg.closeLeoFile",
          "when": "leoTreeOpened==true",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "leointeg.editHeadline",
          "when": "viewItem =~ /leoNode/",
          "group": "inline"
        },
        {
          "command": "leointeg.openAside",
          "when": "showOpenAside == true && viewItem =~ /leoNode/",
          "group": "leoNodeContext1@1"
        },
        {
          "command": "leointeg.mark",
          "when": "viewItem == leoNode",
          "group": "leoNodeContext2@1"
        },
        {
          "command": "leointeg.unmark",
          "when": "viewItem == leoNodeMarked",
          "group": "leoNodeContext2@2"
        },
        {
          "command": "leointeg.copyNode",
          "when": "viewItem =~ /leoNode/",
          "group": "leoNodeContext2@3"
        },
        {
          "command": "leointeg.cutNode",
          "when": "viewItem =~ /leoNode/",
          "group": "leoNodeContext2@4"
        },
        {
          "command": "leointeg.pasteNode",
          "when": "viewItem =~ /leoNode/",
          "group": "leoNodeContext2@5"
        },
        {
          "command": "leointeg.pasteNodeAsClone",
          "when": "viewItem =~ /leoNode/",
          "group": "leoNodeContext2@6"
        },
        {
          "command": "leointeg.delete",
          "when": "viewItem =~ /leoNode/",
          "group": "leoNodeContext2@7"
        }
      ]
    },
    "resourceLabelFormatters": [
      {
        "scheme": "leo",
        "formatting": {
          "label": "LEO: BODY",
          "separator": "/",
          "workspaceSuffix": ""
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "^5.2.6",
    "@types/node": "^10.12.21",
    "@types/vscode": "^1.38.0",
    "glob": "^7.1.4",
    "mocha": "^6.1.4",
    "typescript": "^3.3.1",
    "tslint": "^5.12.1",
    "vscode-test": "^1.0.2"
  },
  "dependencies": {
    "hasbin": "^1.2.3"
  }
}