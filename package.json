{
  "name": "leointeg",
  "displayName": "Leo Editor Integration with Visual Studio Code",
  "description": "Use Leo, the literate editor with outline, directly in vscode.",
  "version": "1.0.21",
  "author": {
    "name": "FÃ©lix Malboeuf"
  },
  "sponsor": {
    "url": "https://boltex.github.io/"
  },
  "publisher": "boltex",
  "license": "SEE LICENSE IN LICENSE",
  "repository": {
    "type": "git",
    "url": "https://github.com/boltex/leointeg"
  },
  "bugs": {
    "url": "https://github.com/boltex/leointeg/issues"
  },
  "homepage": "https://github.com/boltex/leointeg#readme",
  "engines": {
    "vscode": "^1.86.0"
  },
  "keywords": [
    "leo",
    "tree",
    "outline",
    "editor",
    "literate"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "qna": false,
  "main": "./dist/extension",
  "icon": "resources/leoapp256px.png",
  "galleryBanner": {
    "color": "#fff3dc",
    "theme": "light"
  },
  "contributes": {
    "configuration": {
      "title": "Leo Editor Integration",
      "properties": {
        "leoIntegration.checkForChangeExternalFiles": {
          "scope": "application",
          "default": "none",
          "type": "string",
          "description": "Set default for checking changes to external files",
          "enum": [
            "none",
            "force-check",
            "force-ignore"
          ],
          "enumDescriptions": [
            "Default from Leo's config",
            "Check for changes",
            "Ignore all changes"
          ]
        },
        "leoIntegration.defaultReloadIgnore": {
          "scope": "application",
          "default": "none",
          "type": "string",
          "description": "Set default for derived files so that they reload, or ignore, when changes are detected",
          "enum": [
            "none",
            "yes-all",
            "no-all"
          ],
          "enumDescriptions": [
            "Choose each time",
            "Reload All",
            "Ignore All"
          ]
        },
        "leoIntegration.leoTreeBrowse": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Specifies whether to use Leo's style of tree browsing with the arrow keys"
        },
        "leoIntegration.treeKeepFocus": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Specifies whether to keep focus in the outline when selecting a node - overridden by \"leoTreeBrowse\""
        },
        "leoIntegration.treeKeepFocusWhenAside": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Specifies whether to keep focus in the outline when opening a body pane on the side"
        },
        "leoIntegration.goAnywhereShortcut": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Enables Leo's 'Go Anywhere' to replace 'Go to file' with the Ctrl+P keyboard shortcut when focus in in outline or body"
        },
        "leoIntegration.collapseAllShortcut": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Enables the Alt+'-' keyboard shortcut for collapsing all folders in the Explorer View"
        },
        "leoIntegration.activityViewShortcut": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Enables the Ctrl+Shift+L keyboard shortcut for showing the LeoIntegration view"
        },
        "leoIntegration.treeInExplorer": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Show the outline tree in the explorer view"
        },
        "leoIntegration.showOpenAside": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Offer 'Open to the Side' in nodes context menu"
        },
        "leoIntegration.showEditOnNodes": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Shows 'Edit Headline' button on tree nodes"
        },
        "leoIntegration.showAddOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Insert' button on tree nodes"
        },
        "leoIntegration.showMarkOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Mark/Unmark' buttons on tree nodes"
        },
        "leoIntegration.showCloneOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Clone' button on tree nodes"
        },
        "leoIntegration.showCopyOnNodes": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows 'Copy' button on tree nodes"
        },
        "leoIntegration.showBranchInOutlineTitle": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Shows the current git branch in outline pane's title"
        },
        "leoIntegration.invertNodeContrast": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Inverts the contrast of the dirty/clean border aspect of tree nodes"
        },
        "leoIntegration.showUnlOnStatusBar": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Displays an UNL indicator on the status bar"
        },
        "leoIntegration.leoEditorPath": {
          "scope": "application",
          "default": "",
          "type": "string",
          "description": "Specifies the location of your Leo-Editor installation"
        },
        "leoIntegration.leoPythonCommand": {
          "scope": "application",
          "default": "",
          "type": "string",
          "description": "Specifies the command to start python (Defaults to 'py' on windows and 'python3' otherwise)"
        },
        "leoIntegration.startServerAutomatically": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Starts a Leo server automatically, by running the Leo server script"
        },
        "leoIntegration.connectToServerAutomatically": {
          "scope": "application",
          "default": false,
          "type": "boolean",
          "description": "Connect automatically to a Leo server on specified 'Connection Port' upon activation of this extension"
        },
        "leoIntegration.connectionAddress": {
          "default": "localhost",
          "scope": "application",
          "type": "string",
          "description": "Connection host"
        },
        "leoIntegration.connectionPort": {
          "default": 32125,
          "scope": "application",
          "minimum": 0,
          "maximum": 65535,
          "type": "number",
          "description": "Connection port"
        },
        "leoIntegration.setDetached": {
          "scope": "application",
          "default": true,
          "type": "boolean",
          "description": "Starts the server process with the 'detached' flag - Allows a dialog to be shown after closing for unsaved Leo documents"
        },
        "leoIntegration.limitUsers": {
          "default": 1,
          "scope": "application",
          "minimum": 1,
          "maximum": 255,
          "type": "number",
          "description": "Limit of concurrent connections - Allows for multi-user synchronous editing"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "leoIntegrationView",
          "title": "Leo",
          "icon": "$(leo-icon-leo-outline)"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "leoIntegrationExplorer",
          "name": "Leo Integration",
          "contextualTitle": "Leo",
          "when": "config.leoIntegration.treeInExplorer && !config.leojs.treeInExplorer",
          "visibility": "visible"
        },
        {
          "type": "webview",
          "id": "leoFindPanelExplorer",
          "contextualTitle": "Leo",
          "name": "Leo Find",
          "title": "Leo Find",
          "when": "config.leoIntegration.treeInExplorer && leoTreeOpened && !config.leojs.treeInExplorer",
          "visibility": "collapsed"
        },
        {
          "id": "leoGotoPanelExplorer",
          "name": "Leo Goto",
          "contextualTitle": "Leo",
          "when": "config.leoIntegration.treeInExplorer && leoTreeOpened && !config.leojs.treeInExplorer",
          "visibility": "collapsed"
        },
        {
          "id": "leoDocumentsExplorer",
          "name": "Leo Documents",
          "contextualTitle": "Leo",
          "when": "config.leoIntegration.treeInExplorer && leoTreeOpened && !config.leojs.treeInExplorer",
          "visibility": "collapsed"
        },
        {
          "id": "leoUndosExplorer",
          "name": "Leo Undo History",
          "contextualTitle": "Leo",
          "when": "config.leoIntegration.treeInExplorer && leoTreeOpened && !config.leojs.treeInExplorer",
          "visibility": "collapsed"
        },
        {
          "id": "leoButtonsExplorer",
          "name": "Leo Buttons",
          "contextualTitle": "Leo",
          "when": "config.leoIntegration.treeInExplorer && leoTreeOpened && !config.leojs.treeInExplorer",
          "visibility": "collapsed"
        }
      ],
      "leoIntegrationView": [
        {
          "id": "leoIntegration",
          "contextualTitle": "Leo",
          "name": "Integration",
          "visibility": "visible"
        },
        {
          "type": "webview",
          "contextualTitle": "Leo",
          "id": "leoFindPanel",
          "name": "Find",
          "title": "Find",
          "when": "leoTreeOpened",
          "visibility": "collapsed"
        },
        {
          "id": "leoGotoPanel",
          "contextualTitle": "Leo",
          "name": "Goto",
          "when": "leoTreeOpened",
          "visibility": "collapsed"
        },
        {
          "id": "leoDocuments",
          "contextualTitle": "Leo",
          "name": "Documents",
          "when": "leoTreeOpened",
          "visibility": "collapsed"
        },
        {
          "id": "leoUndos",
          "contextualTitle": "Leo",
          "name": "Undo History",
          "when": "leoTreeOpened",
          "visibility": "collapsed"
        },
        {
          "id": "leoButtons",
          "contextualTitle": "Leo",
          "name": "Buttons",
          "when": "leoTreeOpened",
          "visibility": "collapsed"
        }
      ]
    },
    "languages": [
      {
        "id": "leobody.plain",
        "aliases": [
          "Leo Body Plain",
          "leobody"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.plain.language-configuration.json"
      },
      {
        "id": "leobody.plain.wrap",
        "aliases": [
          "Leo Body Plain",
          "leobody"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.plain.language-configuration.json"
      },
      {
        "id": "leobody.python",
        "aliases": [
          "Leo Body Python",
          "leobody.python"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.python.language-configuration.json"
      },
      {
        "id": "leobody.python.wrap",
        "aliases": [
          "Leo Body Python",
          "leobody.python"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.python.language-configuration.json"
      },
      {
        "id": "leobody.typescript",
        "aliases": [
          "Leo Body Typescript",
          "leobody.typescript"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.typescript.language-configuration.json"
      },
      {
        "id": "leobody.typescript.wrap",
        "aliases": [
          "Leo Body Typescript",
          "leobody.typescript"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.typescript.language-configuration.json"
      },
      {
        "id": "leobody.javascript",
        "aliases": [
          "Leo Body Javascript",
          "leobody.javascript"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.javascript.language-configuration.json"
      },
      {
        "id": "leobody.javascript.wrap",
        "aliases": [
          "Leo Body Javascript",
          "leobody.javascript"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.javascript.language-configuration.json"
      },
      {
        "id": "leobody.c",
        "aliases": [
          "Leo Body c",
          "leobody.c"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.c.language-configuration.json"
      },
      {
        "id": "leobody.c.wrap",
        "aliases": [
          "Leo Body c",
          "leobody.c"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.c.language-configuration.json"
      },
      {
        "id": "leobody.cpp",
        "aliases": [
          "Leo Body C++",
          "leobody.cpp"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.cpp.language-configuration.json"
      },
      {
        "id": "leobody.cpp.wrap",
        "aliases": [
          "Leo Body C++",
          "leobody.cpp"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.cpp.language-configuration.json"
      },
      {
        "id": "leobody.css",
        "aliases": [
          "Leo Body CSS",
          "leobody.css"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.css.language-configuration.json"
      },
      {
        "id": "leobody.css.wrap",
        "aliases": [
          "Leo Body CSS",
          "leobody.css"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.css.language-configuration.json"
      },
      {
        "id": "leobody.fortran",
        "aliases": [
          "Leo Body Fortran",
          "leobody.fortran"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.fortran.language-configuration.json"
      },
      {
        "id": "leobody.fortran.wrap",
        "aliases": [
          "Leo Body Fortran",
          "leobody.fortran"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.fortran.language-configuration.json"
      },
      {
        "id": "leobody.fortran90",
        "aliases": [
          "Leo Body Fortran90",
          "leobody.fortran90"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.fortran.language-configuration.json"
      },
      {
        "id": "leobody.fortran90.wrap",
        "aliases": [
          "Leo Body Fortran90",
          "leobody.fortran90"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.fortran.language-configuration.json"
      },
      {
        "id": "leobody.html",
        "aliases": [
          "Leo Body HTML",
          "leobody.html"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.html.language-configuration.json"
      },
      {
        "id": "leobody.html.wrap",
        "aliases": [
          "Leo Body HTML",
          "leobody.html"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.html.language-configuration.json"
      },
      {
        "id": "leobody.java",
        "aliases": [
          "Leo Body Java",
          "leobody.java"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.java.language-configuration.json"
      },
      {
        "id": "leobody.java.wrap",
        "aliases": [
          "Leo Body Java",
          "leobody.java"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.java.language-configuration.json"
      },
      {
        "id": "leobody.json",
        "aliases": [
          "Leo Body Json",
          "leobody.json"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.json.language-configuration.json"
      },
      {
        "id": "leobody.json.wrap",
        "aliases": [
          "Leo Body Json",
          "leobody.json"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.json.language-configuration.json"
      },
      {
        "id": "leobody.markdown",
        "aliases": [
          "Leo Body Markdown",
          "leobody.markdown"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.markdown.language-configuration.json"
      },
      {
        "id": "leobody.markdown.wrap",
        "aliases": [
          "Leo Body Markdown",
          "leobody.markdown"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.markdown.language-configuration.json"
      },
      {
        "id": "leobody.php",
        "aliases": [
          "Leo Body PHP",
          "leobody.php"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.php.language-configuration.json"
      },
      {
        "id": "leobody.php.wrap",
        "aliases": [
          "Leo Body PHP",
          "leobody.php"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.php.language-configuration.json"
      },
      {
        "id": "leobody.restructuredtext",
        "aliases": [
          "Leo Body reStructuredText",
          "leobody.restructuredtext"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.rst.language-configuration.json"
      },
      {
        "id": "leobody.restructuredtext.wrap",
        "aliases": [
          "Leo Body reStructuredText",
          "leobody.restructuredtext"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.rst.language-configuration.json"
      },
      {
        "id": "leobody.rust",
        "aliases": [
          "Leo Body Rust",
          "leobody.rust"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.rust.language-configuration.json"
      },
      {
        "id": "leobody.rust.wrap",
        "aliases": [
          "Leo Body Rust",
          "leobody.rust"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.rust.language-configuration.json"
      },
      {
        "id": "leobody.xml",
        "aliases": [
          "Leo Body XML",
          "leobody.xml"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.xml.language-configuration.json"
      },
      {
        "id": "leobody.xml.wrap",
        "aliases": [
          "Leo Body XML",
          "leobody.xml"
        ],
        "extensions": [
          ""
        ],
        "icon": {
          "light": "resources/light/body-pane.svg",
          "dark": "resources/dark/body-pane.svg"
        },
        "configuration": "./language-configurations/leobody.xml.language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "leobody.plain",
        "scopeName": "source.leobody.plain",
        "path": "./syntaxes/leobody.plain.tmLanguage.json"
      },
      {
        "language": "leobody.plain.wrap",
        "scopeName": "source.leobody.plain",
        "path": "./syntaxes/leobody.plain.tmLanguage.json"
      },
      {
        "language": "leobody.python",
        "scopeName": "source.leobody.python",
        "path": "./syntaxes/leobody.python.tmLanguage.json"
      },
      {
        "language": "leobody.python.wrap",
        "scopeName": "source.leobody.python",
        "path": "./syntaxes/leobody.python.tmLanguage.json"
      },
      {
        "language": "leobody.typescript",
        "scopeName": "source.leobody.typescript",
        "path": "./syntaxes/leobody.typescript.tmLanguage.json"
      },
      {
        "language": "leobody.typescript.wrap",
        "scopeName": "source.leobody.typescript",
        "path": "./syntaxes/leobody.typescript.tmLanguage.json"
      },
      {
        "language": "leobody.javascript",
        "scopeName": "source.leobody.javascript",
        "path": "./syntaxes/leobody.javascript.tmLanguage.json"
      },
      {
        "language": "leobody.javascript.wrap",
        "scopeName": "source.leobody.javascript",
        "path": "./syntaxes/leobody.javascript.tmLanguage.json"
      },
      {
        "language": "leobody.c",
        "scopeName": "source.leobody.c",
        "path": "./syntaxes/leobody.c.tmLanguage.json"
      },
      {
        "language": "leobody.c.wrap",
        "scopeName": "source.leobody.c",
        "path": "./syntaxes/leobody.c.tmLanguage.json"
      },
      {
        "language": "leobody.cpp",
        "scopeName": "source.leobody.cpp",
        "path": "./syntaxes/leobody.cpp.tmLanguage.json"
      },
      {
        "language": "leobody.cpp.wrap",
        "scopeName": "source.leobody.cpp",
        "path": "./syntaxes/leobody.cpp.tmLanguage.json"
      },
      {
        "language": "leobody.css",
        "scopeName": "source.leobody.css",
        "path": "./syntaxes/leobody.css.tmLanguage.json"
      },
      {
        "language": "leobody.css.wrap",
        "scopeName": "source.leobody.css",
        "path": "./syntaxes/leobody.css.tmLanguage.json"
      },
      {
        "language": "leobody.fortran",
        "scopeName": "source.leobody.fortran",
        "path": "./syntaxes/leobody.fortran.tmLanguage.json"
      },
      {
        "language": "leobody.fortran.wrap",
        "scopeName": "source.leobody.fortran",
        "path": "./syntaxes/leobody.fortran.tmLanguage.json"
      },
      {
        "language": "leobody.fortran90",
        "scopeName": "source.leobody.fortran90",
        "path": "./syntaxes/leobody.fortran90.tmLanguage.json"
      },
      {
        "language": "leobody.fortran90.wrap",
        "scopeName": "source.leobody.fortran90",
        "path": "./syntaxes/leobody.fortran90.tmLanguage.json"
      },
      {
        "language": "leobody.html",
        "scopeName": "source.leobody.html",
        "path": "./syntaxes/leobody.html.tmLanguage.json"
      },
      {
        "language": "leobody.html.wrap",
        "scopeName": "source.leobody.html",
        "path": "./syntaxes/leobody.html.tmLanguage.json"
      },
      {
        "language": "leobody.java",
        "scopeName": "source.leobody.java",
        "path": "./syntaxes/leobody.java.tmLanguage.json"
      },
      {
        "language": "leobody.java.wrap",
        "scopeName": "source.leobody.java",
        "path": "./syntaxes/leobody.java.tmLanguage.json"
      },
      {
        "language": "leobody.json",
        "scopeName": "source.leobody.json",
        "path": "./syntaxes/leobody.json.tmLanguage.json"
      },
      {
        "language": "leobody.json.wrap",
        "scopeName": "source.leobody.json",
        "path": "./syntaxes/leobody.json.tmLanguage.json"
      },
      {
        "language": "leobody.markdown",
        "scopeName": "source.leobody.markdown",
        "path": "./syntaxes/leobody.markdown.tmLanguage.json"
      },
      {
        "language": "leobody.markdown.wrap",
        "scopeName": "source.leobody.markdown",
        "path": "./syntaxes/leobody.markdown.tmLanguage.json"
      },
      {
        "language": "leobody.php",
        "scopeName": "source.leobody.php",
        "path": "./syntaxes/leobody.php.tmLanguage.json"
      },
      {
        "language": "leobody.php.wrap",
        "scopeName": "source.leobody.php",
        "path": "./syntaxes/leobody.php.tmLanguage.json"
      },
      {
        "language": "leobody.restructuredtext",
        "scopeName": "source.leobody.restructuredtext",
        "path": "./syntaxes/leobody.rst.tmLanguage.json"
      },
      {
        "language": "leobody.restructuredtext.wrap",
        "scopeName": "source.leobody.restructuredtext",
        "path": "./syntaxes/leobody.rst.tmLanguage.json"
      },
      {
        "language": "leobody.rust",
        "scopeName": "source.leobody.rust",
        "path": "./syntaxes/leobody.rust.tmLanguage.json"
      },
      {
        "language": "leobody.rust.wrap",
        "scopeName": "source.leobody.rust",
        "path": "./syntaxes/leobody.rust.tmLanguage.json"
      },
      {
        "language": "leobody.xml",
        "scopeName": "source.leobody.xml",
        "path": "./syntaxes/leobody.xml.tmLanguage.json"
      },
      {
        "language": "leobody.xml.wrap",
        "scopeName": "source.leobody.xml",
        "path": "./syntaxes/leobody.xml.tmLanguage.json"
      },
      {
        "injectTo": [
          "source.leobody.c",
          "source.leobody.cpp",
          "source.leobody.css",
          "source.leobody.fortran",
          "source.leobody.fortran90",
          "source.leobody.html",
          "source.leobody.java",
          "source.leobody.javascript",
          "source.leobody.json",
          "source.leobody.markdown",
          "source.leobody.php",
          "source.leobody.plain",
          "source.leobody.python",
          "source.leobody.restructuredtext",
          "source.leobody.rust",
          "source.leobody.typescript",
          "source.leobody.xml",
          "source.leobody.c.wrap",
          "source.leobody.cpp.wrap",
          "source.leobody.css.wrap",
          "source.leobody.fortran.wrap",
          "source.leobody.fortran90.wrap",
          "source.leobody.html.wrap",
          "source.leobody.java.wrap",
          "source.leobody.javascript.wrap",
          "source.leobody.json.wrap",
          "source.leobody.markdown.wrap",
          "source.leobody.php.wrap",
          "source.leobody.plain.wrap",
          "source.leobody.python.wrap",
          "source.leobody.restructuredtext.wrap",
          "source.leobody.rust.wrap",
          "source.leobody.typescript.wrap",
          "source.leobody.xml.wrap"
        ],
        "path": "./syntaxes/leobody.tmLanguage.json",
        "scopeName": "leo.injection"
      }
    ],
    "snippets": [
      {
        "language": "leobody.c",
        "path": "./snippets/c.code-snippets"
      },
      {
        "language": "leobody.c.wrap",
        "path": "./snippets/c.code-snippets"
      },
      {
        "language": "leobody.cpp",
        "path": "./snippets/cpp.code-snippets"
      },
      {
        "language": "leobody.cpp.wrap",
        "path": "./snippets/cpp.code-snippets"
      },
      {
        "language": "leobody.fortran90",
        "path": "./snippets/fortran90.code-snippets"
      },
      {
        "language": "leobody.fortran90.wrap",
        "path": "./snippets/fortran90.code-snippets"
      },
      {
        "language": "leobody.javascript",
        "path": "./snippets/javascript.code-snippets"
      },
      {
        "language": "leobody.javascript.wrap",
        "path": "./snippets/javascript.code-snippets"
      },
      {
        "language": "leobody.typescript",
        "path": "./snippets/typescript.code-snippets"
      },
      {
        "language": "leobody.typescript.wrap",
        "path": "./snippets/typescript.code-snippets"
      },
      {
        "language": "leobody.java",
        "path": "./snippets/java.code-snippets"
      },
      {
        "language": "leobody.java.wrap",
        "path": "./snippets/java.code-snippets"
      },
      {
        "language": "leobody.php",
        "path": "./snippets/php.code-snippets"
      },
      {
        "language": "leobody.php.wrap",
        "path": "./snippets/php.code-snippets"
      },
      {
        "language": "leobody.markdown",
        "path": "./snippets/markdown.code-snippets"
      },
      {
        "language": "leobody.markdown.wrap",
        "path": "./snippets/markdown.code-snippets"
      },
      {
        "language": "leobody.restructuredtext",
        "path": "./snippets/restructuredtext.code-snippets"
      },
      {
        "language": "leobody.restructuredtext.wrap",
        "path": "./snippets/restructuredtext.code-snippets"
      },
      {
        "language": "leobody.rust",
        "path": "./snippets/rust.code-snippets"
      },
      {
        "language": "leobody.rust.wrap",
        "path": "./snippets/rust.code-snippets"
      }
    ],
    "viewsWelcome": [
      {
        "view": "leoIntegration",
        "contents": "Not Connected\n[Start Server](command:leointeg.startServer)\n[Connect to Server](command:leointeg.connectToServer)\nServer startup and connection can be automated in LeoInteg's [configuration settings](command:leointeg.showSettingsPage)",
        "when": "!leoBridgeReady && !leoServerStarted && leoStartupFinished && !leoConnecting && !leoStartingServer || !leoBridgeReady && !leoServerStarted && !config.leoIntegration.startServerAutomatically && !config.leoIntegration.connectToServerAutomatically && !leoConnecting && !leoStartingServer"
      },
      {
        "view": "leoIntegrationExplorer",
        "contents": "Not Connected\n[Start Server](command:leointeg.startServer)\n[Connect to Server](command:leointeg.connectToServer)\nServer startup and connection can be automated in LeoInteg's [configuration settings](command:leointeg.showSettingsPage)",
        "when": "!leoBridgeReady && !leoServerStarted && leoStartupFinished && !leoConnecting && !leoStartingServer || !leoBridgeReady && !leoServerStarted && !config.leoIntegration.startServerAutomatically && !config.leoIntegration.connectToServerAutomatically && !leoConnecting && !leoStartingServer"
      },
      {
        "view": "leoIntegration",
        "contents": "Starting Server...",
        "when": "leoStartingServer || !leoBridgeReady && config.leoIntegration.startServerAutomatically && !leoStartingServer && !leoConnecting && !leoStartupFinished"
      },
      {
        "view": "leoIntegrationExplorer",
        "contents": "Starting Server...",
        "when": "leoStartingServer || !leoBridgeReady && config.leoIntegration.startServerAutomatically && !leoStartingServer && !leoConnecting && !leoStartupFinished"
      },
      {
        "view": "leoIntegration",
        "contents": "Opening file...",
        "when": "leoBridgeReady && !leoTreeOpened && leoStartupFinished && leoOpeningFile"
      },
      {
        "view": "leoIntegrationExplorer",
        "contents": "Opening file...",
        "when": "leoBridgeReady && !leoTreeOpened && leoStartupFinished && leoOpeningFile"
      },
      {
        "view": "leoIntegration",
        "contents": "Not Connected\n[Connect to Server](command:leointeg.connectToServer)\nServer startup and connection can be automated in LeoInteg's [configuration settings](command:leointeg.showSettingsPage)",
        "when": "!leoBridgeReady && leoServerStarted && !config.leoIntegration.connectToServerAutomatically && !leoConnecting && !leoStartingServer && !leoStartupFinished || leoStartupFinished && !leoBridgeReady && leoServerStarted && !leoConnecting && !leoStartingServer"
      },
      {
        "view": "leoIntegrationExplorer",
        "contents": "Not Connected\n[Connect to Server](command:leointeg.connectToServer)\nServer startup and connection can be automated in LeoInteg's [configuration settings](command:leointeg.showSettingsPage)",
        "when": "!leoBridgeReady && leoServerStarted && !config.leoIntegration.connectToServerAutomatically && !leoConnecting && !leoStartingServer && !leoStartupFinished || leoStartupFinished && !leoBridgeReady && leoServerStarted && !leoConnecting && !leoStartingServer"
      },
      {
        "view": "leoIntegration",
        "contents": "Connecting...",
        "when": "leoConnecting || !leoBridgeReady && !config.leoIntegration.startServerAutomatically && config.leoIntegration.connectToServerAutomatically && !leoStartingServer && !leoConnecting && !leoStartupFinished"
      },
      {
        "view": "leoIntegrationExplorer",
        "contents": "Connecting...",
        "when": "leoConnecting || !leoBridgeReady && !config.leoIntegration.startServerAutomatically && config.leoIntegration.connectToServerAutomatically && !leoStartingServer && !leoConnecting && !leoStartupFinished"
      },
      {
        "view": "leoIntegration",
        "contents": "Connected\n[Open Leo File](command:leointeg.openLeoFile)\n[Create Leo File](command:leointeg.newLeoFile)\n[Recent Leo Files](command:leointeg.recentLeoFiles)\nView LeoInteg's [configuration settings](command:leointeg.showSettingsPage)",
        "when": "leoBridgeReady && !leoTreeOpened && !leoStartingServer && !leoConnecting && leoStartupFinished && !leoOpeningFile"
      },
      {
        "view": "leoIntegrationExplorer",
        "contents": "Connected\n[Open Leo File](command:leointeg.openLeoFile)\n[Create Leo File](command:leointeg.newLeoFile)\n[Recent Leo Files](command:leointeg.recentLeoFiles)\nView LeoInteg's [configuration settings](command:leointeg.showSettingsPage)",
        "when": "leoBridgeReady && !leoTreeOpened && !leoStartingServer && !leoConnecting && leoStartupFinished && !leoOpeningFile"
      },
      {
        "view": "leoDocuments",
        "contents": "Not connected",
        "when": "!leoBridgeReady"
      },
      {
        "view": "leoDocumentsExplorer",
        "contents": "Not connected",
        "when": "!leoBridgeReady"
      },
      {
        "view": "leoDocuments",
        "contents": "There are no Leo files currently opened",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoDocumentsExplorer",
        "contents": "There are no Leo files currently opened",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoButtons",
        "contents": "Not connected",
        "when": "!leoBridgeReady"
      },
      {
        "view": "leoButtonsExplorer",
        "contents": "Not connected",
        "when": "!leoBridgeReady"
      },
      {
        "view": "leoButtons",
        "contents": "There are no Leo files currently opened",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoButtonsExplorer",
        "contents": "There are no Leo files currently opened",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoButtons",
        "contents": "There are no @buttons in this outline",
        "when": "leoBridgeReady && leoTreeOpened"
      },
      {
        "view": "leoButtonsExplorer",
        "contents": "There are no @buttons in this outline",
        "when": "leoBridgeReady && leoTreeOpened"
      },
      {
        "view": "leoGotoPanel",
        "contents": "Not connected",
        "when": "!leoTreeOpened"
      },
      {
        "view": "leoGotoPanelExplorer",
        "contents": "Not connected",
        "when": "!leoTreeOpened"
      },
      {
        "view": "leoGotoPanel",
        "contents": "No Results",
        "when": "leoTreeOpened"
      },
      {
        "view": "leoGotoPanelExplorer",
        "contents": "No Results",
        "when": "leoTreeOpened"
      },
      {
        "view": "leoFindPanel",
        "contents": "Not connected",
        "when": "!leoTreeOpened"
      },
      {
        "view": "leoFindPanelExplorer",
        "contents": "Not connected",
        "when": "!leoTreeOpened"
      },
      {
        "view": "leoUndos",
        "contents": "There are no Leo files currently opened",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoUndosExplorer",
        "contents": "There are no Leo files currently opened",
        "when": "leoBridgeReady && !leoTreeOpened"
      },
      {
        "view": "leoUndos",
        "contents": "Can't undo",
        "when": "leoBridgeReady && leoTreeOpened"
      },
      {
        "view": "leoUndosExplorer",
        "contents": "Can't undo",
        "when": "leoBridgeReady && leoTreeOpened"
      }
    ],
    "icons": {
      "leo-arrow-down": {
        "description": "Arrow Down",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f101"
        }
      },
      "leo-arrow-left": {
        "description": "Arrow Left",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f102"
        }
      },
      "leo-arrow-right": {
        "description": "Arrow Right",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f103"
        }
      },
      "leo-arrow-small-down": {
        "description": "Small Arrow Down",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f104"
        }
      },
      "leo-arrow-small-left": {
        "description": "Small Arrow Left",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f105"
        }
      },
      "leo-arrow-small-right": {
        "description": "Small Arrow Right",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f106"
        }
      },
      "leo-arrow-small-up": {
        "description": "Small Arrow Up",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f107"
        }
      },
      "leo-arrow-up": {
        "description": "Arrow Up",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f108"
        }
      },
      "leo-chapter-back": {
        "description": "Chapter Back",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f109"
        }
      },
      "leo-chapter-main": {
        "description": "Chapter Main",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f10a"
        }
      },
      "leo-chapter-next": {
        "description": "Chapter Next",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f10b"
        }
      },
      "leo-chapter-select": {
        "description": "Chapter Select",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f10c"
        }
      },
      "leo-clear-files": {
        "description": "Clear Files",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f10d"
        }
      },
      "leo-clipboard": {
        "description": "Clipboard",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f10e"
        }
      },
      "leo-close": {
        "description": "Close",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f10f"
        }
      },
      "leo-close-server": {
        "description": "Close Server",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f110"
        }
      },
      "leo-collapse": {
        "description": "Collapse",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f111"
        }
      },
      "leo-connect": {
        "description": "Connect",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f112"
        }
      },
      "leo-cut": {
        "description": "Cut",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f113"
        }
      },
      "leo-dehoist": {
        "description": "Dehoist",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f114"
        }
      },
      "leo-delete": {
        "description": "Delete",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f115"
        }
      },
      "leo-demote": {
        "description": "Demote",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f116"
        }
      },
      "leo-edit": {
        "description": "Edit",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f117"
        }
      },
      "leo-extract": {
        "description": "Extract",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f118"
        }
      },
      "leo-extract-name": {
        "description": "Extract Name",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f119"
        }
      },
      "leo-find-next": {
        "description": "Find Next",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f11a"
        }
      },
      "leo-find-previous": {
        "description": "Find Previous",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f11b"
        }
      },
      "leo-find-quick": {
        "description": "Find Quick",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f11c"
        }
      },
      "leo-find-quick-changed": {
        "description": "Find Quick Changed",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f11d"
        }
      },
      "leo-find-quick-history": {
        "description": "Find Quick History",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f11e"
        }
      },
      "leo-find-quick-marked": {
        "description": "Find Quick Marked",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f11f"
        }
      },
      "leo-find-quick-selected": {
        "description": "Find Quick Selected",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f120"
        }
      },
      "leo-find-quick-timeline": {
        "description": "Find Quick Timeline",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f121"
        }
      },
      "leo-folder": {
        "description": "Folder",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f122"
        }
      },
      "leo-gear": {
        "description": "Gear",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f123"
        }
      },
      "leo-hoist": {
        "description": "Hoist",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f124"
        }
      },
      "leo-icon-leo-fill": {
        "description": "Leo icon filled",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f125"
        }
      },
      "leo-icon-leo-outline": {
        "description": "Leo icon outlined",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f126"
        }
      },
      "leo-import": {
        "description": "Import",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f127"
        }
      },
      "leo-insert": {
        "description": "Insert",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f128"
        }
      },
      "leo-insert-child": {
        "description": "Insert Child",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f129"
        }
      },
      "leo-link": {
        "description": "Link",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f12a"
        }
      },
      "leo-mark": {
        "description": "Mark",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f12b"
        }
      },
      "leo-new-file": {
        "description": "New File",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f12c"
        }
      },
      "leo-next": {
        "description": "Next",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f12d"
        }
      },
      "leo-node": {
        "description": "Node",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f12e"
        }
      },
      "leo-open-recent": {
        "description": "Open Recent",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f12f"
        }
      },
      "leo-parent": {
        "description": "Parent",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f130"
        }
      },
      "leo-paste": {
        "description": "Paste",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f131"
        }
      },
      "leo-paste-clone": {
        "description": "Paste Clone",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f132"
        }
      },
      "leo-plus": {
        "description": "Plus",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f133"
        }
      },
      "leo-plus-small": {
        "description": "Small Plus",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f134"
        }
      },
      "leo-prev": {
        "description": "Prev",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f135"
        }
      },
      "leo-promote": {
        "description": "Promote",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f136"
        }
      },
      "leo-redo": {
        "description": "Redo",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f137"
        }
      },
      "leo-refresh": {
        "description": "Refresh",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f138"
        }
      },
      "leo-save": {
        "description": "Save",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f139"
        }
      },
      "leo-save-as": {
        "description": "Save As",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f13a"
        }
      },
      "leo-save-as-leo": {
        "description": "Save As .leo",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f13b"
        }
      },
      "leo-show-log": {
        "description": "Show Log",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f13c"
        }
      },
      "leo-sort-children": {
        "description": "Sort Children",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f13d"
        }
      },
      "leo-sort-siblings": {
        "description": "Sort Siblings",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f13e"
        }
      },
      "leo-start-server": {
        "description": "Start Server",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f13f"
        }
      },
      "leo-switch": {
        "description": "Switch",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f140"
        }
      },
      "leo-tag": {
        "description": "Tag",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f141"
        }
      },
      "leo-undo": {
        "description": "Undo",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f142"
        }
      },
      "leo-unmark": {
        "description": "Unmark",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f143"
        }
      },
      "leo-write-at-file-nodes": {
        "description": "Write at-file Nodes",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f144"
        }
      },
      "leo-write-dirty-at-file-nodes": {
        "description": "Write Dirty at-file Nodes",
        "default": {
          "fontPath": "resources/leoicons.woff2",
          "fontCharacter": "\\f145"
        }
      }
    },
    "commands": [
      {
        "command": "leointeg.showSettingsPage",
        "title": "Open Leo Settings",
        "category": "Leo",
        "icon": "$(leo-gear)"
      },
      {
        "command": "leointeg.showWelcomePage",
        "title": "Welcome",
        "category": "Leo"
      },
      {
        "command": "leointeg.chooseLeoFolder",
        "title": "Choose Leo Installation Folder",
        "shortTitle": "Set Leo Folder",
        "category": "Leo"
      },
      {
        "command": "leointeg.startServer",
        "category": "Leo",
        "title": "Start a Leo Server",
        "enablement": "!leoBridgeReady && !leoTreeOpened && !leoServerStarted && !leoStartingServer",
        "icon": "$(leo-start-server)"
      },
      {
        "command": "leointeg.stopServer",
        "category": "Leo",
        "title": "Stop the Leo Server",
        "enablement": "leoStartingServer || leoServerStarted && !leoTreeOpened",
        "icon": "$(leo-close-server)"
      },
      {
        "command": "leointeg.connectToServer",
        "category": "Leo",
        "title": "Connect to a Leo Server",
        "enablement": "!leoBridgeReady && !leoTreeOpened",
        "icon": "$(plug)"
      },
      {
        "command": "leointeg.setLeoID",
        "title": "Set LeoID",
        "enablement": "leoBridgeReady && leoIDMissing",
        "category": "Leo"
      },
      {
        "command": "leointeg.executeScript",
        "title": "Execute Script",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "icon": "$(play)"
      },
      {
        "command": "leointeg.minibuffer",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Minibuffer"
      },
      {
        "command": "leointeg.gotoScript",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Goto Script"
      },
      {
        "command": "leointeg.clickButton",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Click Button",
        "icon": "$(play)"
      },
      {
        "command": "leointeg.removeButton",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Remove Button"
      },
      {
        "command": "leointeg.showBody",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Focus on Body"
      },
      {
        "command": "leointeg.showOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Focus on Tree"
      },
      {
        "command": "leointeg.showLogPane",
        "category": "Leo",
        "title": "Show Log Pane",
        "enablement": "leoBridgeReady",
        "icon": "$(leo-show-log)"
      },
      {
        "command": "leointeg.openLeoFile",
        "title": "Open with LeoInteg",
        "category": "Leo",
        "enablement": "leoBridgeReady",
        "icon": "$(leo-folder)"
      },
      {
        "command": "leointeg.clearRecentFiles",
        "category": "Leo",
        "title": "Clear Recent Files",
        "icon": "$(leo-clear-files)"
      },
      {
        "command": "leointeg.recentLeoFiles",
        "enablement": "leoBridgeReady",
        "category": "Leo",
        "title": "Recent Files",
        "icon": "$(leo-open-recent)"
      },
      {
        "command": "leointeg.switchLeoFile",
        "title": "Switch Leo File",
        "enablement": "leoTreeOpened",
        "category": "Leo",
        "icon": "$(leo-switch)"
      },
      {
        "command": "leointeg.newLeoFile",
        "title": "New Leo File",
        "enablement": "leoBridgeReady",
        "category": "Leo",
        "icon": "$(leo-new-file)"
      },
      {
        "command": "leointeg.closeLeoFile",
        "title": "Close Leo File",
        "enablement": "leoTreeOpened",
        "category": "Leo",
        "icon": "$(leo-close)"
      },
      {
        "command": "leointeg.revert",
        "title": "Revert to Saved",
        "enablement": "leoTreeOpened && leoTreeTitled",
        "category": "Leo"
      },
      {
        "command": "leointeg.saveLeoFile",
        "category": "Leo",
        "title": "Save Leo File",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-save)"
      },
      {
        "command": "leointeg.saveLeoFileFromOutline",
        "category": "Leo",
        "title": "Save Leo File",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-save)"
      },
      {
        "command": "leointeg.saveAsLeoFile",
        "category": "Leo",
        "title": "Save Leo File as...",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-save-as)"
      },
      {
        "command": "leointeg.saveAsLeoJsFile",
        "category": "Leo",
        "title": "Save a Copy as leojs File...",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-save-as-leojs)"
      },
      {
        "command": "leointeg.refreshFromDisk",
        "category": "Leo",
        "title": "Refresh from Disk",
        "enablement": "leoTreeOpened && leoTreeTitled",
        "icon": "$(leo-refresh)"
      },
      {
        "command": "leointeg.refreshFromDiskSelection",
        "category": "Leo",
        "title": "Refresh from Disk",
        "enablement": "leoTreeOpened && leoAtFile && leoTreeTitled",
        "icon": "$(leo-refresh)"
      },
      {
        "command": "leointeg.writeAtFileNodes",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Write @<file> Nodes",
        "icon": "$(leo-write-at-file-nodes)"
      },
      {
        "command": "leointeg.writeAtFileNodesFromOutline",
        "category": "Leo",
        "title": "Write @<file> Nodes",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-write-at-file-nodes)"
      },
      {
        "command": "leointeg.writeDirtyAtFileNodes",
        "category": "Leo",
        "title": "Write Dirty @<file> Nodes",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-write-dirty-at-file-nodes)"
      },
      {
        "command": "leointeg.writeDirtyAtFileNodesFromOutline",
        "category": "Leo",
        "title": "Write Dirty @<file> Nodes",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-write-dirty-at-file-nodes)"
      },
      {
        "command": "leointeg.gitDiff",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Git Diff"
      },
      {
        "command": "leointeg.tabCycleNext",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Tab Cycle Next"
      },
      {
        "command": "leointeg.importAnyFile",
        "title": "Import File",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-import)"
      },
      {
        "command": "leointeg.readFileIntoNode",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Read File Into Node..."
      },
      {
        "command": "leointeg.exportHeadlines",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Export Outline..."
      },
      {
        "command": "leointeg.flattenOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Flatten Selected Outline..."
      },
      {
        "command": "leointeg.outlineToCweb",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Outline to CWEB..."
      },
      {
        "command": "leointeg.outlineToNoweb",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Outline to Noweb..."
      },
      {
        "command": "leointeg.removeSentinels",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Remove Sentinels..."
      },
      {
        "command": "leointeg.weave",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Weave..."
      },
      {
        "command": "leointeg.writeFileFromNode",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Write File From Node..."
      },
      {
        "command": "leointeg.openAside",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Open to the Side"
      },
      {
        "command": "leointeg.contractAll",
        "category": "Leo",
        "title": "Contract All",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-collapse)"
      },
      {
        "command": "leointeg.contractAllFromOutline",
        "category": "Leo",
        "title": "Contract All",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-collapse)"
      },
      {
        "command": "leointeg.prev",
        "category": "Leo",
        "title": "Prev",
        "enablement": "leoCanGoBack",
        "icon": "$(leo-prev)"
      },
      {
        "command": "leointeg.prevFromOutline",
        "category": "Leo",
        "title": "Prev",
        "enablement": "leoCanGoBack",
        "icon": "$(leo-prev)"
      },
      {
        "command": "leointeg.next",
        "category": "Leo",
        "title": "Next",
        "enablement": "leoCanGoNext",
        "icon": "$(leo-next)"
      },
      {
        "command": "leointeg.nextFromOutline",
        "category": "Leo",
        "title": "Next",
        "enablement": "leoCanGoNext",
        "icon": "$(leo-next)"
      },
      {
        "command": "leointeg.editHeadline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Edit Headline",
        "icon": "$(leo-edit)"
      },
      {
        "command": "leointeg.editSelectedHeadline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Edit Headline",
        "icon": "$(leo-edit)"
      },
      {
        "command": "leointeg.editSelectedHeadlineFromOutline",
        "enablement": "leoTreeOpened",
        "category": "Leo",
        "title": "Edit Headline",
        "icon": "$(leo-edit)"
      },
      {
        "command": "leointeg.copyNode",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Copy Node",
        "icon": "$(leo-clipboard)"
      },
      {
        "command": "leointeg.copyNodeAsJson",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Copy Node As JSON",
        "icon": "$(leo-clipboard)"
      },
      {
        "command": "leointeg.copyNodeSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Copy Node",
        "icon": "$(leo-clipboard)"
      },
      {
        "command": "leointeg.cutNode",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Cut Node",
        "icon": "$(leo-cut)"
      },
      {
        "command": "leointeg.cutNodeSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Cut Node",
        "icon": "$(leo-cut)"
      },
      {
        "command": "leointeg.cutNodeSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Cut Node",
        "icon": "$(leo-cut)"
      },
      {
        "command": "leointeg.pasteNode",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Paste Node",
        "icon": "$(leo-paste)"
      },
      {
        "command": "leointeg.pasteNodeAtSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Paste Node",
        "icon": "$(leo-paste)"
      },
      {
        "command": "leointeg.pasteNodeAtSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Paste Node",
        "icon": "$(leo-paste)"
      },
      {
        "command": "leointeg.pasteNodeAsClone",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Paste Node as Clone"
      },
      {
        "command": "leointeg.pasteNodeAsCloneAtSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Paste Node as Clone",
        "icon": "$(leo-paste-clone)"
      },
      {
        "command": "leointeg.pasteNodeAsCloneAtSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Paste Node as Clone",
        "icon": "$(leo-paste-clone)"
      },
      {
        "command": "leointeg.pasteAsTemplate",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Paste Node as template"
      },
      {
        "command": "leointeg.delete",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Delete",
        "icon": "$(leo-close)"
      },
      {
        "command": "leointeg.deleteSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Delete Node",
        "icon": "$(leo-delete)"
      },
      {
        "command": "leointeg.deleteSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Delete Node",
        "icon": "$(leo-delete)"
      },
      {
        "command": "leointeg.setUa",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Set uA"
      },
      {
        "command": "leointeg.extract",
        "category": "Leo",
        "title": "Extract",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-extract)"
      },
      {
        "command": "leointeg.extractNames",
        "category": "Leo",
        "title": "Extract Names",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-extract-name)"
      },
      {
        "command": "leointeg.moveOutlineDown",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Outline Down",
        "icon": "$(leo-arrow-down)"
      },
      {
        "command": "leointeg.moveOutlineDownSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Outline Down",
        "icon": "$(leo-arrow-down)"
      },
      {
        "command": "leointeg.moveOutlineDownSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Outline Down",
        "icon": "$(leo-arrow-down)"
      },
      {
        "command": "leointeg.moveOutlineLeft",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Outline Left",
        "icon": "$(leo-arrow-left)"
      },
      {
        "command": "leointeg.moveOutlineLeftSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Outline Left",
        "icon": "$(leo-arrow-left)"
      },
      {
        "command": "leointeg.moveOutlineLeftSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Outline Left",
        "icon": "$(leo-arrow-left)"
      },
      {
        "command": "leointeg.moveOutlineRight",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Outline Right",
        "icon": "$(leo-arrow-right)"
      },
      {
        "command": "leointeg.moveOutlineRightSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Outline Right",
        "icon": "$(leo-arrow-right)"
      },
      {
        "command": "leointeg.moveOutlineRightSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Outline Right",
        "icon": "$(leo-arrow-right)"
      },
      {
        "command": "leointeg.moveOutlineUp",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Outline Up",
        "icon": "$(leo-arrow-up)"
      },
      {
        "command": "leointeg.moveOutlineUpSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Outline Up",
        "icon": "$(leo-arrow-up)"
      },
      {
        "command": "leointeg.moveOutlineUpSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Outline Up",
        "icon": "$(leo-arrow-up)"
      },
      {
        "command": "leointeg.insertNode",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Insert Node",
        "icon": "$(leo-plus)"
      },
      {
        "command": "leointeg.insertChildNode",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Insert Child",
        "icon": "$(leo-insert-child)"
      },
      {
        "command": "leointeg.insertNodeSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Insert Node",
        "icon": "$(leo-plus)"
      },
      {
        "command": "leointeg.insertChildNodeSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Insert Child",
        "icon": "$(leo-insert-child)"
      },
      {
        "command": "leointeg.insertNodeSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Insert Node",
        "icon": "$(leo-plus)"
      },
      {
        "command": "leointeg.insertChildNodeSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Insert Child",
        "icon": "$(leo-insert-child)"
      },
      {
        "command": "leointeg.cloneNode",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Clone Node",
        "icon": "$(leo-link)"
      },
      {
        "command": "leointeg.cloneNodeSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Clone Node",
        "icon": "$(leo-link)"
      },
      {
        "command": "leointeg.cloneNodeSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Clone Node",
        "icon": "$(leo-link)"
      },
      {
        "command": "leointeg.promote",
        "category": "Leo",
        "title": "Promote Children",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-promote)"
      },
      {
        "command": "leointeg.promoteSelection",
        "category": "Leo",
        "title": "Promote Children",
        "enablement": "leoCanPromote",
        "icon": "$(leo-promote)"
      },
      {
        "command": "leointeg.promoteSelectionFromOutline",
        "category": "Leo",
        "title": "Promote Children",
        "enablement": "leoCanPromote",
        "icon": "$(leo-promote)"
      },
      {
        "command": "leointeg.demote",
        "category": "Leo",
        "title": "Demote Siblings",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-demote)"
      },
      {
        "command": "leointeg.demoteSelection",
        "category": "Leo",
        "title": "Demote Siblings",
        "enablement": "leoCanDemote",
        "icon": "$(leo-demote)"
      },
      {
        "command": "leointeg.demoteSelectionFromOutline",
        "category": "Leo",
        "title": "Demote Siblings",
        "enablement": "leoCanDemote",
        "icon": "$(leo-demote)"
      },
      {
        "command": "leointeg.sortChildrenSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened && leoChild",
        "title": "Sort Children",
        "icon": "$(leo-sort-children)"
      },
      {
        "command": "leointeg.sortChildrenSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened && leoChild",
        "title": "Sort Children",
        "icon": "$(leo-sort-children)"
      },
      {
        "command": "leointeg.sortSiblingsSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Sort Siblings",
        "icon": "$(leo-sort-siblings)"
      },
      {
        "command": "leointeg.sortSiblingsSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Sort Siblings",
        "icon": "$(leo-sort-siblings)"
      },
      {
        "command": "leointeg.gotoFirstVisible",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Goto First Visible"
      },
      {
        "command": "leointeg.gotoLastVisible",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Goto Last Visible"
      },
      {
        "command": "leointeg.pageUp",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Page Up"
      },
      {
        "command": "leointeg.pageDown",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Page Down"
      },
      {
        "command": "leointeg.scrollTop",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Scroll to Outline Top"
      },
      {
        "command": "leointeg.scrollBottom",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Scroll to Outline Bottom"
      },
      {
        "command": "leointeg.gotoFirstSibling",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Goto First Sibling"
      },
      {
        "command": "leointeg.gotoLastSibling",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Goto Last Sibling"
      },
      {
        "command": "leointeg.gotoNextVisible",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Goto Next Visible"
      },
      {
        "command": "leointeg.gotoPrevVisible",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Goto Prev Visible"
      },
      {
        "command": "leointeg.contractOrGoLeft",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Contract Or Go Left"
      },
      {
        "command": "leointeg.expandAndGoRight",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Expand And Go Right"
      },
      {
        "command": "leointeg.gotoNextMarked",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Goto Next Marked"
      },
      {
        "command": "leointeg.gotoNextClone",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Goto Next Clone"
      },
      {
        "command": "leointeg.gotoNextCloneSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Goto Next Clone"
      },
      {
        "command": "leointeg.gotoNextCloneSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Goto Next Clone"
      },
      {
        "command": "leointeg.hoistNode",
        "category": "Leo",
        "title": "Hoist",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-hoist)"
      },
      {
        "command": "leointeg.hoistSelection",
        "category": "Leo",
        "title": "Hoist",
        "enablement": "leoCanHoist",
        "icon": "$(leo-hoist)"
      },
      {
        "command": "leointeg.hoistSelectionFromOutline",
        "category": "Leo",
        "title": "Hoist",
        "enablement": "leoCanHoist",
        "icon": "$(leo-hoist)"
      },
      {
        "command": "leointeg.deHoist",
        "category": "Leo",
        "title": "De-Hoist",
        "enablement": "leoCanDehoist",
        "icon": "$(leo-dehoist)"
      },
      {
        "command": "leointeg.deHoistFromOutline",
        "category": "Leo",
        "title": "De-Hoist",
        "enablement": "leoCanDehoist && !leoTopHoistChapter",
        "icon": "$(leo-dehoist)"
      },
      {
        "command": "leointeg.chapterNext",
        "category": "Leo",
        "title": "Chapter Next",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-chapter-next)"
      },
      {
        "command": "leointeg.chapterBack",
        "category": "Leo",
        "title": "Chapter Back",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-chapter-back)"
      },
      {
        "command": "leointeg.chapterMain",
        "category": "Leo",
        "title": "Chapter Main",
        "enablement": "leoInChapter && leoTopHoistChapter",
        "icon": "$(leo-chapter-main)"
      },
      {
        "command": "leointeg.chapterSelect",
        "category": "Leo",
        "title": "Chapter Select",
        "enablement": "leoTreeOpened",
        "icon": "$(leo-chapter-select)"
      },
      {
        "command": "leointeg.undo",
        "category": "Leo",
        "title": "Undo",
        "enablement": "leoCanUndo",
        "icon": "$(leo-undo)"
      },
      {
        "command": "leointeg.undoFromOutline",
        "category": "Leo",
        "title": "Undo",
        "enablement": "leoCanUndo",
        "icon": "$(leo-undo)"
      },
      {
        "command": "leointeg.redo",
        "category": "Leo",
        "title": "Redo",
        "enablement": "leoCanRedo",
        "icon": "$(leo-redo)"
      },
      {
        "command": "leointeg.redoFromOutline",
        "category": "Leo",
        "title": "Redo",
        "enablement": "leoCanRedo",
        "icon": "$(leo-redo)"
      },
      {
        "command": "leointeg.revertToUndo",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Revert to Undo State"
      },
      {
        "command": "leointeg.startSearch",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Start Search"
      },
      {
        "command": "leointeg.searchBackward",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Search Backward"
      },
      {
        "command": "leointeg.reSearch",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Regexp Search"
      },
      {
        "command": "leointeg.reSearchBackward",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Regexp Search Backward"
      },
      {
        "command": "leointeg.wordSearch",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Word Search"
      },
      {
        "command": "leointeg.wordSearchBackward",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Word Search Backward"
      },
      {
        "command": "leointeg.findAll",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Find All"
      },
      {
        "command": "leointeg.findNext",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Find Next"
      },
      {
        "command": "leointeg.findNextFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Find Next",
        "icon": "$(leo-find-next)"
      },
      {
        "command": "leointeg.findPrevious",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Find Previous"
      },
      {
        "command": "leointeg.findPreviousFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Find Previous",
        "icon": "$(leo-find-previous)"
      },
      {
        "command": "leointeg.findDef",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "Find Definition",
        "title": "Find the def or class under the cursor"
      },
      {
        "command": "leointeg.replace",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Replace"
      },
      {
        "command": "leointeg.replaceFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Replace"
      },
      {
        "command": "leointeg.replaceThenFind",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Replace Then Find"
      },
      {
        "command": "leointeg.replaceThenFindFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Replace Then Find"
      },
      {
        "command": "leointeg.replaceAll",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Replace All"
      },
      {
        "command": "leointeg.gotoGlobalLine",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Goto Global Line"
      },
      {
        "command": "leointeg.cloneFindAll",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "cfa",
        "title": "Clone Find All"
      },
      {
        "command": "leointeg.cloneFindAllFlattened",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "cff",
        "title": "Clone Find All Flattened"
      },
      {
        "command": "leointeg.cloneFindMarked",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "cfam",
        "title": "Clone Find All Marked Nodes"
      },
      {
        "command": "leointeg.cloneFindFlattenedMarked",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "cffm",
        "title": "Clone Find All Flattened Marked"
      },
      {
        "command": "leointeg.cloneFindParents",
        "category": "Leo",
        "enablement": "leoTreeOpened && leoCloned",
        "title": "Clone Find Parents"
      },
      {
        "command": "leointeg.cloneFindTag",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "cft",
        "title": "Clone Find Tag"
      },
      {
        "command": "leointeg.tagChildren",
        "category": "Leo",
        "enablement": "leoTreeOpened && leoChild",
        "title": "Tag Children"
      },
      {
        "command": "leointeg.tagNode",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Tag Node"
      },
      {
        "command": "leointeg.removeTag",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Remove Tag"
      },
      {
        "command": "leointeg.removeTags",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Remove All Tags"
      },
      {
        "command": "leointeg.setFindEverywhereOption",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "Find Everywhere",
        "title": "Set Find Everywhere Option"
      },
      {
        "command": "leointeg.setFindNodeOnlyOption",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "Find in Node",
        "title": "Set Find in Node Only Option"
      },
      {
        "command": "leointeg.setFindFileOnlyOption",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "Find in External Files",
        "title": "Set Find in External Files Only Option"
      },
      {
        "command": "leointeg.setFindSuboutlineOnlyOption",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "Find in SubOutline",
        "title": "Set Find in SubOutline Only Option"
      },
      {
        "command": "leointeg.toggleFindIgnoreCaseOption",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "Find Ignore Case",
        "title": "Toggle Find Ignore Case Option"
      },
      {
        "command": "leointeg.toggleFindMarkChangesOption",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "Find Mark Changes",
        "title": "Toggle Find Mark Changes Option"
      },
      {
        "command": "leointeg.toggleFindMarkFindsOption",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "Find Mark Finds",
        "title": "Toggle Find Mark Finds Option"
      },
      {
        "command": "leointeg.toggleFindRegexpOption",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "Find RegExp",
        "title": "Toggle Find RegExp Option"
      },
      {
        "command": "leointeg.toggleFindWordOption",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "Find Whole Word",
        "title": "Toggle Find Whole Word Option"
      },
      {
        "command": "leointeg.toggleFindSearchBodyOption",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "Find Search Body",
        "title": "Toggle Find Search Body Option"
      },
      {
        "command": "leointeg.toggleFindSearchHeadlineOption",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "shortTitle": "Find Search Headline",
        "title": "Toggle Find Search Headline Option"
      },
      {
        "command": "leointeg.findQuick",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Focus on Nav tab"
      },
      {
        "command": "leointeg.goAnywhere",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Go Anywhere"
      },
      {
        "command": "leointeg.gotoNavPrev",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Select Previous Goto Result"
      },
      {
        "command": "leointeg.gotoNavNext",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Select Next Goto Result"
      },
      {
        "command": "leointeg.gotoNavFirst",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Select First Goto Result"
      },
      {
        "command": "leointeg.gotoNavLast",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Select Last Goto Result"
      },
      {
        "command": "leointeg.findQuickSelected",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Nav search with current selection",
        "icon": "$(leo-find-quick-selected)"
      },
      {
        "command": "leointeg.findQuickTimeline",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "List nodes in reverse gnx order",
        "icon": "$(leo-find-quick-timeline)"
      },
      {
        "command": "leointeg.findQuickChanged",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "List all changed/dirty nodes",
        "icon": "$(leo-find-quick-changed)"
      },
      {
        "command": "leointeg.history",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "List visited nodes from history",
        "icon": "$(leo-find-quick-history)"
      },
      {
        "command": "leointeg.markedList",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "List all marked nodes",
        "icon": "$(leo-find-quick-marked)"
      },
      {
        "command": "leointeg.mark",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Mark",
        "icon": "$(leo-mark)"
      },
      {
        "command": "leointeg.markSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened && !leoMarked",
        "title": "Mark",
        "icon": "$(leo-mark)"
      },
      {
        "command": "leointeg.markSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened && !leoMarked",
        "title": "Mark",
        "icon": "$(leo-mark)"
      },
      {
        "command": "leointeg.unmark",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Unmark",
        "icon": "$(leo-unmark)"
      },
      {
        "command": "leointeg.unmarkSelection",
        "category": "Leo",
        "enablement": "leoTreeOpened && leoMarked",
        "title": "Unmark",
        "icon": "$(leo-unmark)"
      },
      {
        "command": "leointeg.unmarkSelectionFromOutline",
        "category": "Leo",
        "enablement": "leoTreeOpened && leoMarked",
        "title": "Unmark",
        "icon": "$(leo-unmark)"
      },
      {
        "command": "leointeg.unmarkAll",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Unmark All"
      },
      {
        "command": "leointeg.markSubheads",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Mark Subheads"
      },
      {
        "command": "leointeg.markChangedItems",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Mark Changed Items"
      },
      {
        "command": "leointeg.copyMarked",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Copy Marked"
      },
      {
        "command": "leointeg.cloneMarkedNodes",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Clone Marked Nodes"
      },
      {
        "command": "leointeg.diffMarkedNodes",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Diff Marked Nodes"
      },
      {
        "command": "leointeg.deleteMarkedNodes",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Delete Marked Nodes"
      },
      {
        "command": "leointeg.moveMarkedNodes",
        "category": "Leo",
        "enablement": "leoTreeOpened",
        "title": "Move Marked Nodes"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "leointeg.clickButton",
          "when": "false"
        },
        {
          "command": "leointeg.gotoScript",
          "when": "false"
        },
        {
          "command": "leointeg.removeButton",
          "when": "false"
        },
        {
          "command": "leointeg.saveLeoFileFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.refreshFromDisk",
          "when": "false"
        },
        {
          "command": "leointeg.writeAtFileNodesFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.writeDirtyAtFileNodesFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.openAside",
          "when": "false"
        },
        {
          "command": "leointeg.contractAllFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.prevFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.nextFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.editHeadline",
          "when": "false"
        },
        {
          "command": "leointeg.editSelectedHeadlineFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.mark",
          "when": "false"
        },
        {
          "command": "leointeg.markSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.unmark",
          "when": "false"
        },
        {
          "command": "leointeg.unmarkSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.copyNode",
          "when": "false"
        },
        {
          "command": "leointeg.cutNode",
          "when": "false"
        },
        {
          "command": "leointeg.cutNodeSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.pasteNode",
          "when": "false"
        },
        {
          "command": "leointeg.pasteNodeAtSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.pasteNodeAsClone",
          "when": "false"
        },
        {
          "command": "leointeg.pasteNodeAsCloneAtSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.delete",
          "when": "false"
        },
        {
          "command": "leointeg.deleteSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineDown",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineDownSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineLeft",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineLeftSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineRight",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineRightSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineUp",
          "when": "false"
        },
        {
          "command": "leointeg.moveOutlineUpSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.insertNode",
          "when": "false"
        },
        {
          "command": "leointeg.insertNodeSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.insertChildNode",
          "when": "false"
        },
        {
          "command": "leointeg.insertChildNodeSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.cloneNode",
          "when": "false"
        },
        {
          "command": "leointeg.cloneNodeSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.promote",
          "when": "false"
        },
        {
          "command": "leointeg.promoteSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.demote",
          "when": "false"
        },
        {
          "command": "leointeg.demoteSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.sortChildrenSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.sortSiblingsSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.gotoNextClone",
          "when": "false"
        },
        {
          "command": "leointeg.gotoNextCloneSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.gotoFirstVisible",
          "when": "false"
        },
        {
          "command": "leointeg.gotoLastVisible",
          "when": "false"
        },
        {
          "command": "leointeg.gotoFirstSibling",
          "when": "false"
        },
        {
          "command": "leointeg.gotoLastSibling",
          "when": "false"
        },
        {
          "command": "leointeg.gotoNextVisible",
          "when": "false"
        },
        {
          "command": "leointeg.gotoPrevVisible",
          "when": "false"
        },
        {
          "command": "leointeg.contractOrGoLeft",
          "when": "false"
        },
        {
          "command": "leointeg.expandAndGoRight",
          "when": "false"
        },
        {
          "command": "leointeg.scrollTop",
          "when": "false"
        },
        {
          "command": "leointeg.scrollBottom",
          "when": "false"
        },
        {
          "command": "leointeg.pageUp",
          "when": "false"
        },
        {
          "command": "leointeg.pageDown",
          "when": "false"
        },
        {
          "command": "leointeg.gotoNavPrev",
          "when": "false"
        },
        {
          "command": "leointeg.gotoNavNext",
          "when": "false"
        },
        {
          "command": "leointeg.gotoNavFirst",
          "when": "false"
        },
        {
          "command": "leointeg.gotoNavLast",
          "when": "false"
        },
        {
          "command": "leointeg.hoistNode",
          "when": "false"
        },
        {
          "command": "leointeg.hoistSelectionFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.deHoistFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.undoFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.redoFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.revertToUndo",
          "when": "false"
        },
        {
          "command": "leointeg.findNextFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.findPreviousFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.replaceFromOutline",
          "when": "false"
        },
        {
          "command": "leointeg.replaceThenFindFromOutline",
          "when": "false"
        }
      ],
      "explorer/context": [
        {
          "command": "leointeg.openLeoFile",
          "when": "leoBridgeReady && resourceScheme == file && resourceExtname == .leo || leoBridgeReady && resourceScheme == file && resourceExtname == .leojs",
          "group": "navigation@1"
        }
      ],
      "editor/title": [
        {
          "command": "leointeg.prev",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.next",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "navigation@2"
        },
        {
          "command": "leointeg.executeScript",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "navigation@3"
        },
        {
          "command": "leointeg.extract",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "navigation@4"
        },
        {
          "command": "leointeg.extractNames",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "navigation@5"
        },
        {
          "command": "leointeg.importAnyFile",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "navigation@6"
        },
        {
          "command": "leointeg.chapterSelect",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "navigation@7"
        },
        {
          "command": "leointeg.writeDirtyAtFileNodes",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "navigation@8"
        },
        {
          "command": "leointeg.refreshFromDiskSelection",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "navigation@9"
        },
        {
          "command": "leointeg.showSettingsPage",
          "when": "resourceScheme == leointeg",
          "group": "1_leoInteg@1"
        },
        {
          "command": "leointeg.showLogPane",
          "when": "resourceScheme == leointeg && leoBridgeReady",
          "group": "1_leoInteg@2"
        },
        {
          "command": "leointeg.newLeoFile",
          "when": "resourceScheme == leointeg && leoBridgeReady",
          "group": "1_leoInteg1@1"
        },
        {
          "command": "leointeg.openLeoFile",
          "when": "resourceScheme == leointeg && leoBridgeReady",
          "group": "1_leoInteg1@2"
        },
        {
          "command": "leointeg.saveLeoFile",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg1@3"
        },
        {
          "command": "leointeg.saveAsLeoFile",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg1@4"
        },
        {
          "command": "leointeg.sortChildrenSelection",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg2@1"
        },
        {
          "command": "leointeg.sortSiblingsSelection",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg2@2"
        },
        {
          "command": "leointeg.promoteSelection",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg2@3"
        },
        {
          "command": "leointeg.demoteSelection",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg2@4"
        },
        {
          "command": "leointeg.cloneNodeSelection",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg3@1"
        },
        {
          "command": "leointeg.cutNodeSelection",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg3@2"
        },
        {
          "command": "leointeg.copyNodeSelection",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg3@3"
        },
        {
          "command": "leointeg.pasteNodeAtSelection",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg3@4"
        },
        {
          "command": "leointeg.pasteNodeAsCloneAtSelection",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg3@5"
        },
        {
          "command": "leointeg.readFileIntoNode",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg4@2"
        },
        {
          "command": "leointeg.writeFileFromNode",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg4@3"
        },
        {
          "command": "leointeg.writeAtFileNodes",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg4@4"
        },
        {
          "command": "leointeg.writeDirtyAtFileNodes",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg4@5"
        },
        {
          "command": "leointeg.cloneFindAll",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg5@1"
        },
        {
          "command": "leointeg.cloneFindAllFlattened",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg5@2"
        },
        {
          "command": "leointeg.cloneFindMarked",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg5@3"
        },
        {
          "command": "leointeg.cloneFindFlattenedMarked",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg5@4"
        },
        {
          "command": "leointeg.cloneFindParents",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg5@5"
        },
        {
          "command": "leointeg.cloneFindTag",
          "when": "resourceScheme == leointeg && leoTreeOpened",
          "group": "1_leoInteg5@6"
        }
      ],
      "editor/context": [
        {
          "command": "leointeg.findDef",
          "when": "!editorHasMultipleSelections && resourceScheme == leointeg && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.extract",
          "when": "!editorHasMultipleSelections && resourceScheme == leointeg && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.extractNames",
          "when": "editorHasSelection && !editorHasMultipleSelections && resourceScheme == leointeg && leoTreeOpened",
          "group": "navigation@1"
        }
      ],
      "view/title": [
        {
          "command": "leointeg.showSettingsPage",
          "when": "view =~ /^leoDocuments|^leoButtons/ && leoBridgeReady",
          "group": "navigation@9"
        },
        {
          "command": "leointeg.showLogPane",
          "when": "view =~ /^leoDocuments|^leoButtons/ && leoBridgeReady",
          "group": "navigation@9"
        },
        {
          "command": "leointeg.recentLeoFiles",
          "when": "view =~ /^leoDocuments/ && leoBridgeReady",
          "group": "navigation@8"
        },
        {
          "command": "leointeg.recentLeoFiles",
          "when": "view =~ /^leoIntegration/ && leoBridgeReady && !leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.findQuickSelected",
          "when": "view =~ /^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.findQuickTimeline",
          "when": "view =~ /^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.findQuickChanged",
          "when": "view =~ /^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.history",
          "when": "view =~ /^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.markedList",
          "when": "view =~ /^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.showSettingsPage",
          "when": "view =~ /^leoIntegration/ && !leoTreeOpened",
          "group": "navigation@2"
        },
        {
          "command": "leointeg.clearRecentFiles",
          "when": "view =~ /^leoIntegration/ && !leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.connectToServer",
          "when": "view =~ /^leoIntegration/ && !leoBridgeReady && !leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.startServer",
          "when": "view =~ /^leoIntegration/ && !leoBridgeReady && !leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.stopServer",
          "when": "view =~ /^leoIntegration/ && !leoBridgeReady && !leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.openLeoFile",
          "when": "view =~ /^leoIntegration|^leoDocuments/ && leoBridgeReady",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.newLeoFile",
          "when": "view =~ /^leoIntegration|^leoDocuments/ && leoBridgeReady",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.saveLeoFileFromOutline",
          "when": "view =~ /^leoIntegration|^leoDocuments/ && leoTreeOpened && leoTreeTitled",
          "group": "navigation@2"
        },
        {
          "command": "leointeg.saveAsLeoFile",
          "when": "view =~ /^leoIntegration|^leoDocuments/ && leoTreeOpened && !leoTreeTitled",
          "group": "navigation@2"
        },
        {
          "command": "leointeg.saveAsLeoJsFile",
          "when": "view =~ /^leoIntegration|^leoDocuments/ && leoTreeOpened && !leoTreeTitled",
          "group": "navigation@2"
        },
        {
          "command": "leointeg.prevFromOutline",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened",
          "group": "navigation@3"
        },
        {
          "command": "leointeg.nextFromOutline",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened",
          "group": "navigation@4"
        },
        {
          "command": "leointeg.undoFromOutline",
          "when": "view =~ /^leoIntegration|^leoUndo/ && leoTreeOpened",
          "group": "navigation@5"
        },
        {
          "command": "leointeg.redoFromOutline",
          "when": "view =~ /^leoIntegration|^leoUndo/ && leoTreeOpened",
          "group": "navigation@6"
        },
        {
          "command": "leointeg.deHoistFromOutline",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened && !leoTopHoistChapter",
          "group": "navigation@7"
        },
        {
          "command": "leointeg.chapterMain",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened && leoTopHoistChapter",
          "group": "navigation@7"
        },
        {
          "command": "leointeg.hoistSelectionFromOutline",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened",
          "group": "navigation@8"
        },
        {
          "command": "leointeg.findNextFromOutline",
          "when": "view =~ /^leoFindPanel/ && leoTreeOpened",
          "group": "navigation@2"
        },
        {
          "command": "leointeg.findPreviousFromOutline",
          "when": "view =~ /^leoFindPanel/ && leoTreeOpened",
          "group": "navigation@1"
        },
        {
          "command": "leointeg.chapterBack",
          "when": "view =~ /^leoFindPanel|^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@5"
        },
        {
          "command": "leointeg.chapterNext",
          "when": "view =~ /^leoFindPanel|^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@5"
        },
        {
          "command": "leointeg.chapterSelect",
          "when": "view =~ /^leoFindPanel|^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@5"
        },
        {
          "command": "leointeg.chapterMain",
          "when": "view =~ /^leoFindPanel|^leoGotoPanel/ && leoTreeOpened",
          "group": "navigation@6"
        },
        {
          "command": "leointeg.promoteSelectionFromOutline",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened",
          "group": "navigation@9"
        },
        {
          "command": "leointeg.demoteSelectionFromOutline",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened",
          "group": "navigation@10"
        },
        {
          "command": "leointeg.importAnyFile",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened",
          "group": "navigation@11"
        },
        {
          "command": "leointeg.contractAllFromOutline",
          "when": "view =~ /^leoIntegration/ && leoTreeOpened",
          "group": "navigation@12"
        }
      ],
      "view/item/context": [
        {
          "command": "leointeg.saveLeoFileFromOutline",
          "when": "viewItem =~ /^leoDocumentSelectedTitled/",
          "group": "inline@1"
        },
        {
          "command": "leointeg.saveAsLeoFile",
          "when": "viewItem =~ /^leoDocumentSelected/",
          "group": "inline@1"
        },
        {
          "command": "leointeg.saveAsLeoJsFile",
          "when": "viewItem =~ /^leoDocumentSelectedUntitled/",
          "group": "inline@1"
        },
        {
          "command": "leointeg.closeLeoFile",
          "when": "viewItem =~ /^leoDocumentSelected/",
          "group": "inline@2"
        },
        {
          "command": "leointeg.revert",
          "when": "viewItem =~ /^leoDocumentSelected/",
          "group": "leoDocumentContext1@1"
        },
        {
          "command": "leointeg.editHeadline",
          "when": "config.leoIntegration.showEditOnNodes && viewItem =~ /^leoNode/",
          "group": "inline@1"
        },
        {
          "command": "leointeg.insertNode",
          "when": "config.leoIntegration.showAddOnNodes && viewItem =~ /^leoNode/",
          "group": "inline@2"
        },
        {
          "command": "leointeg.copyNode",
          "when": "config.leoIntegration.showCopyOnNodes && viewItem =~ /^leoNode/",
          "group": "inline@3"
        },
        {
          "command": "leointeg.cloneNode",
          "when": "config.leoIntegration.showCloneOnNodes && viewItem =~ /^leoNode/",
          "group": "inline@3"
        },
        {
          "command": "leointeg.mark",
          "when": "config.leoIntegration.showMarkOnNodes && viewItem =~ /^leoNodeUnmarked/",
          "group": "inline@4"
        },
        {
          "command": "leointeg.unmark",
          "when": "config.leoIntegration.showMarkOnNodes && viewItem =~ /^leoNodeMarked/",
          "group": "inline@4"
        },
        {
          "command": "leointeg.openAside",
          "when": "config.leoIntegration.showOpenAside && viewItem =~ /^leoNode/",
          "group": "leoNodeContext1@1"
        },
        {
          "command": "leointeg.hoistNode",
          "when": "viewItem =~ /leoNodeNotRoot/",
          "group": "leoNodeContext1@2"
        },
        {
          "command": "leointeg.deHoist",
          "when": "leoCanDehoist && viewItem =~ /leoNodeRoot/",
          "group": "leoNodeContext1@2"
        },
        {
          "command": "leointeg.refreshFromDisk",
          "when": "viewItem =~ /leoNodeAtFile/",
          "group": "leoNodeContext1@3"
        },
        {
          "command": "leointeg.mark",
          "when": "viewItem =~ /^leoNodeUnmarked/",
          "group": "leoNodeContext2@1"
        },
        {
          "command": "leointeg.unmark",
          "when": "viewItem =~ /^leoNodeMarked/",
          "group": "leoNodeContext2@1"
        },
        {
          "command": "leointeg.tagNode",
          "when": "viewItem =~ /leoNode/",
          "group": "leoNodeContext2@2"
        },
        {
          "command": "leointeg.removeTag",
          "when": "viewItem =~ /leoNodeTags/",
          "group": "leoNodeContext2@3"
        },
        {
          "command": "leointeg.removeTags",
          "when": "viewItem =~ /leoNodeTags/",
          "group": "leoNodeContext2@4"
        },
        {
          "command": "leointeg.copyNode",
          "when": "viewItem =~ /^leoNode/",
          "group": "leoNodeContext2@5"
        },
        {
          "command": "leointeg.cutNode",
          "when": "viewItem =~ /^leoNode/",
          "group": "leoNodeContext2@6"
        },
        {
          "command": "leointeg.pasteNode",
          "when": "viewItem =~ /^leoNode/",
          "group": "leoNodeContext2@7"
        },
        {
          "command": "leointeg.pasteNodeAsClone",
          "when": "viewItem =~ /^leoNode/",
          "group": "leoNodeContext2@8"
        },
        {
          "command": "leointeg.delete",
          "when": "viewItem =~ /^leoNode/",
          "group": "leoNodeContext2@9"
        },
        {
          "command": "leointeg.insertNode",
          "when": "leoTreeOpened && viewItem =~ /^leoNode/",
          "group": "leoNodeContext3@1"
        },
        {
          "command": "leointeg.cloneNode",
          "when": "leoTreeOpened && viewItem =~ /^leoNode/",
          "group": "leoNodeContext3@2"
        },
        {
          "command": "leointeg.gotoNextClone",
          "when": "leoTreeOpened && viewItem =~ /leoNodeCloned/",
          "group": "leoNodeContext3@3"
        },
        {
          "command": "leointeg.clickButton",
          "when": "leoTreeOpened && viewItem =~ /^leoButtonNode|^leoButtonAdd/",
          "group": "inline@1"
        },
        {
          "command": "leointeg.removeButton",
          "when": "leoTreeOpened && viewItem =~ /^leoButtonNode/",
          "group": "leoButtonContext1@1"
        },
        {
          "command": "leointeg.gotoScript",
          "when": "leoTreeOpened && viewItem =~ /^leoButtonNode/",
          "group": "leoButtonContext1@2"
        },
        {
          "command": "leointeg.revertToUndo",
          "when": "leoTreeOpened && viewItem =~ /^leoUndoNode/",
          "group": "leoUndosContext1@1"
        }
      ],
      "extension/context": [
        {
          "command": "leointeg.showSettingsPage",
          "when": "extension =~ /^boltex.leointeg/ && extensionStatus == installed",
          "group": "3_leointeg@1"
        }
      ]
    },
    "keybindings": [
      {
        "command": "leointeg.executeScript",
        "key": "ctrl+b",
        "mac": "cmd+b",
        "when": "leoEditHeadline || leoTreeOpened && editorTextFocus && resourceScheme == leointeg || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.minibuffer",
        "key": "alt+x",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.showOutline",
        "key": "alt+t",
        "when": "leoEditHeadline || leoTreeOpened && editorTextFocus && resourceScheme =~ /^leointeg/ || leoFindFocus || focusedView =~ /^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.showOutline",
        "key": "ctrl+t",
        "mac": "cmd+t",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme =~ /^leointeg/"
      },
      {
        "command": "leointeg.showBody",
        "key": "ctrl+t",
        "mac": "cmd+t",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.showBody",
        "key": "alt+d",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointegDetached || leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.showBody",
        "key": "ctrl+g",
        "mac": "cmd+g",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointegDetached || leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.showBody",
        "key": "tab",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.showBody",
        "key": "enter",
        "when": "config.leoIntegration.leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.tabCycleNext",
        "key": "ctrl+tab",
        "mac": "cmd+tab",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme =~ /^leointeg/"
      },
      {
        "command": "leointeg.saveLeoFileFromOutline",
        "key": "ctrl+s",
        "mac": "cmd+s",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.saveLeoFile",
        "key": "ctrl+s",
        "mac": "cmd+s",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme =~ /^leointeg/"
      },
      {
        "command": "leointeg.newLeoFile",
        "key": "ctrl+n",
        "mac": "cmd+n",
        "when": "leoEditHeadline || editorTextFocus && resourceScheme =~ /^leointeg/ || leoFindFocus || sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.openLeoFile",
        "key": "ctrl+o",
        "mac": "cmd+o",
        "when": "leoEditHeadline || editorTextFocus && resourceScheme =~ /^leointeg/ || leoFindFocus || sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.writeAtFileNodes",
        "key": "ctrl+shift+w",
        "mac": "cmd+shift+w",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme =~ /^leointeg/"
      },
      {
        "command": "leointeg.writeAtFileNodesFromOutline",
        "key": "ctrl+shift+w",
        "mac": "cmd+shift+w",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.writeDirtyAtFileNodes",
        "key": "ctrl+shift+q",
        "mac": "cmd+shift+q",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme =~ /^leointeg/"
      },
      {
        "command": "leointeg.writeDirtyAtFileNodesFromOutline",
        "key": "ctrl+shift+q",
        "mac": "cmd+shift+q",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.contractAll",
        "key": "alt+-",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme =~ /^leointeg/"
      },
      {
        "command": "leointeg.contractAllFromOutline",
        "key": "alt+-",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.editSelectedHeadline",
        "key": "ctrl+h",
        "mac": "cmd+h",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.editSelectedHeadlineFromOutline",
        "key": "ctrl+h",
        "mac": "cmd+h",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoFindPanel|^leoDocuments|^leoButtons/"
      },
      {
        "command": "leointeg.markSelection",
        "key": "ctrl+m",
        "mac": "cmd+m",
        "when": "leoTreeOpened && !leoMarked && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.markSelectionFromOutline",
        "key": "ctrl+m",
        "mac": "cmd+m",
        "when": "leoEditHeadline || leoTreeOpened && !leoMarked && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.unmarkSelection",
        "key": "ctrl+m",
        "mac": "cmd+m",
        "when": "leoTreeOpened && leoMarked && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.unmarkSelectionFromOutline",
        "key": "ctrl+m",
        "mac": "cmd+m",
        "when": "leoEditHeadline || leoTreeOpened && leoMarked && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.extract",
        "key": "ctrl+shift+d",
        "mac": "cmd+shift+d",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/ || leoTreeOpened && editorTextFocus && editorHasSelection && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.extractNames",
        "key": "ctrl+shift+n",
        "mac": "cmd+shift+n",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/ || leoTreeOpened && editorTextFocus && editorHasSelection && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.moveOutlineDownSelection",
        "key": "ctrl+d",
        "mac": "cmd+d",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.moveOutlineDownSelection",
        "key": "shift+alt+down",
        "mac": "shift+alt+down",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.moveOutlineDownSelectionFromOutline",
        "key": "ctrl+d",
        "mac": "cmd+d",
        "when": "leoEditHeadline || leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineDownSelectionFromOutline",
        "key": "shift+down",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineDownSelectionFromOutline",
        "key": "shift+alt+down",
        "mac": "shift+alt+down",
        "when": "leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineLeftSelection",
        "key": "ctrl+l",
        "mac": "cmd+l",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.moveOutlineLeftSelection",
        "key": "shift+alt+left",
        "mac": "shift+alt+left",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.moveOutlineLeftSelectionFromOutline",
        "key": "ctrl+l",
        "mac": "cmd+l",
        "when": "leoEditHeadline || leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineLeftSelectionFromOutline",
        "key": "shift+left",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineLeftSelectionFromOutline",
        "key": "shift+alt+left",
        "mac": "shift+alt+left",
        "when": "leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineRightSelection",
        "key": "ctrl+r",
        "mac": "cmd+r",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.moveOutlineRightSelection",
        "key": "shift+alt+right",
        "mac": "shift+alt+right",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.moveOutlineRightSelectionFromOutline",
        "key": "ctrl+r",
        "mac": "cmd+r",
        "when": "leoEditHeadline || leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineRightSelectionFromOutline",
        "key": "shift+right",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineRightSelectionFromOutline",
        "key": "shift+alt+right",
        "mac": "shift+alt+right",
        "when": "leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineUpSelection",
        "key": "ctrl+u",
        "mac": "cmd+u",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.moveOutlineUpSelection",
        "key": "shift+alt+up",
        "mac": "shift+alt+up",
        "when": "leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.moveOutlineUpSelectionFromOutline",
        "key": "ctrl+u",
        "mac": "cmd+u",
        "when": "leoEditHeadline || leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineUpSelectionFromOutline",
        "key": "shift+up",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.moveOutlineUpSelectionFromOutline",
        "key": "shift+alt+up",
        "mac": "shift+alt+up",
        "when": "leoTreeOpened && !editorHasSelection && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.sortSiblingsSelection",
        "key": "alt+a",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.sortSiblingsSelectionFromOutline",
        "key": "alt+a",
        "when": "leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.promoteSelection",
        "key": "ctrl+[BracketLeft]",
        "win": "ctrl+oem_4",
        "linux": "ctrl+[",
        "mac": "cmd+[BracketLeft]",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.promoteSelectionFromOutline",
        "key": "ctrl+[BracketLeft]",
        "win": "ctrl+oem_4",
        "linux": "ctrl+[",
        "mac": "cmd+[BracketLeft]",
        "when": "leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.demoteSelection",
        "key": "ctrl+[BracketRight]",
        "win": "ctrl+oem_6",
        "linux": "ctrl+]",
        "mac": "cmd+[BracketRight]",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.demoteSelectionFromOutline",
        "key": "ctrl+[BracketRight]",
        "win": "ctrl+oem_6",
        "linux": "ctrl+]",
        "mac": "cmd+[BracketRight]",
        "when": "leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.insertNodeSelection",
        "key": "ctrl+i",
        "mac": "cmd+i",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.insertNodeSelectionFromOutline",
        "key": "ctrl+i",
        "mac": "cmd+i",
        "when": "leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.insertNodeSelection",
        "key": "shift+insert",
        "mac": "shift+insert",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.insertNodeSelectionFromOutline",
        "key": "shift+insert",
        "mac": "shift+insert",
        "when": "leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.insertNodeSelectionFromOutline",
        "key": "insert",
        "mac": "insert",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.insertChildNodeSelection",
        "key": "ctrl+insert",
        "mac": "cmd+insert",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.insertChildNodeSelectionFromOutline",
        "key": "ctrl+insert",
        "mac": "cmd+insert",
        "when": "leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.cloneNodeSelection",
        "key": "ctrl+`",
        "win": "ctrl+oem_3",
        "linux": "ctrl+`",
        "mac": "cmd+`",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.cloneNodeSelectionFromOutline",
        "key": "ctrl+`",
        "win": "ctrl+oem_3",
        "linux": "ctrl+`",
        "mac": "cmd+`",
        "when": "leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.cutNodeSelection",
        "key": "ctrl+shift+x",
        "mac": "cmd+shift+x",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.cutNodeSelectionFromOutline",
        "key": "ctrl+shift+x",
        "mac": "cmd+shift+x",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments/"
      },
      {
        "command": "leointeg.copyNodeSelection",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.pasteNodeAtSelection",
        "key": "ctrl+shift+v",
        "mac": "cmd+shift+v",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.pasteNodeAtSelectionFromOutline",
        "key": "ctrl+shift+v",
        "mac": "cmd+shift+v",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments/"
      },
      {
        "command": "leointeg.deleteSelection",
        "key": "ctrl+shift+backspace",
        "mac": "cmd+shift+backspace",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.deleteSelectionFromOutline",
        "key": "ctrl+shift+backspace",
        "mac": "cmd+shift+backspace",
        "when": "leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.deleteSelectionFromOutline",
        "key": "delete",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.undoFromOutline",
        "key": "ctrl+z",
        "mac": "cmd+z",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && !inputFocus && !editorTextFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.redoFromOutline",
        "key": "ctrl+shift+z",
        "mac": "cmd+shift+z",
        "when": "leoFindFocus || leoTreeOpened && sideBarFocus && !inputFocus && !editorTextFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.goAnywhere",
        "key": "ctrl+p",
        "mac": "cmd+p",
        "when": "config.leoIntegration.goAnywhereShortcut && leoEditHeadline || config.leoIntegration.goAnywhereShortcut && leoTreeOpened && sideBarFocus && !editorFocus && !editorTextFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || config.leoIntegration.goAnywhereShortcut && leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.startSearch",
        "key": "ctrl+f",
        "mac": "cmd+f",
        "when": "leoEditHeadline || leoTreeOpened && sideBarFocus && !editorFocus && !editorTextFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.findQuick",
        "key": "ctrl+shift+f",
        "mac": "cmd+shift+f",
        "when": "leoEditHeadline || leoTreeOpened && sideBarFocus && !editorFocus && !editorTextFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.findNextFromOutline",
        "key": "f3",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && !editorTextFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.findNext",
        "key": "f3",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.findPreviousFromOutline",
        "key": "f2",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && !editorTextFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.findPrevious",
        "key": "f2",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.replace",
        "key": "ctrl+=",
        "mac": "cmd+=",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.replaceFromOutline",
        "key": "ctrl+=",
        "mac": "cmd+=",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.replaceThenFind",
        "key": "ctrl+-",
        "mac": "cmd+-",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.replaceThenFindFromOutline",
        "key": "ctrl+-",
        "mac": "cmd+-",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/"
      },
      {
        "command": "leointeg.gotoGlobalLine",
        "key": "alt+g",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.setFindEverywhereOption",
        "key": "ctrl+alt+e",
        "mac": "cmd+alt+e",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.setFindNodeOnlyOption",
        "key": "ctrl+alt+n",
        "mac": "cmd+alt+n",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.setFindFileOnlyOption",
        "key": "ctrl+alt+l",
        "mac": "cmd+alt+l",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.setFindSuboutlineOnlyOption",
        "key": "ctrl+alt+s",
        "mac": "cmd+alt+s",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.toggleFindIgnoreCaseOption",
        "key": "ctrl+alt+i",
        "mac": "cmd+alt+i",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.toggleFindMarkChangesOption",
        "key": "ctrl+alt+c",
        "mac": "cmd+alt+c",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.toggleFindMarkFindsOption",
        "key": "ctrl+alt+f",
        "mac": "cmd+alt+f",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.toggleFindRegexpOption",
        "key": "ctrl+alt+x",
        "mac": "cmd+alt+x",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.toggleFindWordOption",
        "key": "ctrl+alt+w",
        "mac": "cmd+alt+w",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.toggleFindSearchBodyOption",
        "key": "ctrl+alt+b",
        "mac": "cmd+alt+b",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.toggleFindSearchHeadlineOption",
        "key": "ctrl+alt+h",
        "mac": "cmd+alt+h",
        "when": "leoEditHeadline || leoFindFocus || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoUndos|^leoFindPanel|^leoDocuments|^leoGoto|^leoButtons/ || leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.scrollTop",
        "key": "alt+home",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments/ || leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.scrollBottom",
        "key": "alt+end",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments/ || leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.scrollTop",
        "key": "home",
        "when": "config.leoIntegration.leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoNavFirst",
        "key": "home",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoGoto/"
      },
      {
        "command": "leointeg.scrollBottom",
        "key": "end",
        "when": "config.leoIntegration.leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoNavLast",
        "key": "end",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoGoto/"
      },
      {
        "command": "leointeg.pageUp",
        "key": "pageup",
        "when": "config.leoIntegration.leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoNavFirst",
        "key": "pageup",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoGoto/"
      },
      {
        "command": "leointeg.pageDown",
        "key": "pagedown",
        "when": "config.leoIntegration.leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoNavLast",
        "key": "pagedown",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoGoto/"
      },
      {
        "command": "leointeg.gotoNextCloneSelectionFromOutline",
        "key": "alt+n",
        "when": "leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoNextCloneSelection",
        "key": "alt+n",
        "when": "leoTreeOpened && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.gotoNextVisible",
        "key": "down",
        "when": "config.leoIntegration.leoTreeBrowse && leoEditHeadline || config.leoIntegration.leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoNavNext",
        "key": "down",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoGoto/"
      },
      {
        "command": "leointeg.gotoNextVisible",
        "key": "alt+down",
        "when": "leoTreeOpened && leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments/ || leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.gotoPrevVisible",
        "key": "up",
        "when": "config.leoIntegration.leoTreeBrowse && leoEditHeadline || config.leoIntegration.leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.gotoNavPrev",
        "key": "up",
        "when": "leoTreeOpened && sideBarFocus && focusedView =~ /^leoGoto/"
      },
      {
        "command": "leointeg.gotoPrevVisible",
        "key": "alt+up",
        "when": "leoTreeOpened && leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments/ || leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.contractOrGoLeft",
        "key": "left",
        "when": "config.leoIntegration.leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.contractOrGoLeft",
        "key": "alt+left",
        "when": "leoTreeOpened && leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments/ || leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "leointeg.expandAndGoRight",
        "key": "right",
        "when": "config.leoIntegration.leoTreeBrowse && leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration/"
      },
      {
        "command": "leointeg.expandAndGoRight",
        "key": "alt+right",
        "when": "leoTreeOpened && leoEditHeadline || leoTreeOpened && sideBarFocus && focusedView =~ /^leoIntegration|^leoDocuments/ || leoTreeOpened && !editorHasSelection && editorTextFocus && resourceScheme == leointeg"
      },
      {
        "command": "workbench.files.action.collapseExplorerFolders",
        "key": "alt+-",
        "when": "config.leoIntegration.collapseAllShortcut && !inSearchEditor && !sideBarFocus && resourceScheme == untitled || config.leoIntegration.collapseAllShortcut && !inSearchEditor && !sideBarFocus && resourceScheme == file || config.leoIntegration.collapseAllShortcut && !inSearchEditor && explorerViewletFocus"
      },
      {
        "command": "workbench.view.extension.leoIntegrationView",
        "key": "ctrl+shift+l",
        "when": "!config.leojs.activityViewShortcut && config.leoIntegration.activityViewShortcut && !editorHasSelection && !inSearchEditor && focusedView != workbench.view.search"
      }
    ],
    "resourceLabelFormatters": [
      {
        "scheme": "leointeg",
        "formatting": {
          "label": "Leo: Body",
          "separator": "/",
          "workspaceSuffix": "",
          "workspaceTooltip": "Leo Body Pane"
        }
      },
      {
        "scheme": "leointegDetached",
        "formatting": {
          "label": "Leo: Detached",
          "separator": "/",
          "workspaceSuffix": "",
          "workspaceTooltip": "Leo Detached Body Pane"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/lodash": "^4.14.177",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@types/vscode": "^1.86.0",
    "@types/ws": "^7.2.6",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.3",
    "typescript": "^5.1.3",
    "webpack": "^5.85.0",
    "webpack-cli": "^5.1.1",
    "@vscode/test-electron": "^2.3.2"
  },
  "dependencies": {
    "bufferutil": "^4.0.1",
    "hasbin": "^1.2.3",
    "lodash": "^4.17.21",
    "portfinder": "^1.0.28",
    "tree-kill": "^1.2.2",
    "ws": "^7.4.6"
  }
}